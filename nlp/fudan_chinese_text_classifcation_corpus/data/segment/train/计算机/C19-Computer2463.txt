软件 学报 
 JOURNAL   OF   SOFTWARE 
 2000 　 Vol.11 　 No.2 　 P.195 - 201 
 
 
 
 汉语 最长 名词 短语 的 自动识别 
 周强 　 孙茂松 　 黄 昌宁 
 摘 　 要 ： 通过 对 包含 5573 个 汉语 句子 的 语料 文本 中 的 最长 名词 短语 的 分布 特点 的 统计分析 , 提出 了 两种 有效 的 汉语 最长 名词 短语 自动识别 算法 ： 基于 边界 分布 概率 的 识别 算法 和 基于 内部结构 组合 的 识别 算法 . 实验 结果显示 , 后者 的 识别 正确率 和 召回 率 分别 达到 了 85.4% 和 82.3% , 取得 了 较 好 的 自动识别 效果 . 
 关键词 ： 最长 名词 短语 , 边界 识别 , 句法分析 . 
 分类号 ： TP18 
 Automatic   Identification   of   Chinese   Maximal   Noun   Phrases 
 ZHOU   Qiang 　 SUN   Mao - song 　 HUANG   Chang - ning 
 ( State   Key   Laboratory   of   Intelligent   Technology   and   Systems   Beijing , 100084 ) 
 ZHOU   Qiang 　 SUN   Mao - song 　 HUANG   Chang - ning 
 ( Department   of   Computer   Science   and   Technology   Tsinghua   University , Beijing , 100084 ) 
 Abstract ： Based   on   the   statistical   characteristics   of   Chinese   maximal   noun   phrases   ( MNPs )   in   a   Chinese   corpus   with   5   573   sentences , two   efficient   identifying   algorithms   for   Chinese   MNPs : ( 1 )   To   identify   MNPs   by   using   boundary   distribution   probabilities ;   ( 2 )   To   identify   MNPs   by   using   internal   structure   rules , are   proposed   in   this   paper . Experimental   results   show   better   performances : precision   85.4%   and   recall   82.3% , by   using   identifying   algorithm   ( 2 ) . 
 Key   words ： Maximal   noun   phrase , boundary   identification , syntax   parsing . ▲ 
 　 　 在 自然语言 句子 的 理解 过程 中 , 能否 准确 地 识别 其中 的 名词 短语 ( np ) 起 着 很 重要 的 作用 . 按照 认知科学 的 观点 , 人类 必须 首先 识别 、 学习 和 理解 文本 中 的 实体 ( entity ) 或者 概念 （ 具体 的 或 抽象 的 ） , 才能 很 好 地 理解 自然语言 文本 , 而 这些 实体 和 概念 大都 是 由 文本 句子 中 的 名词 短语 所 描述 的 . 因此 , 如果 我们 掌握 了 文本 中 的 名词 短语 , 就 可以 在 很大 程度 上 把握 文本 所 表达 的 主要 意思 . 
 　 　 从 组成 结构 上 看 , 句子 中 的 名词 短语 可 分为 以下 3 类 ： ( 1 )   最短 名词 短语 ( minimal   noun   phrase , 简称 mNP ) ： 不 包含 其他 任何 名词 短语 的 名词 短语 ； ( 2 )   最长 名词 短语 ( maximal   noun   phrase , 简称 MNP ) ： 不 被 其他 任何 名词 短语 所 包含 的 名词 短语 ； ( 3 )   一般 名词 短语 ( general   noun   phrase , 简称 GNP ) ： 所有 不是 mNP 和 MNP 的 名词 短语 . 从 mNP 到 GNP 再 到 MNP , 自动识别 的 难度 是 在 不断 增加 的 . 而 在 自然语言 处理 领域 中 , MNP 的 自动识别 具有 更为重要 的 意义 . 因为 我们 一旦 很 好 地 识别 出 了 句子 中 所有 的 MNP , 就 可以 很 方便 地 把握 句子 的 整体 结构 框架 , 从而 很快 构建 出 句子 的 完整 句法树 （ 森林 ） . 
 　 　 正是 认识 到 了 这 一点 , 近几年来 , 许多 研究 人员 在 MNP 的 自动识别 方面 进行 了 许多 有益 的 探索 , 提出 了 一些 行之有效 的 识别方法 . 在 英语 方面 的 工作 主要 有 ： ( 1 )   Church 的 简单 名词 短语 抽取 器 ［ 1 ］ , 利用 概率 矩阵 信息 来 确定 句子 中 np 的 起始 和 终止 位置 . ( 2 )   Bourigault 的 术语 抽取 器 LEXTER ［ 2 ］ , 通过 构造 两个 阶段 的 自动 分析器 发现 文本 中 的 术语 （ 即 部分 MNP ） . ( 3 )   Voutilainen 的 MNP 获取 工具 ： NPTool ［ 3 ］ , 利用 两种 有限 状态 分析 机制 （ NP - 否定 机制 和 NP - 肯定 机制 ） 来 发现 文本 中 可能 的 MNP . ( 4 )   Kuang - hua   Chen 等 人 的 工作 ［ 4 ］ , 利用 统计 分块 ( chunking ) 和 有限 状态 分析 相结合 的 方法 来 发现 句子 中 的 名词 短语 . 
 　 　 英语 MNP 自动识别 的 难点 在于 解决 各个 成分 之间 的 联结 ( attachment ) 关系 歧义 . 相比之下 , 汉语 MNP 的 识别 则 更为 困难 , 这 是 由 汉语 句法 成分 特有 的 套叠 现象 ［ 5 ］ 所 决定 的 . 与 英语 不同 的 是 , 汉语 中 的 任何 句法 成分 都 可以 不 经过 任何 形态 变化 , 只 需 加上 一个 结构 助词 “ 的 ” , 就 可以 充当 一个 np 的 定语 ( 当然 , 前提 是 两者之间 可以 存在 修饰 和 被 修饰 的 关系 ) 而 形成 一个 更长 的 np . 这 就 大大增加 了 汉语 MNP 自动识别 的 难度 . 
 　 　 从 这几年来 的 一些 研究 实践 来看 , 自动 处理 效果 并 不是 很 理想 . 主要 的 研究 工作 包括 ： ( 1 )   李文捷 等 人 ［ 6 ］ 利用 边界 分布 信息 构造 概率模型 而 进行 的 MNP 自动识别 实验 , 其 开放 测试 的 识别 正确率 达到 了 71.3% （ 在 30 篇 新闻报道 语料 中 ） . ( 2 )   Angel   S . T . Tse 等 人 ［ 7 ］ 利用 统计 和 规则 相结合 的 方法 , 构造 了 “ 的 ” 字 名词 短语 自动 分析器 . 实验 结果 为 ： 识别 正确率 为 75% , 召回 率为 90% （ 在 15 篇 汉语 文本 中 ） . 
 　 　 本文 提出 了 一种 自动识别 汉语 MNP 的 新 方法 . 它 在 对 输入 文本 进行 组块 分析 预处理 的 基础 上 , 通过 充分利用 np 边界 分布 信息 和 np 内部结构 组成 知识 , 构造 形成 了 高效 的 汉语 MNP 自动 识别器 . 在 约 7 万词 的 汉语 语料 上 进行 的 MNP 识别 实验 显示 , 正确率 达到 了 85.4% , 召回 率为 82.3% , 取得 了 较为 令人满意 的 识别 效果 . 
 1 　 最长 名词 短语 的 自动识别 
 　 　 图 1 给出 的 是 我们 进行 汉语 最长 名词 短语 自动识别 的 基本 流程图 . 以 经过 正确 切分 和 词性 标注 处理 的 汉语 句子 作为 分析器 输入 , MNP 的 自动识别 主要 分 两个 阶段 进行 . 首先 , 对 输入 句子 进行 分 层次 的 预处理 , 包括 自动 发现 一些 特殊 的 成分 组 , 如 标点 分隔 结构 、 并列结构 、 固定 搭配 结构 等 , 并 在 各个 成分 组 内部 及 成分 组 之间 进行 词语 块 的 成分 边界 预测 , 即 确定 每个 词语 是 处于 成分 的 左 边界 、 右 边界 还是 中间 位置 . 然后 , 通过 构造 不同 的 MNP 识别 算法 , 准确 地 确定 其中 哪些 成分 边界 是 MNP 的 左右 边界 . 下面 给出 了 一个 具体 的 分析 实例 . 
 
 Fig.1 　 Overview   of   maximal   noun   phraes   identifier 
 图 1 　 MNP 自动识别 的 基本 流程图 
 　 　 ( a )   输入 句子 ： 我 / r 爸爸 / n 会 / v 做 / v 书架 / n , / w 这个 / r 书架 / n 是 / v 爸爸 / n 去年 / t 做 / v 的 / u 。 / w . 
 　 　 ( b )   预处理 结果   ： { { 我 / r 爸爸 / n ］ ［ 会 / v ［ 做 / v 书架 / n } , / w { 这个 / r 书架 / n ］ ［ 是 / v ［ 爸爸 / n ［ 去年 / t 做 / v ］ 的 / u } 。 / w } . 
 　 　 ( c )   MNP 识别 结果 （ 应 识别 出 3 个 MNP ） ： { MNP 我 / r 爸爸 / n }   会 / v   做 / v   书架 / n , / w { MNP 这个 / r 书架 / n } 是 / v { MNP 爸爸 / n 去年 / t 做 / v 的 / u } 。 / w . 
 　 　 在 下面 的 几节 中 , 我们 将 对 有关 的 内容 进行 详细 的 说明 . 
 1.1 　 MNP 识别 的 预处理 
 　 　 对 输入 句子 进行 预处理 的 目标 , 是 将 输入 的 〈 词语 , 词类 〉 对 的 线形 序列 转化 为 包含 成分 边界 信息 的 组块 序列 , 从而 为 进一步 的 句法分析 , 如 识别 句子 中 的 MNP , 构建 句子 的 句法结构 树 提供 有力 的 支持 . 
 　 　 假设 输入 句子 S = 〈 W , T 〉 , 其中 W = w1 , w2 , ... , wn 为 句子 的 词语 串 , T = t1 , t2 , ... , tn 为 各 词语 相应 的 词类 标记 串 , 则 预处理 过程 应 得到 这样 的 组块 描述 序列 ： CH = { CG , WS } , 其中 CG = { cgij } , 表示 若干 从 词语 位置 i 开始 到 词语 位置 j 结束 的 成分 组 , WS = ws1 , ws2 , ... , wsn , 表示 标注 了 成分 边界 预测 信息 的 词语 块 序列 , 其中 wsi = 〈 wi , ti , bpi   〉 , bpi 可 取值 0 , 1 , 2 , 分别 表示 此 词语 处于 成分 的 中间 位置 、 左 边界 和 右 边界 . 有关 成分 组和 词语 块 的 详细 定义 可 参阅 文献 ［ 8 ］ 中 的 汉语 组块 分析 标注 体系 描述 . 
 　 　 在 我们 目前 的 组块 分析 体系 中 , 主要 定义 了 以下 几个 成分 组 ： 
 　 　 ( 1 )   标点 分隔 结构 ( punctuation   seperated   structure , 简称 PS ) , 如 { 《   鲁迅   全集   》 } . 
 　 　 ( 2 )   固定 搭配 结构 ( collocation   structure , 简称 COS ) , 如 { 当   老师   进来   的   时候 } . 
 　 　 ( 3 )   并列结构 ( CS ) 及 并列 成分 ( conjunction   constituent 简称 CC ) , 如 { { 发现   人才 } 、 { 培养   人才 } 和 { 使用   人才 } } . 
 　 　 它们 一般 具有 这样 的 句法 特征 ： ( 1 )   成分 组 内部 的 成分 只 与 成分 组 内部 的 其他 成分 发生 句法 作用 . ( 2 )   整个 成分 组 作为 一个 整体 与 句子 中 的 其他 成分 发生 句法 作用 . 通过 利用 一些 特殊 词语 项 , 如 上面 例子 中加 下划线 的 词项 , 或 一些 特殊 的 结构特征 , 如 并列结构 的 并列 成分 之间 存在 着 较 强 的 内容 相似性 等 , 可以 构造 出 简单 而 有效 的 识别 算法 来 自动 发现 句子 中 所有 可能 的 成分 组 , 有关 的 详细 算法 可 参阅 文献 ［ 9 ］ . 
 　 　 而 对于 词语 块 中 的 成分 边界 信息 , 则 可以 通过 构造 如下 的 统计 模型 来 进行 自动 预测 ： 考虑 词语 序列 〈 Wij , Tij   〉 , 选择 合适 的 成分 边界 标记 序列 BPij = bpi , bpi + 1 , ... , bpj , 使得 P ( BPij | Wij , Tij ) 达到 最大 . 文献 ［ 10 ］ 给出 了 具体 的 预测 算法 . 
 1.2 　 MNP 自动 识别器 
 　 　 MNP 自动 识别器 的 处理 目标 是 在 成分 边界 预测 信息 的 基础 上 , 准确 地 确定 句子 中 所有 MNP 的 左右 边界 . 利用 不同 的 树库 统计 知识 , 我们 构造 了 两种 识别 算法 ： ( 1 )   基于 np 边界 分布 概率 的 识别 算法 （ 算法 1 ） . ( 2 )   基于 np 内部结构 组合 的 识别 算法 （ 算法 2 ） . 
 1.2 . 1 　 基于 np 边界 分布 概率 的 识别 算法 
 　 　 首先 , 对于 经 预处理 得到 所有 成分 左右 边界 , 进行 以下 处理 ： 
 　 　 . 如果 P ( npL | ti - 1 , bpi = 1 , ti ) > α , 则 设置 此 边界 为 可能 的 MNP 左 边界 . 
 　 　 . 如果 P ( npR | ti , bpi = 2 , ti + 1 ) > β , 则 设置 此 边界 为 可能 的 MNP 右 边界 . 
 其中 两个 概率 阈值 α 和 β 的 设置 需要 兼顾 以下 两个 目标 ： ( 1 )   尽可能 排除 统计 噪声 的 影响 , 即 不至于 发现 许多 无 意义 的 MNP 边界 ； ( 2 )   尽可能 保留 真正 的 MNP 边界 . 参照 实验 语料 中 的 MNP 左右 边界 的 概率分布 信息 , 我们 选择 了 以下 两个 概率 阈值 ： α = 0.05 , β = 0.15 , 基本上 达到 了 以上 目标 . 
 　 　 为了 确定 以上 发现 的 哪个 左右 边界 对 可以 形成 真正 的 MNP , 我们 设计 了 一个 NP 栈 结构 . 在 此基础 上 实现 了 以下 的 MNP 组合 算法 , 即 顺序 处理 所有 可能 的 MNP 边界 ； 若 是 左 边界 , 则 压入 NP 栈中 , 否则 , 检查 它 是否 能 与 栈顶 元素 组合 , 若 是 , 则 弹 出栈 顶 元素 ， 并 组合 形成 一个 可能 的 MNP , 此 过程 不断 进行 , 直至 不能 组合 为止 ； 将 形成 的 MNP 压入 NP 栈中 , 继续 处理 下 一个 MNP 边界 直至 句子 结束 . 最后 ， 通过 检索 NP 栈 , 就 可以 输出 所 识别 出 的 所有 MNP . 
 1.2 . 2 　 基于 np 内部结构 组合 的 识别 算法 
 　 　 从 实验 结果 （ 见 下 一节 ） 来看 , 仅仅 依据 np 边界 分布 概率 , MNP 自动识别 效果 并 不是 很 理想 . 为此 , 我们 设计 了 一个 新 的 MNP 识别 算法 （ 算法 2 ） , 其 基本思路 是 利用 np 内部结构 组合 知识 构造 自 底向上 的 MNP 部分 分析器 . 
 　 　 在 文献 ［ 11 ］ 中 , 我们 曾 提出 一种 基于 括号 匹配 原理 的 汉语 句法分析 方法 , 它 在 经过 成分 边界 预处理 的 输入 句子 上 , 通过 括号 匹配 操作 发现 句子 中 所有 可能 的 句法 成分 , 以 形成 输入 句子 的 完整 分析树 （ 森林 ） . 通过 对 这 一 算法 的 适当 简化 , 并 充分考虑 MNP 的 结构 分布 特点 , 我们 构造 了 一个 新 的 MNP 识别 算法 , 其 基本 内容 如下 . 
 　 　 背景 知识 ： 句法结构 归约 规则 ： { 结构 组合 → { 句法 标记 } } 
 　 　 基本操作 ： 
 　 　 　 　 ①   组合 基本成分 ( bc ) 
 　 　 　 　 若 词语 块 序列 wsi , ... , wsj 满足 以下 条件 , 则 它们 可 形成 一个 基本成分 ： 
 　 　 　 　 　 　 ( a )   bpi = 1 , bpj = 2 
 　 　 　 　 　 　 ( b )   wsk , k ∈ ( i , j ) , 有 bpk = 0 
 　 　 　 　 ②   发现 可能 的 MNP 右 边界 成分 
 　 　 　 　 按照 MNP 的 结构 分布 规律 , 具有 以下 特征 的 成分 可能 成为 MNP 的 右 边界 ： 
 　 　 　 　 　 　 ( a )   词语 块 wsi = 〈 “ 的 ” , uJDE , 2 〉 
 　 　 　 　 　 　 ( b )   词语 块 wsi = 〈 * , n , 2 〉 
 　 　 　 　 　 　 ( c )   被 归约 为 np 的 基本成分 
 　 　 　 　 　 　 ( d )   其他 可能 成为 MNP 中心 成分 的 词语 块 或 基本成分 
 　 　 　 ③   向 左 扩展 组合 MNP 
 　 　 　 　 从 可能 的 MNP 右 边界 成分 出发 , 不断 与其 左 相邻 成分 组合 形成 新 的 MNP , 直至 不能 组合 为止 . 
 　 　 主控 结构 ： NP 栈 （ 类似 算法 1 ） 
 　 　 基本 流程 ： 从 左向右 扫描 整个 句子 , 顺序 执行 基本操作 ① 、 ② 和 ③ , 直至 句子 结束 . 
 2 　 实验 结果 分析 
 　 　 我们 的 MNP 识别 实验 采用 了 约 9 万字 规模 的 树库 语料 作为 测试 样本 . 利用 其中 正确 标注 的 MNP 作为 评价 标准 , 可以 方便 地 对 自动识别 结果 进行 评估 , 从而 可以 对 MNP 自动 识别器 的 处理 性能 有 一个 客观 而 全面 的 认识 . 
 2.1 　 预处理 结果 分析 
 　 　 对于 两种 不同 层次 的 预处理 结果 , 我们 定义 了 以下 几个 评价 指标 ： 
 　 　 ( 1 )   成分 组 边界 正确率 ( constituent   group   precision , 简称 CGP ) = 具有 正确 的 边界 位置 的 成分 组 总数 ( Cort － CG ) / 识别 出 的 成分 组 总数 ( sum   of   identified   constituent   group , 简称 SCG ) . 
 　 　 ( 2 )   成分 组 边界 交叉 率 ( constituent   group   crossing   ration , 简称 CGR ) = 与 树库 成分 交叉 的 成分 组 总数 ( Crossed － CG ) / 识别 出 的 成分 组 总数 ( SCG ) . 
 　 　 ( 3 )   词语 块 界定 预测 正确率 ( word   stem   precision , 简称 WSP ) = 具有 正确 成分 边界 预测 的 词语 块 总数 ( Cort － BP ) / 语料 中 的 词项 总数 ( WSSum ) . 
 　 　 表 1 和表 2 列出 了 有关 的 实验 结果 . 从中 可以 看出 , 除了 并列结构 ( CS ) 边界 外 , 大多数 的 成分 边界 预测 都 达到 了 很 高 的 准确率 , 从而 为 进一步 进行 MNP 的 自动识别 提供 了 较为 可靠 的 基础 . 
 Table   1 　 Preprocessing   results   of   WS   prediction 
 表 1 　 预处理 阶段 的 词语 块 边界 预测 结果 
 
 WSSumCort － BPWSP ( % ) 
 644266240296.86 
 
 Table   2 　 Preprocessing   results   of   CG   identication 
 表 2 　 预处理 阶段 的 成分 组 边界 识别 结果 
 
 CG   Types ① SCGCort － CGCrossed － CGCGP ( % ) CGR ( % ) 
 PS108451059122897.72 . 1 
 COS125912013695.42 . 9 
 CS76360614279.418 . 6 
 CC109610187092.96 . 4 
 
 ① 成分 组 类别 . 
 2.2 　 最长 名词 短语 识别 实验 
 　 　 对于 MNP 自动 识别器 的 处理 性能 , 我们 主要 考察 了 以下 两个 指标 ： 
 　 　 ( 1 )   MNP 正确率 ( precision   of   the   maximal   noun   phrase , 简称 MNPP ) = 正确 识别 的 MNP 总数 ( Cort － MNP ) / 自动识别 出 的 MNP 总数 ( EMNP ) ; 
 　 　 ( 2 )   MNP 召回 率 ( recall   of   the   maximal   noun   phrase , 简称 MNPR ) = 正确 识别 的 MNP 总数 ( Cort － MNP ) / 树库 中 的 MNP 总数 ( CMNP ) . 
 　 　 表 3 列出 了 目前 的 实验 结果 , 其中 简单 MNP 的 词长 < 5 , 复杂 MNP 的 词长 ≥ 5 . 从中 可以 看出 , 对于 只 利用 边界 分布 概率 知识 的 算法 1 , MNP 识别 的 正确率 和 召回 率 分别 为 69.2% 和 70.9% , 处理 效果 并 不是 很 理想 . 当 我们 利用 更为 丰富 的 语言学 知识 , 如 np 的 内部结构 组合 规则 等 来 进行 MNP 自动识别 时 （ 算法 2 ） , 正确率 和 召回 率 都 有 较大 的 提高 , 分别 达到 了 85.4% 和 82.3% , 显示 出 较为 令人满意 的 自动识别 效果 . 
 Table   3 　 Maximal   noun   phrase   identifying   results 
 表 3 　 MNP 自动识别 结果 
 
 　 CMNPEMNPCort － MNPMNPP ( % ) MNPR ( % ) 
 Algorithm ①   1Simple   MNP ② 43594724335271.076 . 9 
 Complex   MNP ③ 86562635055.940 . 5 
 Total ④ 52245350370269.270 . 9 
 Algorithm   2Simple   MNP43594279376387.986 . 3 
 Complex   MNP86575453470.861 . 7 
 Total52245033429785.482 . 3 
 
 ① 算法 , ② 简单 MNP , ③ 复杂 MNP , ④ 合计 . 
 　 　 另外 , 实验 结果 还 显示 出 ， 目前 的 两个 算法 对 复杂 MNP 的 自动识别 效果 比较 差 , 较长 的 复杂 MNP 的 识别 正确率 一般 要 比 简单 MNP 低约 16 个 百分点 , 召回 率则 更 低 . 这 表明 目前 的 自动 识别器 在 对 复杂 MNP 的 识别 机制 上 还 存在 着 较大 的 缺陷 , 有待于 今后 进一步 加以改进 . 
 2.3 　 错误 实例 分析 
 　 　 对 算法 2 的 识别 错误 实例 进行 分析 发现 ， 其 错误 原因 主要 可 归纳 为 以下 两个 ： 一是 由于 预处理 结果 的 边界 预测 错误 而 引起 的 ； 二是 由于 识别 算法 处理 能力 限制 而 引起 的 . 显然 , 我们 更 关心 的 是 其中 的 第 2 类 错误 , 因为 从中 可以 总结 出 一些 用于 改进 识别 算法 的 建设性 意见 . 为此 , 我们 设计 了 这样 一个 特殊 实验 , 通过 对 MNP 自动 识别器 的 输入 信息 进行 以下 处理 ： ( 1 )   删除 自动 发现 的 与 树库 中 的 成分 相 交叉 的 成分 组 描述 ； ( 2 )   用树库 中 正确 的 成分 边界 信息 替换 自动 预测 出错 的 词语 块 描述 ， 可以 为 MNP 自动 识别器 提供 成分 边界 完全正确 的 输入 句子 . 表 4 列出 了 在 此 条件 下 算法 2 的 自动识别 结果 ， 与表 3 的 结果 相 比较 可以 发现 ， 原来 的 识别 错误 中 差不多 有 一大半 是 由于 预处理 结果 的 边界 分析 错误 所 引起 的 . 
 Table   4 　 Maximal   noun   phrase   identifying   results   ( A2 )   by   using   correct   preprocessor   data 
 表 4 　 使用 正确 预处理 数据 的 MNP 自动识别 结果 ( 算法 2 ) 
 
 　 CMNPEMNPCort － MNPMNPP ( % ) MNPR ( % ) 
 Simple   MNP ① 43594301407394.793 . 4 
 Complex   MNP ② 86573462684.972 . 4 
 Total ③ 52245038469993.390 . 0 
 
 ① 简单 MNP , ② 复杂 MNP , ③ 合计 . 
 　 　 对于 剩余 的 525 个 错误 实例 （ 包括 339 个 识别 错误 和 186 个 未 召回 错误 ） , 我们 从 以下 几个 不同 的 角度 对 它们 进行 了 深入细致 的 分析 . 
 　 　 首先 , 通过 考虑 自动识别 出 的 MNP 的 左右 边界 中 是否 有 一个 是 正确 的 , 可以 将 这些 错误 实例 分为 以下 几个 类型 ： 
 　 　 ( 1 )   左 边界 识别 正确 的 错误 实例 , 进一步 可 细分 为 ： 
 　 　 　 　 ( a )   错误 实例 的 右 边界 > 正确 实例 的 右 边界 （ 类型 Ⅰ ） ； 
 　 　 　 　 ( b )   错误 实例 的 右 边界 < 正确 实例 的 右 边界 （ 类型 Ⅱ ） . 
 　 　 ( 2 )   右 边界 识别 正确 的 错误 实例 , 进一步 可 细分 为 ： 
 　 　 　 　 ( a )   错误 实例 的 左 边界 < 正确 实例 的 右 边界 （ 类型 Ⅲ ） , 
 　 　 　 　 ( b )   错误 实例 的 右 边界 > 正确 实例 的 右 边界 （ 类型 Ⅳ ） . 
 　 　 ( 3 )   自动识别 出 的 MNP 的 左右 边界 都 不 正确 （ 类型 Ⅴ ） 
 　 　 表 5 列出 了 这些 不同 类型 的 MNP 错误 实例 的 分布 情况 . 从中 可以 看出 , 右 边界 识别 正确 的 错误 实例 数目 ( 199 ) 远远 超过 左 边界 ( 56 ) , 这 从 一个 侧面 显示 出 汉语 MNP 识别 的 难点 在于 确定 其 左 边界 . 如何 寻找 更好 的 方法 , 准确 地 确定 复杂 定语 的 左 边界 位置 , 将 是 我们 今后 研究 的 一个 重点 . 
 Table   5 　 Distribution   of   maximal   noun   phrase   identifying   errors   ( total   339 )   with   different   error   types 
 表 5 　 具有 不同 错误 类型 的 MNP 识别 错误 分布 （ 总数 339 ） 
 
 Error   types ① Ⅰ Ⅱ Ⅲ Ⅳ Ⅴ 
 Distribution   frequency ② 25314515484 
 Distribution   ratio ③ ( % ) 7.49 . 113.345 . 424.8 
 
 ① 错误 类型 , ② 分布 频度 , ③ 分布 率 . 
 　 　 对 错误 实例 的 内部结构 组合 进行 分析 , 可以 发现 其中 汉语 的 一些 常见 轻 歧义 结构 占 了 很大 比例 . 考虑 结构 组合 ： “ v   np   的   n ” , 对于 其中 不同 的 词语 , 可能 有 以下 两种 合理 的 分析 结构 ： ( 1 )   ［ np ［ vp   v   np ］ 的   n ］ , 如 ： ［ np ［ vp 参加   学术 讨论会 ］   的   老师 ］ ； ( 2 )   ［ vp   v   ［ np   np 的   n ］ ］ , 如 ： ［ vp   看   ［ np   老古董   的   电影 ］ ］ . 而 目前 我们 的 识别 算法 只能 统一 地 识别 为 结构 ( 2 ) , 这 导致 了 对 类似 结构 识别 正确率 和 召回 率 的 降低 . 如何 加强 对 歧义 结构 的 识别 能力 , 将 是 我们 今后 研究 的 另 一个 重点 . 
 3 　 结束语 
 　 　 作为 一项 重要 的 应用 基础 研究 , MNP 的 自动识别 对于 自然语言 处理 领域 中 的 许多 应用 研究 , 包括 句法分析 、 信息检索 、 信息 抽取 、 机器翻译 等 , 都 具有 重要 的 实践 意义 . 本文 在 汉语 MNP 的 自动识别 方面 进行 了 一些 有益 的 探索 , 通过 对 语料 文本 中 的 最长 名词 短语 的 分布 特点 的 统计分析 , 提出 了 两种 有效 的 汉语 最长 名词 短语 自动识别 算法 ： 基于 边界 分布 概率 的 识别 算法 （ 算法 1 ） 和 基于 内部结构 组合 的 识别 算法 （ 算法 2 ） , 取得 了 较 好 的 自动识别 效果 . 在 今后 的 研究 中 , 我们 将 在 以下 几个 方面 对 这些 算法 进行 改进 和 提高 : 
 　 　 ( 1 )   寻找 确定 复杂 定语 的 左 边界 的 更好 方法 ; 
 　 　 ( 2 )   加强 对 歧义 结构 的 识别 处理 能力 . ■ 
 基金项目 ： 本文 研究 得到 国家自然科学基金 ( No.69705005 ) 和 中国 博士后 科学基金 ( No.97005 ) 资 
 　 　 　 　 　 助 . 
 作者简介 ： 周强 , 1967 年生 , 博士 , 副研究员 , 主要 研究 领域 为 计算 语言学 . 
 　 　 　 　 　 孙茂松 , 1962 年生 , 副教授 , 主要 研究 领域 为 中文信息处理 , 计算 语言学 . 
 　 　 　 　 　 黄 昌宁 , 1937 年生 , 教授 , 博士生 导师 , 主要 研究 领域 为 计算 语言学 , 中文信息处理 . 
 作者 单位 ： 周强 ( 智能 技术 与 系统 国家 重点 实验室 　 北京 　 100084 ) 
 　 　 　 　 　 孙茂松 ( 智能 技术 与 系统 国家 重点 实验室 　 北京 　 100084 ) 
 　 　 　 　 　 黄 昌宁 ( 智能 技术 与 系统 国家 重点 实验室 　 北京 　 100084 ) 
 　 　 　 　 　 周强 ( 清华大学 计算机科学 与 技术 系 　 北京 　 100084 ) 
 　 　 　 　 　 孙茂松 ( 清华大学 计算机科学 与 技术 系 　 北京 　 100084 ) 
 　 　 　 　 　 黄 昌宁 ( 清华大学 计算机科学 与 技术 系 　 北京 　 100084 ) 
 参考文献 ： 
 ［ 1 ］ Church   K . A   stochastic   parts   program   and   noun   phrase   parser   for   unrestricted   text . In : Proceedings   of   the   2nd   Conference   on   Applied   Natural   Language   Processing . Austin : Association   for   Computational   Linguistics , 1988.136 ～ 143 
 ［ 2 ］ Bourigault   D . Surface   grammatical   analysis   for   the   extraction   of   terminological   noun   phrases . In : Boitet   C   ed . Proceedings   of   the   15th   International   Conference   on   Computational   Linguistics   ( COLING ' 92 ) . Nantes : Academic   Press , 1992.977 ～ 981 
 ［ 3 ］ Voutilamen   A . NPTool , a   detector   of   English   noun   phrases . In : Church   K   ed . Proceedings   of   the   Workshop   on   Very   Large   Corpora : Academic   and   Industrial   Perspectives . Columbus : Association   for   Computational   Linguistics , 1993.48 ～ 57 
 ［ 4 ］ Chen   Kuang - hua , Chen   Hsin - hsi . Extracting   noun   phrases   from   large - scale   texts : a   hybrid   approach   and   its   automatic   evaluation . In : Proceedings   of   the   32nd   Annual   Meeting   of   Association   of   Computational   Linguistics . New   York : Association   for   Computational   Linguistics , 1994.234 ～ 241 
 ［ 5 ］ Lu   Jian - ming . Special   nesting   phenomena   of   Chinese   constituents . In : The   Optional   Papers   of   Lu   Jian - ming . Zhengzhou : He ' nan   Education   Press , 1993.174 ～ 192 
 ( 陆 俭明 . 汉语 句法 成分 特有 的 套叠 现象 . 见 ： 陆 俭明 自选集 . 郑州 : 河南 教育 出版社 , 1993.174 ～ 192 ) 
 ［ 6 ］ Li   Wen - jie , Zhou   Ming , Pan   Hai - hua   et   al . Corpus - based   maximal - length   Chinese   noun   phrase   extraction . In : Chen   Li - wei , Yuan   Qi   eds . Advances   and   Applications   on   Computational   Linguistics . Beijing : Tsinghua   University   Press , 1995.119 ～ 124 
 ( 李文捷 , 周明 , 潘海华 等 . 基于 语料库 的 中文 最长 名词 短语 的 自动 提取 . 见 ： 陈力 为 , 袁琦 主编 . 计算 语言学 进展 与 应用 . 北京 ： 清华大学出版社 , 1995.119 ～ 124 ) 
 ［ 7 ］ Tse   A   S   Y , Wong   Kam - fai   et   al . Effectiveness   analysis   of   linguistics -   and   corpus - based   noun   phrase   partial   parsers . In : Choi   Key - sun   ed . Proceedings   of   the   Natural   Language   Processing   Pacific   Rim   Symposium   ( NLPRS ' 95 ) . Taljon : Academic   Press , 1995.252 ～ 257 
 ［ 8 ］ Zhou   Qiang , Huang   Chang - ning . Chunk   parsing   scheme   for   Chinese   sentences . Technical   Report , TR98002 , Department   of   Computer   Science   and   Technology , Tsinghua   University , 1998 
 ( 周强 , 黄 昌宁 . 汉语 组块 分析 标注 体系 . 科技 报告 , TR98002 , 清华大学 计算机科学 与 技术 系 , 1998 ) 
 ［ 9 ］ Zhou   Qiang . Phrase   bracketing   and   annotating   on   Chinese   language   corpus   ［ Ph . D . Thesis ］ . Beijing : Beijing   University , 1996 
 ( 周强 . 汉语 语料库 的 短语 自动 划分 和 标注 研究 ［ 博士学位 论文 ］ . 北京 : 北京大学 , 1996 ) 
 ［ 10 ］ Zhou   Qiang . A   model   for   automatic   prediction   of   Chinese   phrase   boundary   location . Journal   of   Software , 1996 , 7 ( supplement ) : 315 ～ 322 
 ( 周强 . 一个 汉语 短语 自动 界定 模型 . 软件 学报 , 1996 , 7 ( 增刊 ) : 315 ～ 322 ) 
 ［ 11 ］ Zhou   Qiang . Implementation   of   Chinese   parsing   algorithm   based   on   bracket   matching   principle . In : Chen   Li - wei , Yuan   Qi   eds . Language   Engineer . Beijing : Tsinghua   University   Press , 1997.194 ～ 200 
 ( 周强 . 汉语 匹配 分析 算法 的 实现 . 见 ： 陈力 为 , 袁琦 主编 . 语言 工程 . 北京 ： 清华大学出版社 , 1997.194 ～ 200 ) 
 收稿 日期 ： 1998 - 11 - 10 
 修稿 日期 ： 1999 - 03 - 09 
