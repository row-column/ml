软件 学报 
 JOURNAL   OF   SOFTWARE 
 1999 年   第 10 卷   第 12 期     Vol.10   No.12   1999 
 
 
 
 Kailar 逻辑 的 缺陷 
 周典萃 　 卿斯汉 　 周展 飞 
 摘要 　 近年来 ， 电子商务 协议 的 设计 逐渐 成为 热点 . 可 追究 性是 指 电子商务 协议 迫使 个人 或 组织 对 自己 在 电子 交易 中 的 行为 负责 的 能力 . 缺乏 可 追究 性 , 电子 交易 容易 引起争议 . 因此 ， Rajashekar   Kailar 提出 了 一种 用于 分析 电子商务 协议 中 可 追究 性 的 形式化 分析方法 , 简称 Kailar 逻辑 . 该文 指出 这一 逻辑 的 缺陷 ： （ 1 ） 不能 分析 协议 的 公平性 ； ( 2 )   对 协议 语句 的 解释 及 初始化 假设 是非 形式化 的 ， 存在 局限性 ; ( 3 )   无法 处理 密文 . 
 关键词 　 可 追究 性 ， 电子商务 ， 协议 ， 协议 分析 . 
 中图法 分类号 　 TP309 
 Limitations   of   Kailar   Logic 
 ZHOU   Dian - cui   QING   Si - han   ZHOU   Zhan - fei 
 ( Institute   of   Software   The   Chinese   Academy   of   Sciences   Beijing   100080 ) 
 ( Engineering   Research   Center   for   Information   Security   Technology   The   Chinese   Academy   of   Sciences   Beijing   100080 ) 
 Abstract 　   There   is   a   growing   interest   in   the   design   and   development   of   electronic   commerce   protocols .   Accountability   is   the   ability   to   hold   individuals   or   organizations   accountable   for   transactions .   Without   such   assurances ,   electronic   transactions   can   be   susceptible   to   disputes .   Rajashekar   Kailar   has   proposed   a   framework   for   the   analysis   of   communication   protocols   which   require   accountability .   The   authors   call   this   framework   Kailar   logic .   In   this   paper ,   the   authors   find   this   framework   has   three   limitations .   Firstly ,   the   framework   cannot   analyze   fairness   of   protocols .   Secondly ,   articulating   initial   state   assumptions   is   an   informal   and   error - prone   step .   At   last ,   the   messages   with   encrypted   contents   in   the   protocol   cannot   be   interpreted . 
 Key   words 　 Accountability ,   electronic   commerce ,   protocol ,   protocol   analysis . 
 　 　 随着 计算机 及 计算机网络 技术 的 发展 , 社会 各 行业 越来越 依赖 计算机 来 进行 数据处理 和 信息 交换 . 近年来 ， 基于 远程网 ( 如 Internet ) 的 网上交易 , 即 电子商务 的 研究 开发 更是 进行 得 如火如荼 . 电子商务 巨大 的 市场 应用 前景 使得 一些 著名 的 计算机 公司 和 金融机构 将 它 立为 一个 重要 的 研究课题 ， 以期 在 此 领域 取得 领先地位 . 借助于 远程网 ， 电子商务 可以 使 商家 拥有 更大 的 用户群 ， 同时 也 使 远程 商业 交易 变得 更为 方便 、 快捷 ， 从而 大大提高 了 人们 生活 和 工作 的 效率 . 尽管 电子商务 的 应用 前景 十分 诱人 ， 但 人们 对 电子商务 的 安全 却 普遍 心存 疑虑 . 密码学 为 电子商务 的 安全 提供 了 有效 的 保障 ， 如何 用 密码 技术 来 解决 电子商务 中 存在 的 安全性 问题 则 是 电子商务 研究所 面临 的 主要 课题 . 
 　 　 在 现实 的 商业 交易 活动 中 ， 人们 常常 借助于 票证 ( 如 合同 、 发票 等 ) 来 解决 交易 中 出现 的 争议 和 纠纷 . 票证 的 不易 伪造 性 使得 交易 的 双方 无法 否认 自己 在 交易 中 的 行为 ， 从而 为 解决 交易 中 的 纠纷 提供 了 一种 有效 的 途径 . 同样 地 ， 作为 电子 交易规则 的 电子商务 协议 也 必须 具备 这一 机制 ， 它 必须 能够 为 交易 双方 提供 足够 的 证据 ， 以便 在 产生纠纷 时 ， 仲裁 机构 可以 利用 这些 证据 来 解决 纠纷 ， 即 电子商务 协议 的 设计 必须 满足 可 追究 性 原则 . 
 　 　 与 现实 的 交易 活动 有所不同 ， 在 电子 交易 中 传输 的 消息 极易 被 伪造 ， 因而 无法 起到 票证 的 作用 . 数字签名 技术 使得 电子 交易 不易 被 伪造 ， 而且 人们 可以 验证 其 来源 . 它 在 电子商务 协议 中 的 应用 解决 了 电子 交易 中 传输 的 消息 易 被 伪造 产生 的 问题 . 
 　 　 但是 ， 一个 安全 强度 较 高 的 密码 算法 并 不能 保证 电子商务 满足 可 追究 性 的 要求 ， 电子商务 协议 是否 遵循 可 追究 性 原则 不仅 依赖于 所用 密码 的 安全 强度 ， 还 与 协议 的 自身 结构 有着 密切 的 联系 . 
 通过 对 认证 协议 的 研究 ， 我们 可以 发现 ， 密码 协议 的 一些 微小 改动 都 会 导致 协议 的 安全漏洞 ， 同时 我们 又 很 难 察觉 这些 安全漏洞 . 鉴于 此 ， 可否 通过 严格 的 形式化 方法 来 验证 电子商务 协议 的 安全性 成为 电子商务 研究 中 亟待解决 的 一个 问题 . 
 　 　 1989 年 ， Burrows 等 人 ［ 1 ］ 提出 一种 基于 信念 逻辑 的 形式化 方法 ， 用于 分析 认证 协议 的 安全性 . 此后 ， 研究 人员 对 这种 方法 进行 了 大量 的 改进 和 扩充 ， 形成 了 所谓 的 BAN ( 即 Michael   Burrows , Martin   Abadi 和 Roger   Needham ) 类 逻辑 . 那么 ， 我们 是否 可以 借助于 信念 逻辑 来 验证 电子商务 协议 的 可 追究 性 呢 ？ 通过 认证 协议 和 电子商务 协议 的 比较 ， Kailar ［ 2 ］ 指出 了 大家 熟知 的 BAN 类 逻辑 不 适于 分析 电子商务 协议 的 根本原因 在于 ， 信念 逻辑 是 要 证明 某个 主体 相信 某一 公式 ， 而 可 追究 性 的 目的 在于 某个 主体 要 向 第三方 证明 另一方 对 某个 公式 负有责任 . 为此 ， Kailar 提出 了 新 的 逻辑 ， 用于 分析 电子商务 协议 的 可 追究 性 . 
 　 　 本文 着重 分析 Kailar 逻辑 的 缺陷 及其 应用 的 局限性 . 这 也许 可以 为 我们 改进 电子商务 协议 的 形式化 分析 工具 提供 一些 借鉴 .   
 1   Kailar 逻辑 
 　 　 在 介绍 Kailar 逻辑 ［ 2 ］ 之前 ， 先 列举 本文 中 用到 的 基本 符号 . 
 　 　 A , B , ... ： 参与 协议 的 各个 主体 . 
 　 　 m ： 消息 ， 由 一个 主体 发送给 另 一个 主体 的 消息 . 
 　 　 TTP ： 可 信任 第三方 ( trusted   third   party , 简称 TTP ) . 
 　 　 Ka ： A 的 公开 钥 ， 用于 验证 A 的 数字签名 . K - 1a 是 与 Ka 对应 的 A 的 私有 密钥 . 
 　 　 k ： 会话 密钥 . 
 　 　 Kab ： A 与 B 的 共享 密钥 . 
 　 　 Kailar 逻辑 的 公式 如下 ： 
 　 　 A   CanProve   x ： 对于 任何 主体 B ， A 能 执行 一系列 操作 使得 通过 这些 操作 以后 ， A 能 使 B 相信 公式 x ， 而 不 泄漏 任何 秘密 y ( y ≠ x ) 给 B . 
 　 　 Ka   Authenticates   A ： Ka 能 用于 验证 A 的 数字签名 . 
 　 　 x   in   m ： x 是 m 中 的 一个 或 几个 可 被 理解 的 域 ， 它 的 含义 是 由 协议 设计者 明确 定义 的 . 可 被 理解 的 域 通常 是 明文 或者 主体 拥有 密钥 的 加密 域 . 
 　 　 A   Says   x ： A 声明 公式 x 并 对 x 以及 x 能 推导 出 的 公式 负责 . 通常 ， 隐含地 假设 以下 推论 成立 , 
 
 　 　 A   Receives   m   SignedWith   K - 1 ： A 收到 一个 用 K - 1 签名 的 消息 m . 通常 ， 隐含地 假设 以下 推论 成立 , 
 
 　 　 A   IsTrustedOn   x ： A 对 公式 x 具有 管辖权 ， 即 A 被 协议 其他 主体 所 相信 A 声明 的 公式 x 是 正确 的 . 
 　 　 推理 规则 如下 . 
 　 　 连接 ： 
 
 如果 A 能够 证明 公式 x ， 并且 A 能够 证明 公式 y ， 那么 A 能够 证明 公式 x ∧ y . 
 　 　 推理 : 
 
 如果 A 能够 证明 公式 x ， 而 由 公式 x 能 推导 公式 y ( 即 公式 x 蕴涵 有 公式 y 的 含义 ， 那么 A 能够 证明 公式 y . 
 　 　 签名 : 
 
 如果 A 收到 一个 用 私钥 K - 1 签名 的 消息 m ， m 中 包含 A 能 理解 的 公式 x ， 并且 A 能够 证明 公钥 K 能 用于 验证 B 的 签名 ， 那么 A 能 证明 B 声明 了 公式 x . 
 　 　 信任 ： 
 
 如果 A 能够 证明 B 对 x 有 管辖权 ， 并且 B 声明 了 公式 x ， 那么 A 能 证明 公式 x . 
 　 　 利用 Kailar 逻辑 来 分析 协议 共有 4 个 步骤 ： 
 　 　 ( 1 )   列举 协议 要 达到 的 目标 . 
 　 　 ( 2 )   对 协议 的 语句 进行 解释 ， 使 之 转化 为 逻辑 公式 . 在 这 一步 中 ， 只 对 那些 包含 签过 名 的 明文 消息 并且 和 分析 可 追究 性 相关 的 语句 进行 解释 . 
 　 　 ( 3 )   列举 分析 协议 时 需要 用到 的 初始 假设 . 
 　 　 ( 4 )   对 协议 进行 分析 . 
 2   Kailar 逻辑 的 缺陷 
 　 　 本节 将 通过 实例 说明 Kailar 逻辑 中 存在 的 缺陷 . 
 2.1   基于 公钥 体制 的 IBS 协议 
 　 　 可 追究 性 原则 要求 电子商务 协议 为 参与 协议 的 各个 主体 提出 充分 的 证据 以 解决 今后 可能 出现 的 纠纷 . 但 电子商务 协议 的 安全 仅 满足 可 追究 性是 不够 的 ， 它 还 应 遵循 公平性 原则 . 可 追究 性仅 要求 在 协议 完成 后 ， 各个 主体 拥有 充分 的 证据 . 而 对于 协议 异常 中止 时 ， 各个 主体 的 状态 未 加 考虑 . 公平性 原则 要求 在 协议 异常 中止 时 ， 各个 主体 地位 相同 ， 没有 任何 主体 处于 有利 地位 . 
 　 　 在 此节 中 ， 我们 将 分析 IBS 协议 ( internet   billing   service   protocol ) 来 说明 缺乏 公平性 所 产生 的 漏洞 . IBS 协议 ［ 3 ］ 是 由 卡内基 - 梅隆 大学 开发 的 电子商务 协议 ， 该 协议 分为 如下 3 个 部分 . 
 　 　 确定 价格 
 　 　 ( 1 )   E → S : { Price   Request } K - 1e 
 　 　 ( 2 )   S → E : { Price } K - 1s 
 　 　 在 确定 价格 的 过程 中 ， 用户 E 首先 向 服务 提供 方 S 发送 一个 用 它 的 私有 密钥 K - 1e 签名 的 价格 咨询 消息 . 如果 服务 提供 方 S 同意 这个 价格 ， 他 就 发送 一个 用 他 的 私有 密钥 K - 1s 签名 的 价格 同意 消息 . 
 　 　 提供 服务 
 　 　 ( 3 )   E → S : { { Price } K - 1sPrice } K - 1e 
 　 　 ( 4 )   S → Invoice : { { Price } K - 1ePrice } K - 1e 
 　 　 ( 5 )   S → E : { Service } K - 1e 
 　 　 ( 6 )   E → S : { Service   Acknowledge } K - 1e 
 　 　 ( 7 )   S → Invoice : { { Service   Acknowledge } K - 1e } K - 1s 
 　 　 在 提供 服务 协议 中 ， 第 1 条 消息 用户 E 向 服务 提供 方 S 发送 一个 服务 请求 ， 服务 提供 方 S 把 这条 消息 复制到 发票 上 ， 并 发送 一条 签名 的 服务 消息 给 用户 E . 用户 E 收到 服务 后 , 发送 一个 签名 的 服务 认可 消息 给 服务 提供 方 S ， 服务 提供 方 S 把 它 复制到 发票 上 . 
 　 　 传递 发票 
 　 　 ( 8 )   E → S : { Invoice   Request } K - 1e 
 　 　 ( 9 )   S → B : { { Invoice } Kb } K - 1s 
 　 　 ( 10 )   B → S : { { Invoice } Ks } K - 1b 
 　 　 ( 11 )   B → E : { { Invoice } Ke } K - 1b 
 　 　 在 传递 发票 协议 中 ， 用户 E 给 服务 提供 方 S 发送 一个 发票 请求 . 服务 提供 方 S 向 银行 机构 B 发送 一张 先 用 银行 机构 的 公开密钥 加密 , 然后 用 他 的 私有 密钥 签名 的 发票 . 银行 验证 发票 后 ， 进行 相应 的 转帐 处理 ， 将 发票 用 他们 的 公开密钥 加密 后 再 用 银行 机构 的 私有 密钥 签名 ， 然后 分别 发送给 用户 和 服务 提供 方 . 
 利用 Kailar 逻辑 可以 证明 ， IBS 协议 在 确定 价格 和 提供 服务 两个 阶段 满足 可 追究 性 原则 ［ 2 ］ . 但是 ， IBS 协议 不 满足 公平性 原则 . 
 　 　 在 IBS 协议 中 ， 服务 提供 方 S 在 第 （ 5 ） 步为 用户 E 提供 服务 . 按 协议 的 设计 ， 用户 E 收到 服务 后 在 第 （ 6 ） 步 提供 给 服务 提供 方 一个 签名 的 确认 消息 . 但 如果 用户 E 是 不诚实 的 ， 他 可以 在 收到 服务 后 不 提供 确认 消息 ， 协议 至此 中止 . 此时 ， 服务 提供 方 就 无法 提供 他 向 用户 E 提供 服务 的 证据 ， 而 用户 E 已 获得 了 服务 ， 他 处于 有利 地位 . 
 2.2   CMP1 协议 和 CMP2 协议 
 　 　 与 信念 逻辑 相似 ， Kailar 逻辑 必须 对 参与 协议 的 各个 主体 进行 初始化 假设 . 但 在 Kailar 逻辑 中 ， 这一 过程 是非 形式化 的 ， 因而 极易 出错 . 下面 ， 我们 将 通过 对 CMP1 协议 的 分析 说明 非 形式化 的 初始化 假设 极易 出错 ， 从而 导致 协议 分析 的 失败 . 
 CMP1 和 CMP2 协议 是 Robert   Deng 和 Li   Gong 等 人 提出 的 认证 电子邮件 协议 ［ 4 ］ ( certified   electronic   mail ) . 这些 协议 为 电子邮件 的 传输 提供 非 否认 服务 . CMP1 和 CMP2 协议 的 区别 在于 , CMP1 协议 没有 提供 E - mail 内容 的 加密 保护 . 下面 ， 我们 将 通过 对 CMP1 的 分析 , 指出 Kailar 逻辑 在 解释 过程 中 由于 非 形式化 而 产生 的 缺陷 . 
 　 　 首先 介绍 CMP1 协议 . 
 　 　 ( 1 )   A → B : h ( m ) , { k } KTTP , { { m } K - 1a } k 
 　 　 ( 2 )   B → A : { h ( m ) } K - 1b , { k } KTTP , { { m } K - 1a } k 
 　 　 ( 3 )   TTP → B : { { m } K - 1a } K - 1TTP 
 　 　 ( 4 )   TTP → A : { { h ( m ) } K - 1b , ( B , m ) } K - 1TTP 
 其中 k 是 A 与 TTP 共享 的 会 话 密钥 . 
 　 　 第 （ 1 ） 步 A 选择 一个 会话 密钥 k ， 然后 把 消息 m 的 摘要 h ( m ) 、 消息 m 签名 后用 k 加密 的 密文 { { m } K - 1a } k 和 加密 的 会 话 密钥 { k } KTTP 发送给 B . 第 （ 2 ） 步 ， B 对 h ( m ) 签名 ， 并 连同 后 两 部分 转发给 TTP . TTP 收到 后 ， 通过 解密 获取 { m } K - 1a ， 然后 在 第 （ 3 ） 步 将 它 用 自己 的 私有 密钥 签名 后 传送 给 B ； 在 第 （ 4 ） 步 将 B 签过 名 的 摘要 和 ( B , m ) 用 自己 的 私有 密钥 签名 后 传送 给 A . 
 　 　 协议 分析 过程 如下 . 
 　 　 协议 的 目的 是 为 电子邮件 传输 提供 非 否认 服务 ， 协议 设计者 希望 达到 下面 的 目标 ： 
 A   CanProve   ( B   Recieved   m ) , 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G1 ) 
 B   CanProve   ( A   Sent   m ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G2 ) 
 　 　 首先 ， 对 协议 语句 理解 如下 ： 
 　 　 ( 2.1 )   TTP   Receives   h ( m )   SignedWith   K - 1b , 
 　 　 ( 2.2 )   TTP   Receives   m   SignedWith   K - 1a , 
 　 　 ( 3 )   B   Receives   ( m   SignedWith   K - 1a )   SignedWith   K - 1TTP , 
 　 　 ( 4 )   A   Receives   ( h ( m ) )   SignedWith   K - 1b , ( B , m ) )   SignedWith   K - 1TTP . 
 　 　 列举 初始化 假设 如下 ： 
 　 　 A1   A , B   CanProve   ( KTTP   Authenticates   TTP ) , 
 　 　 A2   A , TTP   CanProve   ( Kb   Authenticates   B ) , 
 　 　 A3   B , TTP   CanProve   ( Ka   Authenticates   A ) , 
 　 　 A4   A , B   CanProve   ( TTP   IsTrustedOn   ( TTP   Says ) ) , 
 　 　 A5   ( A   Says   m ) ( A   sent   m ) , 
 　 　 A6   ( B   Says   h ( m ) ) ( B   received   h ( m ) ) , 
 　 　 A7   ( TTP   Says   ( B , m ) ) ( TTP   Says   m 成功 发送给 B ) , 
 　 　 A8   ( B   Received   h ( m ) ) ∧ ( m 成功 发送给 B ) ( B   received   m ) . 
 　 　 推理 过程 如下 ： 
 　 　 由 消息 ( 3 ) 和 假设 A1 ， 应用 签名 规则 , 
 B   CanProve   ( TTP   Says   ( m   SignedWith   K - 1a ) ) . 
 　 　 根据 假设 A4 ， B 信任 TTP ， 用 信任 规则 , 
 B   CanProve   ( m   SignedWith   K - 1a ) . 
 　 　 再用 一次 签名 规则 , 
 B   CanProve   ( A   Says   m ) . 
 　 　 由 上述 公式 ， 用 假设 A5 和 推理 规则 ， 有 
 B   CanProve   ( A   Sent   m ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G2 ) 
 　 　 消息 ( 4 ) 等价 于 
 　 　 ( 4.1 )   A   Receives   ( h ( m ) )   SignedWith   K - 1b )   SignedWith   K - 1TTP , 
 　 　 ( 4.2 )   A   Receives   ( B , m )   SignedWith   K - 1TTP . 
 　 　 由 ( 4.1 ) 和 假设 A1 ， 应用 签名 规则 , 
 A   CanProve   ( TTP   Says   ( h ( m )   SignedWith   K - 1b ) ) . 
 　 　 再 由 假设 A4 和 信任 规则 , 
 A   CanProve   ( h ( m )   SignedWith   K - 1b ) . 
 　 　 由 假设 A2 ， 再用 一次 签名 规则 , 
 A   CanProve   ( B   Says   h ( m ) ) . 
 　 　 由 假设 A6 ， 用 推理 规则 , 
 A   CanProve   ( B   Receives   h ( m ) ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( * ) 
 　 　 由 ( 4.2 ) 和 假设 A1 ， 应用 签名 规则 , 
 A   CanProve   ( TTP   Says   ( B , m ) ) . 
 　 　 运用 假设 A7 和 推理 规则 , 
 A   CanProve   ( m 成功 发送给 B ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( * * ) 
 　 　 由 公式 ( * ) 和 ( * * ) ， 应用 连接 规则 , 
 A   CanProve   ( ( B   Receives   h ( m ) ) ∧ ( m 成功 发送给 B ) ) . 
 　 　 由 上面 的 结果 ， 应用 假设 A8 和 推理 规则 , 
 A   CanProve   ( B   Received   m ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G1 ) 
 　 　 这 就 证明 了 协议 满足 可 追究 性 ， 符合 协议 设计者 的 目标 . 
 　 　 在 证明 过程 中 引入 了 8 条 初始化 假设 A1 ～ A8 ， 其中 A1 ～ A4 是 基本 的 ， 它们 是 协议 设计者 假定 的 协议 运行 的 前提条件 . A5 ～ A8 是 协议 证明 者 为了 证明 协议 的 可 追究 性而作 的 假设 . 其中 A5 ， A6 ， A7 是 对 一些 推导 的 中间 结果 的 解释 . A8 实质 上 是 协议 证明 者 作出 的 一个 推理 ， 他 认为 ， 如果 能 证明 B 收到 了 h ( m ) 以及 m 已经 送达 B ， 那么 就 能 证明 B   Received   m . 
 　 　 在 用 Kailar 逻辑 进行 形式化 分析 的 过程 中 ， 无法 用 形式化 的 方法 确定 协议 证明 之前 需要 添加 哪些 假设 . 许多 假设 都 是 协议 证明 者 在 推导 时 加入 的 ， 例如 本例 中 的 A5 ～ A8 . 不幸 的 是 ， 不恰当地 引入 这些 假设会 导致 协议 分析 的 失败 . 
 　 　 例如 ， 对本 协议 稍作 修改 ， 称为 CMP1 ( b ) ： 
 　 　 ( 1 )   A → B :   h ( m ) , { k } KTTP , { { m } K - 1a } k , 
 　 　 ( 2.1 )   B → A :   { h ( m ) } K - 1b , 
 　 　 ( 2.2 )   B → TTP :   { k } KTTP , { { m } K - 1a } k , 
 　 　 ( 3 )   TTP → B :   { { m } K - 1a } K - 1TTP , 
 　 　 ( 4 )   TTP → A :   { ( B , m ) } K - 1TTP . 
 　 　 协议 可 理解 为 ： 
 　 　 ( 2.1 )   A   Receives   ( h ( m )   SignedWith   K - 1b ) , 
 ( 2.2 )   TTP   Receives   ( m   SignedWith   K - 1a ) , 
 ( 3 )   B   Receives   ( m   SignedWith   K - 1a )   SignedWith   K - 1TTP , 
 ( 4 )   A   Receives   ( B , m )   SignedWith   K - 1TTP . 
 初始化 假设 仍 采用 协议 CMP1 的 A1 ～ A8 ， 推理 过程 如下 ： 
 　 　 由 消息 ( 3 ) ， 同前 可证 
 B   CanProve   ( A   Sent   m ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G2 ) 
 由 消息 ( 2.1 ) 和 假设 A2 ， 应用 签名 规则 , 
 A   CanProve   ( B   Says   h ( m ) ) . 
 由 假设 A6 ， 用 推理 规则 , 
 A   CanProve   ( B   Receives   h ( m ) ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( * ) 
 由 消息 ( 4 ) ， 同前 可证 , 
 A   CanProve   ( m 成功 发送给 B ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( * * ) 
 利用 结果 ( * ) 和 ( * * ) 以及 假设 A8 ， 同前 可证 , 
 A   CanProve   ( B   Received   m ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G1 ) 
 　 　 至此 ， 我们 已 利用 Kailar 逻辑 证明 了 协议 CMP1 ( b ) 的 可 追究 性 . 事实上 ， 协议 CMP1 ( b ) 是 不可 追究 的 . 假定 通信 双方 A 是 诚实 的 ， 而 B 是 不诚实 的 . 在 协议 的 ( 2.1 ) 步 ， B 发送给 A 的 是 { h ( m ′ ) } K - 1b ， m ′ 是 不同于 m 的 另外 一个 消息 . 那么 当 协议 执行 完后 ， A 得到 的 是 { h ( m ) ′ } K - 1b 和 { ( B , m ) } K - 1TTP ， 他 不能 拿出 足够 的 证据 来 证明 B 收到 的 是 m 而 不是 m ′ . 而 产生 这一 错误 分析 结果 的 原因 在于 初始化 假设 A8 . 初始化 假设 A8 在 CMP1 中 成立 是 基于 以下 事实 ： TTP 在 收到 { h ( m ) ′ } K - 1b ， { k } KTTP ， { { m } K - 1a } k 之后 ， 检查 了 h ( m ′ ) 与 m 的 一致性 . 由于 B 收到 了 h ( m ′ ) 与 相应 的 m ， A 可以 证明 B 收到 了 m . 而 在 CMP1 ( b ) 中 ， 由于 B 在 ( 2.1 ) 步中 已 先 将 { h ( m ) ′ } K - 1b 发送给 A ， TTP 无法 验证 h ( m ′ ) 与 m 的 一致性 ， A 只能 证明 B 收到 了 h ( m ′ ) ， 而 无法 证明 B 收到 了 m . 
 2.3   非 否认 协议 ( Zhou - Gollman ) 
 　 　 在 Kailar 逻辑 中 ， 公式 A   CanProve   x 要求 主体 A 向 B 证明 公式 x 时 不 泄漏 任何 秘密 y ( y ≠ x ) 给 B ， 这 就 使得 Kailar 逻辑 无法 分析 那些 签名 的 密文 ， 从而 限制 了 其 使用 的 范围 . 
 　 　 实际上 ， 由于 保密 的 要求 ， 一些 协议 的 消息 经过 加密 后 才能 传输 . 同时 ， 由于 这些 消息 的 信息量 较大 ， 故 通常 采用 单钥 加密算法 进行 加密 . 按照 Kailar 逻辑 的 语义 ， 参与 协议 的 主体 不能 公开 加密 密钥 ， 从而 无法 证明 这些 消息 的 来源 . 
 　 　 下面 ， 我们 采用 J . Zhou 和 D . Gollman 设计 的 签订 电子 合同 的 协议 来 说明 Kailar 逻辑 的 这 一 局限 . 在 这个 协议 中 ， J . Zhou 和 D . Gollman 提出 了 一种 基于 ftp 的 方法 ［ 5 ］ ， 并用 ATTP : m 表示 主体 A 通过 多次 ftp 操作 , 从 TTP 处 获得 了 消息 m . 
 　 　 现在 ， 我们 介绍 J . Zhou 和 D . Gollman 设计 的 协议 ［ 6 ］ . 
 　 　 ( 1 )   A → B :   { M } K , { { M } K } K - 1a 
 　 　 ( 2 )   B → A :   { { M } K } K - 1b 
 　 　 ( 3 )   A → TTP :   { K , { K } K - 1a } Ka , TTP 
 　 　 ( 4 )   BTTP :   K , { K } K - 1TTP 
 　 　 ( 5 )   ATTP :   { K } K - 1TTP 
 其中 Ka , ttp 是 A 与 TTP 共享 的 密钥 . 
 　 　 在 第 ( 1 ) 、 ( 2 ) 步 ， A 选择 一个 密钥 K 对 M 进行 加密 ， 然后 连同 他 对 { M } k 的 签名 发送给 B . B 对 { M } k 签名 后 返回 给 A . 第 （ 3 ） 步 ， A 把 密钥 K 连同 他 对 K 的 签名 用 他 与 TTP 的 共享 密钥 加密 后 发送给 TTP . 第 （ 4 ） 、 （ 5 ） 步 ， B 通过 ftp 操作 从 TTP 获取 K 和 TTP 对 K 的 签名 . A 通过 ftp 操作 从 TTP 获得 TTP 对 K 的 签名 . 
 　 　 协议 分析 过程 如下 . 
 　 　 协议 的 目标 为 ： 
 A   CanProve   ( B   Says   M ) , 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G1 ) 
 B   CanProve   ( A   Says   M ) . 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( G2 ) 
 对 协议 的 理解 如下 ： 
 　 　 ( 1 )   B   Revieves   ( Encrypted   M )   SignedWith   K - 1a , 
 　 　 ( 2 )   A   Revieves   ( Encrypted   M )   SignedWith   K - 1b , 
 　 　 ( 3 )   TTP   Recieves   K   SignedWith   K - 1a , 
 　 　 ( 4 )   B   Revieves   K   SignedWith   K - 1TTP , 
 　 　 ( 5 )   A   Revieves   K   SignedWith   K - 1TTP . 
 　 　 列举 初始化 假设 如下 ： 
 　 　 A1 　 A , B   CanProve   ( KTTP   Authenticates   TTP ) , 
 　 　 A2 　 A , TTP   CanProve   ( Kb   Authenticates   B ) , 
 　 　 A3 　 B , TTP   CanProve   ( Ka   Authenticates   A ) , 
 　 　 A4 　 A , B   CanProve   ( TTP   IsTrustedOn   ( TTP   Says ) ) . 
 　 　 由 ( 1 ) 和 A3 ， 应用 签名 规则 , 
 B   CanProve   ( A   Says   ( Encrypted   M ) ) . 
 　 　 由 ( 4 ) 和 A1 ， 应用 签名 规则 , 
 B   CanProve   ( TTP   Says   K ) . 
 　 　 由 A4 ， 应用 信任 规则 , 
 B   CanProve   ( K ) . 
 　 　 对 上面 结果 应用 连接 规则 , 
 B   CanProve   ( ( A   Says   ( Encrypted   M ) ∧ ( K ) ) . 
 　 　 由于 B 无法 泄露 K 给 公众 来 证明 A 应对 明文 M 的 可 追究 性 负责 . 在 这种 情况 下 ， Kailar 建议 改变 加密 和 签名 的 先后顺序 ， 即将 协议 中形 如 { { m } K } K - 1a 的 报文 改变 为 形如 { { m } K - 1a } K 的 报文 ， 从而 得到 签名 的 明文 ， 以便 作 形式化 分析 . 但 通过观察 上述 协议 ， 我们 可以 发现 ， 即使 在 第 ( 1 ) 步中 ， A 将 { { m } K } K - 1a 改为 { { m } K - 1a } K ， B 仍然 无法 生成 报文 { { m } K - 1b } K ， 除非 加密 运算 和 签名 是 可 交换 的 . 因此 ， A 不 可能 得到 签名 { m } K - 1b 来 证实 B 收到 了 报文 m . 
 　 　 另一方面 ， 该 协议 的 会 话 密钥 K 是 临时 生成 的 ， 仅 用于 当前 协议 报文 的 加密 ， 因而 在 仲裁 时 可 出示 密钥 K . 
 3   结论 
 　 　 根据 前面 3 个 例子 的 分析 ， 我们 认为 Kailar 逻辑 存在 3 个 缺陷 ： 
 　 　 ( 1 )   逻辑 只能 分析 协议 的 可 追究 性 ， 不能 分析 协议 的 公平性 . 这 是 它 最 主要 的 缺陷 . 
 　 　 ( 2 )   逻辑 在 解释 协议 语句 时 ， 只能 解释 那些 签过 名 的 明文 消息 ， 这 就 限制 了 它 的 使用 范围 . 因此 ， Kailar 逻辑 需要 作 进一步 的 扩充 ， 使 它 能 解释 和 分析 签过 名 的 加密 消息 . 
 　 　 ( 3 )   Kailar 逻辑 在 推理 之前 需要 引入 一些 初始化 假设 . 不幸 的 是 ， 引入 这些 初始化 假设 是 一个 非 形式化 的 过程 ， 不 当地 引入 初始化 假设会 导致 协议 分析 的 失败 . 所以 ， 如何 形式化 地 列举 初始化 假设 和 解释 协议 语句 是 需要 解决 的 问题 . 
 致谢 　 本文 的 研究 工作 得到 国家自然科学基金 资助 ， 此 项目编号 为 69673016 . 在 此 表示感谢 ! 
 * 本文 研究 得到 国家自然科学基金 资助 . 
 作者简介 ： 周典萃 ， 1971 年生 ， 硕士 ， 主要 研究 领域 为 信息安全 基础理论 . 
 　 　 　 　 　 卿斯汉 ， 1939 年生 ， 研究员 ， 博士生 导师 ， 主要 研究 领域 为 信息安全 理论 和 技术 . 
 　 　 　 　 　 周展 飞 ， 1969 年生 ， 博士后 ， 主要 研究 领域 为 密码 理论 ， 应用 数学 . 
 本文 通讯联系 人 ： 卿斯汉 ， 北京 100080 ， 中国科学院 软件 研究所 
 作者 单位 ： 中国科学院 软件 研究所 　 北京 　 100080 　 中国科学院 信息安全 技术 工程 研究 中心 　 北京 　 100080 
 参考文献 
 　 1 　 Abadi   M ,   Burrows   M ,   Needham   M .   A   logic   of   authentication .   ACM   Transactions   on   Computer   Systems ,   1990 , 8 ( 1 ) : 18 ～ 36 
 　 2 　 Kailar   R .   Accountability   in   electronic   commerce   protocols .   IEEE   Transactions   on   Software   Engineering ,   1996 , 22 ( 5 ) : 313 ～ 328 
 　 3 　 O ' Toole   K   R .   The   Internet   billing   server   transaction   protocol   alternatives .   INI   TR   1994 - 1 ,   Carnegie   Mellon   University :   Information   Networking   Institute .   1994 
 　 4 　 Deng   R   H ,   Gong   L .   Practical   protocols   for   certified   electronic   mail .   Journal   of   Network   and   Systems   Management ,   1996 , 4 ( 3 ) : 279 ～ 297 
 　 5 　 Postel   J ,   Reynolds   J .   File   transfer   protocol .   RFC   959 ,   1985 
 　 6 　 Zhou   J ,   Gollman   D .   A   fair   non - repudiation   protocol .   In :   Roscheisen   M ,   Serban   C   eds .   Proceeding   of   1996   IEEE   Symposium   on   Security   and   Privacy .   Oakland ,   CA :   IEEE   Computer   Society   Press ,   1996 .   55 ～ 61 
 本文 1999 - 02 - 08 收到 原稿 , 1999 - 05 - 25 收到 修改稿 
