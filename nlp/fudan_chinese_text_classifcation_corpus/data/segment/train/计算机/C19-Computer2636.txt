软件 学报 
 JOURNAL   OF   SOFTWARE 
 1999 年   第 10 卷   第 7 期 　 No.7   Vol.10   1999 
 
 
 
 支持 多 Agent 通信 的 扩展 BDI 逻辑 
 陈 建中 　 刘大有 　 唐 海鹰 　 胡 　 明 
 　 　 摘要 　 BDI （ 信念 、 期望 和 意图 ） 逻辑 是 当前 agent 理论 研究 的 热点 课题 之一 , 相关 研究 工作 较 少 涉及 对 agent 间通信 的 描述 . 文章 旨在 提出 一个 能 表示 和 推理 多 agent 间 基于 言语 行为 理论 的 通信 行为 的 扩展 BDI 逻辑 . 该 逻辑 是 一个多 类 、 带 量词 并 具有 分枝 时序 结构 的 一阶多 模态逻辑 , 除了 包含 标准 BDI 逻辑 的 模态 和 时态 算子 之外 , 还 引入 了 一些 必要 的 逻辑 算子 和 构造 符 , 用于 刻画 agent 为 实现 其 意图 而 具有 的 规划 能力 , 以及 对 多 agent 通信 给出 正确 的 语用 解释 . 文章 讨论 了 逻辑 的 语法 和 语义 , 并 对 言语 行为 进行 了 逻辑 分类 和 解释 . 
 　 　 关键词 　 BDI   agent 逻辑 , 多 agent 通信 , 言语 行为 . 
 　 　 中图法 分类号 　 TP18 
 An   Extended   BDI   Logic   for   Modeling   Multi - agent   Communication 
 CHEN   Jian - zhong1 , 2 　 LIU   Da - you1 , 2 　 TANG   Hai - ying1 , 2 　 HU   Ming3 
 1 ( Department   of   Computer   Science 　 Jilin   University 　 Changchun 　 130023 ) 
 2 ( Open   Symbol   Computation   and   Knowledge   Engineering   Laboratory   of   State   Education   Department 
 Jilin   University 　 Changchun 　 130023 ) 
 3 ( Department   of   Computer   Science 　 Jilin   Institute   of   Technology 　 Changchun 　 130012 ) 
 　 　 Abstract 　   Although   BDI   approach   is   currently   a   subject   of   much   ongoing   research ,   less   relative   works   about   modeling   communication   have   been   involved .   The   aim   of   this   paper   is   to   extend   classical   BDI   logic   for   representing   and   reasoning   about   speech   act   interactions   between   multi   agents .   A   many - sorted ,   quantified ,   first - order ,   multi - modal   logic   with   branching   time   structure   is   presented ,   including   standard   BDI   modal   and   temporal   operators   like   belief ,   goal ,   intention ,   etc .   In   addition ,   some   operators   and   constructs   are   introduced   for   characterizing   agents '   “ know - how ”   or   having   plans   about   how   to   achieve   their   intentions   and   for   interpreting   the   pragmatic   meanings   of   inter - agent   communication .   While   discussing   the   syntax   and   semantics   of   the   logic ,   some   kinds   of   illocutionary   speech   acts   are   logically   classified   and   interpreted . 
 　 　 Key   words 　 BDI   agent   logic ,   multi - agent   communication ,   speech   act . 
 　 　 分布式 人工智能 DAI ( distributed   artificial   intelligence ) 主要 研究 由 多个 计算 agent 组成 的 分布式系统 中 的 各种 社会 行为 . 按 我们 的 观点 ［ 1 ］ , DAI 可 分为 3 个 相关 子 领域 : 分布式 问题 求解 DPS ( distributed   problem   solving ) 、 智能 agent   IA ( intelligent   agents ) 和 多 agent 系统 MAS   ( multi - agent   system ) , 其中 IA 和 MAS 无疑 是 当前 DAI 研究 的 热点 . 一个 智能 agent 至少 应 具有 以下 性质 : 一方面 , 它 初始 被 赋予 承担 一些 任务 和 求解 某些 问题 的 能力 , 并 能 决策 如何 及时 完成 任务 和 提交 结果 ; 另一方面 , 一个 agent 具有 社会性 , 它 通常 与 环境 中 其他  agent 共存 , 并 以 某种 方式 相互作用 . 
 　 　 许多 研究 结果表明 , 一个 或 一组 智能 agent 可以 被 看做 是 拥有 信念 ( beliefs ) 、 期望 ( desires ) 、 规划 ( plans ) 和 意图 ( intentions ) 等 精神状态 的 所谓 意识 系统 ( intentional   system ) . 这方面 的 研究 工作 已有 许多 , 其中 著名 的 当数 由 澳大利亚 的 Rao 和 Georgeff 等 人 提出 的 BDI 逻辑 和 BDI   agent 结构 . 90 年代 以来 , 他们 在 Bratman ［ 2 ］ , Cohen 和 Levesque ［ 3 ］ 等 人 的 前期工作 基础 上 ， 给出 了 一系列 相关 的 研究成果 ［ 4 , 5 ］ , 成为 agent 理论 研究 领域 最有 代表性 的 基础 工作 . 
 　 　 一个 典型 的 BDI   agent 通常 包含 4 个 主要 的 数据结构 : ① 信念 集 , 用于 表示 agent 的 世界 模型 , 其中 的 信息 可能 不 完全 或 不 正确 ; ② 期望 或 目标 ( goals ) 集 , 对应 于 分配 给 agent 要 执行 的 任务 ; ③ 意图 集 , 表示 agent 已 决定 或 承诺 完成 的 期望 , agent 将 持续 它 对 一个 意图 的 承诺 , 直到 它 相信 该 意图 已 满足 , 或 由于 某些 原因 该 意图 不再 可 完成 ［ 3 ］ ; ④ 规划 库 , 包括 一组 预定 义 规划 或 方法 , 表示 agent 为 完成 各种 意图 所 遵循 的 过程 性知识 或 程序 . 总之 , 它们 分别 表示 了 agent 的 陈述 性 、 选择性 、 决策性 和 过程 性 状态 . 一个 称为 agent 解释器 的 控制 模块 操作 和 管理 这些 数据结构 之间 的 数据 和 控制流 , 负责 更新 信念 、 形成 新 期望 、 从 当前 活动 期望 中 挑选 新 意图 并 选取 适当 规划 ， 执行 相应 的 意图 . 
 　 　 在 已有 的 相关 研究 工作 ［ 4 ～ 6 ］ 中 , 多数 是 侧重于 对 信念 、 期望 和 意图 3 种 状态 的 形式化 描述 和 讨论 三者 间 的 逻辑关系 , 而 对 规划 和 agent 间通信 的 语义 表示 却 少有 涉及 . 本文 试图 从 解决 这一 问题 出发 , 给出 一个 能 有效 表示 和 推理 agent 规划 和 通信 的 扩展 BDI 逻辑 . 
 1 　 多 agent 通信 和 言语 行为 理论 ( speech   act   theory ) 
 　 　 DAI 环境 中 的 agent 通常 不 可能 拥有 关于 世界 的 完全 信息 和 知识 , 通信 的 基本 作用 就是 为 agent 提供 与 世界 交换 必要 信息 的 手段 . 多 agent 系统 中 的 协同 、 协作 、 协商 、 和 全局 一致 等 都 通过 有效 的 agent 间通信 来 实现 . 
 　 　 Werner ［ 7 ］ 把 多 agent 通信 分为 5 类 : ① 无 通信 ; ② 信号 通信 ; ③ 基于 计算 的 消息传递 , 如 Actor 并发 系统 ; ④ 规划 交换 , 如 部分 全局 规划 ( PGP ) ; ⑤ 基于 言语 行为 的 通信 . 其中 基于 言语 行为 的 多 agent 通信 是 当前 的 研究 热点 , 它 在 一定 程度 上 模拟 了 人类 的 通信 行为 , 而且 有 坚实 的 理论 和 技术 基础 , 另外 , 许多 著名 的 agent 通信 语言 , 如 知识 查询 与 操作 语言 ( KQML ) 和 知识 交换 格式 ( KIF ) 等 都 直接 或 间接 地 基于 言语 行为 理论 . 
 　 　   言语 行为 理论 源于 语言学 , 现已 成为 人工智能 和 语言学 理论 的 核心 . 它 主要 研究 语言 的 语用 理论 , 其 基本 公理 是 把 人们 的 日常 话语 看作 说话 人 做出 的 带有 某种 意图 的 动作 , 这些 所谓 言语 动作 也 像 那些 物理 动作 一样 能 引起 世界 状态 的 变化 . 一个 言语 行为 至少 包含 3 类 动作 : ① 以言 指事 , 即 说 了 一句 语法 上 可 接受 的 话语 ; ② 以 言行 事 , 即该 话语 带有 某种 言外 之力 , 能 把 说者 的 意图 传达 给 听者 ; ③ 以言 成事 , 即以 言行 事 的 结果 是 做出 一些 动作 或 产生 一些 效果 . 通常 言语 行为 即 指以 言行 事 的 行为 . 一个 言语 行为 包含 两 部分 : 言外 之力 和 行为 命题 . 言外 之力 可用 来 区分 言语 行为 的 不同 种类 , 而 命题 说明 对 状态 的 改变 . Singh ［ 8 ］ 把言外 之力 分为 如下 6 类 : ① 断言 类 ;  ② 指令 类 ; ③ 承诺 类 ; ④ 许可 类 ; ⑤ 禁止 类 ; ⑥ 宣告 类 . 
 　 　 本文 给出 的 形式化 逻辑 通过 引入 一个 模态 算子 , 基于 agent 的 意图 和 规划 库 , 讨论 上述 言语 行为 的 形式 语义 . 采用 的 原则 是 : ① 把 言语 行为 看做 是 说话 者 （ 或 消息 发送者 ） 在 一段时间 内 做出 的 动作 ; ② 听者 （ 或 消息 接收者 ） 根据 听说 双方 的 状态 对 收到 的 消息 给出 独立 解释 ; ③ 在 逻辑 中 , 从 说话 者 角度 给出 关于 每个 言语 行为 的 发生 条件 、 可 满足条件 及 以 言行 事 行为 的 执行 对 双方 精神状态 的 可能 影响 等 的 语用 解释 . 
 2 　 基本概念 
 　 　 先 给出 一些 概念 的 非 形式化 说明 : 用 Dag , Dac 和 Dsa 分别 表示 系统 中 所有 agent 的 集合 、 所有 原子 动作 的 集合 和 所有 言语 行为 的 集合 . 遵循 经典 BDI 逻辑 ［ 4 ］ , 扩展 BDI 逻辑 基于 具有 分枝 时序 结构 的 可能 世界 语义 模型 ; 令 T 是 一个 时间 点 （ 或 时刻 ） 集合 , R 表示 一个 在 T 上 成立 的 二元 分枝 时序 关系 , 即 RT × T , 则 R 和 T 在 逻辑 上 构成 一棵 分枝 时序 树 ; Dac 中 的 任一 动作 和 Dsa 中 的 任一 言语 行为 （ 二者 统称 为 动作 ） 被 看作 沿 T 中 的 时间 点 执行 , 我们 定义 一个 标号 函数 Act 用于 把 分枝 时序 树中 的 每条 弧 与 一个 动作 相连 ; 设 函数 Agt 返回 执行 每一 动作 的 agent . 在 下述 定义 和 描述 中 , IN 表示 大于 0 的 自然数 集合 ; ( s ) 表示 一个 集合 s 的 幂 集合 . 
 　 　 定义 1 .   设 T 是非 空 时间 点 集合 , RT × T 是 T 上 的 一个 全序 的 、 向 后 线性 的 分枝 时序 关系 , 则 ( T , R ) 称为 上 的 一个 世界 , 用 W 表示 T 上 所有 世界 的 集合 , 若 w ∈ W , 则 Tw 和 Rw 分别 表示 w 中 的 时间 点 集合 和 时序 关系 ; 若 t ∈ Tw , 则 ( w , t ) 称为 w 中 的 一个 局势 , 用 Sw 表示 w 中 所有 局势 的 集合 , 表示 中 所有 局势 的 集合 . 
 　 　 定义 2 .   若 w ∈ W , 则 w 上 的 一条 路径 是 一个 时间 点 序列 ( t1 , t2 , ... , tk , ... ) , 其中 k ∈ IN 且 ( tk , tk + 1 ) ∈ Rw , 用 Pw 表示 w 上 所有 路径 的 集合 ; 若 p ∈ Pw 且 k ∈ IN , 则 pk 表示 路径 p 上 第 k 个 时间 点 , pk 表示 p 上 始于 pk 的 子 路径 . 
 　 　 定义 3 .   一条 规划 是 一个 四元组 〈 plan - goal , plan - premise , plan - body , plan - result 〉 , 其中 规划 目标 plan - goal 是 一个 谓词 , 表示 规划 名 和 该 规划 的 触发 参数 ; 规划 体 plan - body 表示 该 规划 被 触发 时要 执行 的 程序 或 动作 （ 序列 ） , 由 集合 Dac 和 Dsa 的 元素 （ 或 元素 序列 ） 及 规划 子目标 构成 , 设 Dpb 表示 所有 规划 体 的 集合 ; 规划 前提 plan - premiseS 表示 执行 pb ∈ Dpb 必须 满足 的 局势 集合 ; 规划 结果 plan - resultS 表示 在 规划 前提 的 一个 局势 下 执行 pb 后 可能 产生 的 新 局势 集合 ; 且 有 : 若 一条 规划 执行 过程 中 的 两个 局势 满足 ( w1 , t1 ) ∈ plan - premise , ( w2 , t2 ) ∈ plan - result , 则 我们 说 w1 = w2 , 这 保证 了 规划 的 执行 过程 总是 发生 在 世界 内 , 而 非 世界 间 . 一个 agent 的 规划 库是 一个 有 向 无环 与 或 图 , 图中 的 顶点 是 规划 , 每条 弧 被 赋予 一个 标号 函数 Goal - to - plan , 用于 连接 高层 规划 （ 规划 体中 可 包含 规划 子目标 ） 和 其 可能 的 若干 子 规划 （ 与 高层 规划 的 子目标 对应 ） . 一个 与 顶点 被 成功 执行 , 当且 仅 当 每个 子规 化 被 执行 ; 一个 或 顶点 被 成功 执行 , 当且 仅 当 至少 一个 子规 化 被 执行 . 
 　 　 令 Dpl 表示 一个 agent 规划 库中 所有 规划 的 集合 . 4 个 函数 Pg , Pp , Pb , Pr 都 以 一条 规划 pl ∈ Dpl 为 参数 , 分别 返回 相应 的 plan - goal , plan - premise , plan - body , plan - result . 下面 给出 一条 规划 的 BNF 语法结构 , 其中 ‘ 〈 a 〉 + ’ 代表 项 a 的 一次 或 多次 出现 , ‘ ; ’ , ‘ ‖ ’ 和 ‘ * ’ 分别 是 顺序 、 并行 和 迭代 型 复合 动作 合成 符号 . 
 
 〈 plan 〉 ∷ = 〈 plan - goal 〉 〈 plan - premise 〉 〈 plan - body 〉 〈 plan - result 〉 
 〈 plan - goal 〉 ∷ = L 中 的 谓词 
 〈 plan - premise 〉 ∷ = P ( S ) 的 任一 元素 
 〈 plan - result 〉 ∷ = P ( S ) 的 任一 元素 
 〈 plan - body 〉 ∷ = 〈 AND 〈 plan - exp 〉 〉 ｜ 〈 OR 〈 plan - exp 〉 + 〉 
 〈 plan - exp 〉 ∷ = Dac 的 任一 元素 ｜ Dsa 的 任一 元素 ｜ 〈 plan - goal 〉 ｜ 
 〈 plan - exp 〉 ; 〈 plan - exp 〉 ｜ 〈 plan - exp 〉 ‖ 〈 plan - exp 〉 ｜ 〈 plan - exp 〉 * 
 
 　 　 为 表示 和 说明 规划 执行 的 语义 , 引入 两个 谓词 : perf ( pb , p , u , v ) 和 exec ( pe , p , u , v ) 分别 表示 一个 规划 体 pb ∈ Dpb 和 pb 中 的 一个 规划 表达式 pe 在 路径 p 上 的 第 u 个 和 第 v 个 时间 点 之间 被 执行 ( u , v ∈ IN 且   u ≤ v ) 的 事实 . 
 　 　 perf ( pb , p , u , v ) 　 iff 　 若 pb 是 与 结点 , 则 对 pb 中 的 所有 pe , 作 exec ( pe , p , u , v ) ; 
 　 　 　 　 否则 ( pb 是 或 结点 ) 对 pb 中 至少 一个 pe , 作 exec ( pe , p , u , v ) ; 
 　 　 exec ( ac , p , u , v ) 　 iff 　 v = u + 1 且 Act ( pu , pv ) = ac , 其中 ac ∈ Dac 或 ac ∈ Dsa ; 
 　 　 exec ( pg , p , u , v ) 　 iff 　 perf ( Pb ( Goal - to - plan ( pg ) ) , p , u , v ) , 其中 pg 是 一个 规划 目标 ; 
 　 　 exec ( pe1 ; pe2 , p , u , v ) 　 iffn ∈ { u , ... , v } , exec ( pe1 , p , u , n ) 且 exec ( pe2 , p , n , v ) ; 
 　 　 exec ( pe1 ‖ pe2 , p , u , v ) 　 iff 　 exec ( pe1 , p , u , v ) 且 exec ( pe2 , p , u , v ) ; 
 　 　 exec ( pe * , p , u , v ) 　 iff 　 u = v 或 exec ( pe ; ( pe * ) , p , u , v ) . 
 　 　 另设 函数 Agt 以 规划 体 或 规划 表达式 为 参数 , 返回 能 执行 该 动作 序列 的 所有 agent 集合 : 
 　 　 , 对 pe 中 所有 动作 , 对 pb 中 所有 pe . 
 　 　 为了 方便 描述 通信 的 语义 , 设 Msg 表示 所有 通信 消息 的 集合 , FC = { assertive , directive , commissive , permissive , prohibitive , declarative } 表示 言语 行为 的 各类 言外 之力 的 集合 ; 一条 消息 m ∈ Msg 被 简单 表示 为 一个二元 组 〈 fc , pp 〉 , 其中 fc ∈ FC , pp 是 一个 命题 ; Dsa 中 的 元素 用 sa ( i , j , m ) 表示 , 其中 m ∈ Msg , 则 exec ( sa ( i , j , m ) , p , u , v ) 意为 在 某 局势 下 , agent   i 从 时刻 u 到 时刻 v 执行 了 一个 对 agent   j 说 话语 （ 或 发送 消息 ） m 的 言语 行为 ; 另 一 谓词 comm ( i , j , m ) 的 含义 是 : comm ( i , j , m ) 为 真 , iff 在 某 局势 下 i 确实 对 j 说 了 m .   
 3 　 支持 多 agent 通信 的 扩展 BDI 逻辑 
 　 　 逻辑系统 是 一个多 类 、 带 量词 的 、 基于 可能 世界 语义 、 具有 分枝 时序 结构 的 一阶多 模态逻辑 . 一些 逻辑 算子 的 含义 可非 形式化 地 解释 如下 : true 算子 表示 逻辑 真 ; ( Bel   i   φ ) , ( Goal   i   φ ) 和 ( Int   i   φ ) 分别 表示 agent   i 有 一个 信念 （ 或 相信 ） φ , 一个 目标 φ 和 一个 意图 （ 或 想要 ） φ 的 事实 , 其中 φ 是 一个 逻辑 公式 , 注意 , 我们 用 目标 代替 期望 , 这 3 个 模态 算子 的 语义 通过 相应 的 可达 关系 给出 , 信念 算子 满足 标准 模态 系统 公理 KD45 , 目标 和 意图 算子 则 满足 公理 KD ; 算子 ‘ = ’ 表示 一阶 等价关系 ; ( i ∈ g ) 表示 agent   i 是 agent 组 g 的 一个 成员 ; ( HasPlan   i   pl ) 表示 在 当前 状态 下 , i 有 一个 规划 pl , 即 pl 在 i 的 规划 库中 ; 在 分枝 时序 结构 中 , 与 局势 有关 、 表现 出 时间 点 性质 的 公式 称为 状态 公式 , 而 与 局势 的 发展 进程 有关 、 表现 出 路径 性质 的 公式 称为 路径 公式 ; 两个 路径 公式 ( Perf   i   pb ) 意为 i 在 当前 路径 中 执行 一个 规划 体 pb , ( Exec   i   ac ) 意为 i 在 当前 路径 中 执行 一个 动作 ac ; 路径 公式 ( PragInt    comm ( i , j , m ) ) 用于 给出 i 在 当前 路径 中 作出 的 一个 言语 行为 的 语用 解释 ; A 是 全称 路径 量词 , A φ 意 为 路径 公式 φ 在 从 当前 状态 开始 的 所有 未来 世界 （ 路径 ） 中 可 满足 ; 两个 基本 时态 联接 符 U 和 N 用于 从 状态 公式 或 路径 公式 构造 路径 公式 , 公式 φ U ψ 意 为 φ 可 满足 直到 ψ 可 满足 , N φ 意 为 φ 将 在 下 一 状态 可 满足 ; 其余 算子 , 如 ( 逻辑 非 ) 、 ∨ ( 逻辑 或 ) 、 ( 全称 量词 ) 等 仍 具有 其 经典 语义 . 
 3.1 　 语   法 
 　 　 定义 4 .   的 字符集 由 下述 符号 组成 : ( 1 )   算子 符号 true , Bel , Goal , Int , = , ∈ , A , HasPlan , Perf , Exec , PragInt , U 和 N ; ( 2 )   逻辑 联接 符 ( 与 ) 和 ∨ ( 或 ) , 全称 量词 符号 ; ( 3 )   可数 集合 Pred 代表 所有 谓词 符号 ; ( 4 )   可数 集合 Func = Funcag ∪ Funcac ∪ Funcsa ∪ Funcpl ∪ Funcpb ∪ Funcgr ∪ FuncS ∪ FuncU , 代表 所有 函数 符号 和 返回值 分别 为 agent 、 原子 动作 、 言语 行为 、 规划 、 规划 体 、 agent 组 、 局势 和 其他 个体 的 函数 符号 ; ( 5 )   可数 集合 Var 代表 变量 符号 ,   Var = Varag ∪ Varac ∪ Varsa ∪ Varpl ∪ Varpb ∪ Vargr ∪ VarS ∪ VarU ; ( 6 )   标点符号 ‘ ) ’ ‘ ( ’ ‘ * ’ 和 ‘ , ’ ; ( 7 )   复合 动作 合成 符 ‘ ; ’ ‘ ‖ ’ 和 ‘ * ’ . 函数 arity : Pred ∪ Func → IN 给出 每个 谓词 和 函数 符号 的 元 , 0 元 谓词 即 为 命题 符号 , 0 元 函数 即 是 常量 . 
 　 　 定义 5 .   L 中 的 项 或者 是 一个 变量 , 或者 是 一个 函数 ; 令 Term 表示 所有 项 的 集合 ; 一个 项 的 类 是 下述 符号 之一 : ag , ac , sa , pl , pb , gr , S , U ; 若 σ 是 一个 类 , 则 有 Term σ = Func σ ∪ Var σ 和 Term = Termag ∪ Termac ∪ Termsa ∪ Termpl ∪ Termpb ∪ Termgr ∪ TermS ∪ TermU . 
 　 　 L 的 合式公式 ( 〈 wff 〉 ) 的 语法 如下 ( 假设 所有 谓词 和 函数 符号 都 已 具有 相应 的 参数 个数 ) . 
 
 
 3.2 　 语 　 义 
 　 　 定义 6 .   的 论域 D 是 逻辑系统 中 所有 语义 对象 构成 的 集合 , D = Dag ∪ Dac ∪ Dsa ∪ Dpl ∪ Dpb ∪ Dgr ∪ DS ∪ DU , 其中 , 非 空集合 Dgr 是 建立 在 Dag 之上 的 所有 agent 组 的 集合 , DS 是 所有 可能 局势 的 集合 , DU 是 所有 其他 个体 对象 集合 , 其余 集合 的 含义 同 前 所述 ; 令 Dn 表示 D 上 所有 n 元组 的 集合 ( n ∈ IN ) . 
 　 　 为 把 语法 符号 同 语义 对象 联系 在 一起 , 定义 下述 解释 函数 . 
 　 　 定义 7 .   谓词 解释 函数 P : Pred × W × T → p （ ） , 因此 , 若 Q ∈ Pred , n ∈ IN , w ∈ W , t ∈ Tw , 且 arity ( Q ) = n , 则 P ( Q , w , t ) Dn , 函数 P 应 保持 被 解释 谓词 的 元数 不变 ; 函数 解释 函数 F : Fun → ( → D ) , 因此 , 若 f ∈ Fun , n ∈ IN , 且 arity ( f ) = n , 则 F ( f ) Dn , 函数 F 应 保持 被 解释 函数 的 元数 和 类 不变 ; 变量 指派 V : Var → D , 因此 , 若 v ∈ Var σ , 则 V ( v ) ∈ D σ , V 应 保持 被 指派 变量 的 类 不变 . 
 　 　 一个 特殊 的 函数 ‖ τ ‖ F , V 把 一个 项 τ 的 语义 指 称为 F 或 V . 
 　 　 定义 8 .   令 τ ∈ Term , 如果 τ ∈ Fun , 则 ‖ τ ‖ F , V 是 F ( τ ) , 否则 是 V ( τ ) , 在 无 二义性 的 情况 下 , 角标 F , V 通常 省略 . 
 　 　 定义 9 .   的 模型 M 是 一个 元组 结构 〈 T , R , W , D , Act , Agt , Msg , PL , MI , BR , GR , IR , F , P 〉 , 其中 T , R , W , D , Act , Agt , Msg , F , P 的 定义 同 前 ; 函数 PL : Dag × W × T → p ( Dpl ) 返回 每个 agent 在 每个 局势 下 的 规划 库 ; 函数 ML : Dag × Msg × W × T → p ( W × T ) 用于 每个 agent 根据 其 当前 状态 解释 接收 到 的 每条 消息 , 解释 的 结果 是 旧 状态 转换 为 新 状态 ; BR : Dag → p ( W × T × W ) 是 每个 agent 的 信念 可 达 关系 , 满足 序列 性 、 传递性 和 欧几里德 性 ; GR : Dag → p ( W × T × W ) 和 IR : Dag → p ( W × T × W ) 分别 是 每个 agent 的 目标 可 达 关系 和 意图 可 达 关系 , 满足 序列 性 . 
 　 　 的 语义 规则 如下 ( * : 是 映射函数 , 是 映射 复写 算子 ) , 其 定义 由 解释 结构 和 公式 组成 , 通过 可 满足 关系 符号 联接 . 状态 公式 的 解释 结构 形 如 〈 M , V , w , t 〉 , 其中 M 是 一个 模型 , V 是 变量 指派 , w ∈ W , t ∈ Tw ; 路径 公式 的 解释 结构 形 如 〈 M , V , w , p 〉 , 其中 p 是 w 上 的 一条 路径 . 
 
 
 3.3 　 派生 算子 和 连接符 
 　 　 从 上述 基本 算子 和 连接符 派 生出 其他 有用 的 算子 和 连接符 可以 增强 逻辑 公式 的 易读性 . 从 , ∨ 和 可派 生出 ∧ ( 逻辑 与 ) , ( 逻辑 结果 ) , ( 逻辑 等价 ) 和 ( 存在 量词 ) ; 由 A 可定义 存在 路径 量词 E , 即意 为 状态 公式 φ 在 某条 路径 上 可 满足 ; 两个 单目 时态 算子 ◇ 和 □ 分别 表示 ‘ 将要 ’ 和 ‘ 永远 ’ : ◇ φ = deftrueU φ , , 路径 公式 , ◇ φ ( 或 □ φ ) 在 未来 某 路径 上 可 满足 , 若 φ 在 该 路径 上 的 某个 ( 或 全部 ) 时刻 可 满足 . 派生 算子 Achv 表示 如下 事实 : agent   i 在 执行 动作 ac 的 同时 达到目标 φ , 〈 M , V , w , p 〉 n , k ∈ IN , n ≤ k * ( Exec   i   ac ) ) 且 ( 
 3.4 　 言语 行为 的 语用 解释 
 　 　 下面 详细 讨论 算子 PragInt 的 语义 , 即 言语 行为 的 语用 解释 . 先作 如下 说明 : ① 根据 通信 双方 的 认知 状态 , 给出 每 类 消息 的 可 满足条件 , 即 言语 行为 如何 能 被 成功 执行 的 条件 ; ② 谓词 comm ( i , j , m ) 的 引入 使 语用 解释 算子 作用 于 公式 , 而 非 直接 作用 于 动作 ; ③ 言语 行为 的 言 外之力 不同 , 其 语用 解释 也 不同 . 假设 在 路径 p 上 从 时刻 n 到 时刻 k , 一个 言语 行为 sa ( i , j , 〈 fc , pp 〉 ) 发生 , 即 说话 者 （ 或 发信 agent ） i 对 听话者 （ 或 收信 agent ） j 说话 （ 或 发送 消息 ） 〈 fc , pp 〉 , 其中 fc 表示 该 言语 行为 的 言 外之力 , pp 是 行为 命题 , 下面 由 i 解释 该 言语 行为 的 语义 . 
 　 　 . 〈 M , V , w , p 〉 ( PragInt   comm ( i , j , 〈 assertive , pp 〉 ) )   iff   n , k ∈ IN * 若 n ≤ k 则 exec ( sa ( i , j , 〈 assertive , pp 〉 ) , p , n , k ) 且 〈 M , V , w , pk 〉  pp . 一个 断言 类 言语 行为 , 例如 “ 门开 了 . ” , 可 满足 , 若 其 行为 命题 pp 在 话 说完 后 开始 为 真 . 
 　 　 . 〈 M , V , w , p 〉 ( PragInt   comm ( i , j , 〈 directive , pp 〉 ) )   iffn , k ∈ IN * 若 n ≤ k 则 exec ( sa ( i , j , 〈 directive , pp 〉 ) , p , n , k ) 且 ( M , V , w , pk 〉 ( Bel   i   ( ( Int   j   pp ) ∧ ( HasPlan   j   Goal - to - plan ( pp ) ) ) Upp ) . 一个 指令 类 言语 行为 , 例如 “ 开门 ！ ” , 可 满足 , 若 i 相信 : ( 1 )   沿 路径 p 从 时刻 k 开始 , j 想要 （ 或 有 意图 ） 并 知道 怎样 （ 或 有 规划 ） 达到 pp （ 或 使 pp 成立 ） ; 且 ( 2 )   pp 在 未来 某 时刻 将 为 真 . 
 　 　 . 〈 M , V , w , p 〉 ( PragInt   comm ( i , j , 〈 commissive , pp 〉 ) )   iffn , k ∈ IN * 若 n ≤ k 则 exec ( sa ( i , j , 〈 commissive , pp 〉 ) , p , n , k ) 且 〈 M , V , w , pk 〉 ( ( ( Int   i   pp ) ∧ ( HasPlan   i   Goal - to - plan ( pp ) ) ) Upp ) . 一个 承诺 类 言语 行为 , 例如 “ 我要 开门 . ” , 可 满足 , 若 ( 1 )   沿 路径 p 从 时刻 k 开始 , i 想要 并 知道 怎样 达到 pp ; 且 ( 2 )   pp 在 未来 某 时刻 将 为 真 . 
 　 　 . 〈 M , V , w , p 〉 ( PragInt   comm ( i , j , 〈 permissive , pp 〉 ) )   iffn , k ∈ IN * 若 n ≤ k 则 exec ( sa ( i , j , 〈 permissive , pp 〉 ) , p , n , k ) 且 ( ac . ( Bel   i   ( ( Achv   j   ac   true ) ( Achv   j   ac   ( HasPlan   j   Goal - to - plan ( A □ pp ) ) ) ) ) ) . 一个 许可 类 言语 行为 , 例如 “ 你 可以 开门 . ” , 在 一条 路径 上 可 满足 , 若该 言语 行为 在 该 路径 上 将来 某 时刻 有益于 j , 即 j 将 被 许可 做 一些 以前 不能 做 的 动作 ac , 或者说 该 言语 行为 的 执行 将 导致 一个 状态 , 在 该 状态 下 , j 不能 避免 动作 ac 的 执行 条件 的 发生 . 
 　 　 . 〈 M , V , w , p 〉 ( PragInt   comm ( i , j , 〈 prohibitive , pp 〉 ) ) iffn , k ∈ IN * 若 n ≤ k 则 exec ( sa ( i , j , 〈 prohibitive , pp 〉 ) , p , n , k ) 且 ( ac . ( Bel   i   ( ( Achv   j   ac   true ) A ( Achv   j   ac   ( HasPlan   j   Goal - to - plan ( A □ pp ) ) ) ) ) ) . 一个 禁止 类 言语 行为 , 例如 “ 你 不 可以 开门 . ” , 可 满足 , 若 i 相信 j 知道 怎样 做 某些 动作 ac 以 达到 ( A □ pp ) , 即 j 应该 有 避免 达到 pp 的 规划 , 并且 pp 在 给定 路径 上 不会 成立 . 
 　 　 . 〈 M , V , w , p 〉 ( PragInt   comm ( i , j , 〈 declarative , pp 〉 ) )   iffn , k ∈ IN * 若 n ≤ k 则 exec ( sa ( i , j , 〈 declarative , pp 〉 ) , p , n , k ) 且 〈 M , V , w , pk 〉 pp 且 ( u ∈ IN , 若 n ≤ u ＜ k 则 〈 M , V , w , pu 〉   pp ) 且 〈 M , V , w , p 〉 ( ( ( Int   i   pp ) ∧ ( HasPlan   i   Goal - to - plan ( pp ) ) ) 　 U 　 pp ) . 一个 宣告 类 言语 行为 , 例如 “ 我 宣布 游戏 开始 . ” , 可 满足 , 若 ( 1 )   pp 在 未来 某 时刻 k 将 首次 为 真 ; 且 ( 2 )   沿 路径 p 从 时刻 n 开始 , 在 说话 过程 中 , i 想要 并 知道 怎样 使 pp 成立 . 
 　 　 j 将 根据 其 当前 状态 , 用 函数 ML 解释 收到 的 每条 消息 , 从而 更新 自己 的 状态 , 然后 , 决定 执行 或 拒绝 消息 中 包含 的 或 隐含 的 动作 . 限于 篇幅 , 关于 j 对 接收 到 的 言语 行为 的 讨论 从略 .   
 4 　 结   论 
 　 　 目前 , 有关 智能 agent 和 多 agent 系统 建造 的 方法 和 技术 越来越 受到 学术界 和 企业界 关注 , 对 建造 这 类 系统 的 理论 基础 的 需要 也 日渐 增多 . 本文 的 工作 即 以此 为 背景 , 并 参考 了 相关 的 研究 结果 ［ 4 ～ 6 , 8 , 9 ］ , 主要 工作 包括 : ① 给出 了 一个 扩展 的 BDI   agent 形式化 逻辑 , 试图 支持 多 agent 通信 行为 的 描述 和 推理 ; ② 在 逻辑 中 包含 了 对 agent 规划 和 规划 库 结构 的 描述 和 讨论 ; ③ 通过 引入 一系列 逻辑 算子 和 构造 符 , 从 消息 发送 方 角度 , 讨论 了 基于 言语 行为 理论 的 agent 间通信 的 语用 解释 . 与 相关 工作 比较 , 本文 是 对 经典 BDI 逻辑 和 文献 ［ 8 ］ 工作 的 扩展 . KQML 从 通信 语言 实现 角度 对 言语 行为 作 了 更 细致 的 分类 和 应用 , 但 并未 讨论 其 逻辑 语用 解释 . 而 文献 ［ 9 ］ 则 以 agent 协作 代理 任务 求解 和 具体 系统 为 背景 , 讨论 了 基于 言语 行为 理论 的 agent 通信 过程 . 本文 的 工作 与 它们 相比 , 抽象层次 更高 , 更 具有 一般性 . 
 　 　 本文 的 研究 结果 还 很 初步 , 对 基于 言语 行为 的 agent 间通信 的 讨论 尚 不够 全面 和 成熟 . 进一步 的 研究 工作 有 : 对 逻辑系统 进行 改进 和 扩展 , 将 言语 行为 与其 前提条件 有机 结合 , 统筹 考虑 通信 双方 对 消息 的 语用 解释 和 意识 状态 的 改变 ; 以该 逻辑 为 理论 基础 , 研究 面向 agent 技术 的 其他 一些 课题 , 如 agent 结构 , 多 agent 协作 、 协同 和 协商 , 面向 agent 程序设计 等 . 
 　 　 本文 研究 得到 国家自然科学基金 、 国家 863 高科技 项目 基金 、 国家教育部 博士点 基金 和 吉林大学 符号计算 与 知识 工程 国家教育部 开放 实验室 资金 资助 . 作者 陈 建中 , 1968 年生 , 博士 , 副教授 , 主要 研究 领域 为 多 Agent 系统 , 分布式 人工智能 , 数据结构 与 算法 . 刘大有 , 1942 年生 , 教授 , 博士生 导师 , 主要 研究 领域 为 人工智能 与 软件 , 多 Agent 系统 , 专家系统 , 知识 工程 .  唐 海鹰 , 1971 年生 , 在职 博士生 , 讲师 , 主要 研究 领域 为 多 Agent 系统 , 分布式 人工智能 . 胡明 , 1963 年生 , 在职 博士生 , 副教授 , 主要 研究 领域 为 多 Agent 系统 , 分布式 人工智能 . 
 　 　 本文 通讯联系 人 : 陈 建中 , 长春 130023 , 吉林大学 计算机科学 系 
 　 　 作者 单位 ： 陈 建中 　 刘大有 　 唐 海鹰 （ 吉林大学 计算机科学 系 　 长春 　 130023 ； 吉林大学 符号计算 与 知识 工程 国家教育部 开放 实验室 　 长春 　 130023 ） ； 胡 　 明 ( 吉林 工学院 计算机系 　 长春 　 130012 ) 
 参考文献 
 　 1 　 Chen   Jian - zhong ,   Liu   Da - you ,   Tang   Hai - ying .   A   template   architecture   for   modeling   intelligent   agents . In :  Sirirucha - tapong   P ,   Lin   Zong - kai   eds .   Proceedings   of   the   International   Workshop   on   CSCW   in   Design .   Beijing :   International   Academic   Publishers ,   1997 .   196 ～ 201 
 　 2 　 Bratman   M   E .   Intentions ,   Plans ,   and   Practical   Reason .   Massachusetts :   Harvard   University   Press ,   1987 
 　 3 　 Cohen   P   R ,   Levesque   H   J .   Intention   is   choice   with   commitment .   Artificial   Intelligence ,   1990 , 42 ( 3 ) : 213 ～ 261 
 　 4 　 Rao   A   S ,   Georgeff   M   P .   Modeling   rational   agents   within   a   BDI - architecture .   In :   Fikes   R ,   Sandewall   E   eds .   Proceedings   of   the   2nd   International   Conference   on   Principles   of   Knowledge   Representation   and   Reasoning   ( KR   &   R - 91 ) .   San   Mateo ,   CA :   Morgan   Kaufmann   Publishers ,   1991 .   473 ～ 484 
 　 5 　 Rao   A   S ,   Georgeff   M   P ,   Sonenberg   E   A .   Social   plans :   a   preliminary   report . In :   Werner   E ,   Demazeau   Y   eds .   Decentralized   AI   3 — — Proceedings   of   the   3rd   European   Workshop   on   Modeling   Autonomous   Agents   in   a   Multi - agent   World   ( MAAMAW - 91 ) .   Amsterdam :   Elsevier   Science   Publishers ,   1992 .   57 ～ 76 
 　 6 　 Wooldridge   M ,   Jennings   N   R .   Formalizing   the   cooperative   problem   solving   process .   In :   Klein   M   ed .   Proceedings   of   the   13th   International   Workshop   on   Distributed   Artificial   Intelligence   ( IWDAI - 94 ) .   Seattle ,   WA :   AAAI   Press ,   1994 .   403 ～ 417 
 　 7 　 Werner   E .   Cooperating   agents :   a   unified   theory   of   communication   and   social   structure .   In :   Gasser   L ,   Huhns   M   N   eds .   Distributed   Artificial   Intelligence ,   Vol   Ⅰ .   Los   Altos ,   CA / Pitman :   Morgan   Kaufmann   Publishers ,   1989 .   3 ～ 36 
 　 8 　 Singh   M   P .   Multiagent   Systems :   A   Theoretical   Framework   for   Intentions , Know - how ,   and   Communication   ( LNAI   Volume   799 ) .   Berlin :   Springer - Verlag ,   1994 
 　 9 　 Haddadi   A .   Reasoning   about   cooperation   in   agent   systems :   a   pragmatic   theory   ［ Ph . D .   Thesis ］ .   University   of   Manchester   Institute   of   Science   and   Technology   ( UMIST ) ,   1995 
 1998 - 05 - 04 收到 原稿   
 1998 - 07 - 09 收到 修改稿 
