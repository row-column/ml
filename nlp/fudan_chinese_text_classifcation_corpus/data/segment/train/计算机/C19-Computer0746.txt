自动化 学报 
 AGTA   AUTOMATICA   SINICA 
 1999 年   第 25 卷   第 2 期   Vol.25   No.2   1999 
 
 
 
 TSP 问题 分层 求解 算法 的 复杂度 研究 1 ) 
 卢 　 欣 　 李衍达 
 关键词 　 TSP ， 局部 搜索算法 ， 动态 聚类 ， 计算 复杂度 . 
 COMPLEXITY   ANALYSIS   OF   THE   MULTI - LAYERED 
 CLUSTERING   ALGORITHMS   IN   TSP 
 LU   Xin 　 LI   Yanda 
 ( Department   of   Automation ,   Tsinghua   University ,   Beijing 　 100084 ) 
 Key   words 　 Traveling   salesman   problem ( TSP ) ,   local   search   algorithm ,   multi - layered   clustering ,   complexity   of   computation . 
 1 　 TSP 问题 及其 区域 划分 求解 算法 
 　 　 TSP ( traveling   salesman   problem ) 问题 已 被 证明 是 NP 问题 ， 用 现有 的 优化 算法 ， 如 分支 定界 、 动态 规划 等求 最优 解 ， 需要 问题 规模 的 指数 阶 时间 ［ 1 ， 2 ］ . 在 问题 规模 增大 时 ， 往往 由于 计算 时间 的 限制 而 丧失 可行性 ， 只能 用 一定 的 策略 对解 空间 进行 启发式 搜索 ， 期望 在 合理 的 时间 内 得到 一个 满意 解 . 比较 算法 时 主要 以解 的 质量 以及 运算 时间 为 标准 ［ 3 ］ . 
 　 　 在 TSP 问题 中 ， 问题 与 解 的 结构 完全 由 城市 之间 的 相对 距离 矩阵 Dij ( i , j = 1 , … , N ) 来 决定 . 因此 ， 利用 距离 矩阵 的 信息 ， 将 城市 聚类 为 一些 小 的 区域 ， 这样 就 可以 将 问题 分解 ， 以 提高 算法 的 效率 . 
 　 　 在 问题 规模 增大 时 ， 可以 通过 多层 区域 划分 ， 使 每 一个 层次 的 问题 规模 限制 在 一定 的 范围 内 ， 降低 问题 的 复杂度 . 此外 ， 采用 并行 技术 实现 TSP 问题 分层 优化 ， 其 复杂度 以及 导致 复杂度 的 原因 也 会 产生 根本性 的 变化 ， 从而 导致 算法 研究 指向 与 以往 不同 的 方向 . 
 2 　 动态 聚类 分层 求解 大规模 TSP 问题 及 性能 分析 
 　 　 算法 可 简述 如下 ： 
 　 　 1 )   若 城市 数 小于 预先 给定 的 数目 ， 则 直接 调用 局部 搜索算法 求解 . 
 　 　 2 )   将 城市 划分 为 P 个 区域 ， 求 P 个 区域 的 重心 ， 调用 局部 搜索算法 ， 求 一条 遍历 P 个 重心 的 最优 路径 . 
 　 　 3 )   对于 每 一个 区域 ， 以 这个 区域 在 区域 遍历 路径 上 的 相邻 点为 固定点 ， 递归 调用 动态 聚类 分层 算法 . 
 　 　 对于 N 点 规模 的 TSP 问题 ， 一般 估计 局部 搜索算法 的 计算 复杂度 不 低于 O ( N2 ) ， 具体 估计 还有 许多 争论 ［ 1 ， 2 ， 3 ］ . 
 　 　 一次 N 个 样本 的 C 均值 聚类 划分 ， 算法 复杂度 估计 为 O ( N ) ； 而 在 P 个 区域间 及 P 个 区域 内 分别 用 局部 搜索算法 寻优 ， 相当于 解 一个 P 规模 和 P 个 ( N ／ P ) 规模 的 TSP 问题 . 所以 ， 以 局部 搜索算法 的 计算 复杂度 下界 来 分析 ， 不难 证明 ， 进行 一次 划分 ， 将 N 城市 TSP 划分 为 P 个 区域 时 ， 假设 城市 均匀分布 ， 每 一个 区域 城市 的 数目 大致 相等 ， 则 其 计算 复杂度 估计 不 低于 
 
 ( 1 ) 
 当以 固定 的 区域 数目 P 进行 k 次 划分 时 ， 计算 复杂度 估计 不 低于 
 
 ( 2 ) 
 令 
 
 ( 3 ) 
 可以 求 出 最佳 划分 层数 k 
 
 ( 4 ) 
 当 logPN 为 整数 时 ， 可取 k = logPN - 1 ， 这时 
 
 ( 5 ) 
 
 ( 6 ) 
 当 N → ∞ 时 　 　 　 　 　 　 　 　 
 ( 7 ) 
 即 k 层 划分 后 整体 算法 的 计算 复杂度 估计 为 
 
 ( 8 ) 
 与 局部 搜索算法 相比 ， 其 计算 复杂度 降低 了 O ( N ／ lnN ) 数量级 . 问题 规模 越大 ， 算法 效率 改进 越 明显 . 
 3 　 仿真 实例 
 　 　 用 一台 Pentium   166   PC机 进行 仿真 实验 . 所需 计算 时间 在 不同 的 实现 环境 下 可能 会 有 较大 差别 ， 但 几种 算法 间 的 相对 比较 还是 有 意义 的 . 
 　 　 利用 两类 问题 对 动态 聚类 分层 优化 算法 进行 了 仿真 研究 . 一个 是 CHN144 实例 ， 另 一个 是 随机 生成 ， 均匀分布 的 TSP 问题 . 每次 分 10 个 区域 ， 每个 区域 最多 20 个 城市 ， 每个 层次 上 分别 执行 10 次 ( 动态 聚类 10 ) 和 100 次 ( 动态 聚类 100 ) 局部 搜索算法 . 同时 也 执行 了 局部 搜索算法 与 之 相 比较 ， 每次 只 搜索 一遍 . 
 　 　 表 1 是 对于 CHN144 问题 ， 每种 算法 执行 100 次 ， 取其 平均值 与 最优 的 结果 作 对比 . 
 表 1 　 CHN144 问题 解 的 质量 及 时间 比较 
 
 算法 最优 平均 
 时间 ( 秒 ) 结果 ( km ) 解质 ( % ) 时间 ( 秒 ) 结果 ( km ) 解质 ( % ) 
 动态 聚类 10040.11032   01394.946 . 90132   83592.5 
 动态 聚类 102.47332   41293.73 . 35133   33791.1 
 局部 搜索 40.93432   08994.752 . 02233   11391.7 
 
 
 　 　 从表 1 中 可以 看出 ， 三种 算法 所 获得 的 解 质量 基本 相当 ， 最 主要 的 差别 在于 运算 时间 . 由于 动态 聚类 100 是 在 每个 层次 上 执行 100 次 搜索 ， 而 局部 搜索算法 只 执行 了 一次 ， 所以 ， 动态 聚类 方法 的 速度 是 局部 搜索算法 的 大约 100 倍 ， 速度 提高 的 数量级 与 分析 的 基本 吻合 . 
 　 　 表 2 是 对 随机 生成 ， 均匀分布 样本 的 TSP 问题 仿真 结果 . 这里 只是 比较 动态 聚类 分层 划分 方法 在 各种 问题 规模 下 的 计算速度 ， 以 验证 对于 其 计算 复杂度 的 估计 . 下面 比较 中用 的 是 动态 聚类 10 的 方法 ， 其中 144 规模 的 问题 就是 表 1 中 的 CHN144 问题 ， 其它 每个 规模 用 十个 随机 生成 的 实例 ， 每个 实例 寻优 100 次 ， 随 问题 规模 的 增长 ， 寻优 速度 的 增长 与 前面 的 分析 相符合 . 
 表 2 　 不同 问题 规模 下 动态 聚类 方法 的 计算 时间 比较 
 
 问题 规模 最优 ( 秒 ) 平均 ( 秒 ) 最差 ( 秒 ) 
 1001.2641 . 5271.648 
 1442.4733 . 3513.901 
 1   00015.54916 . 31817.640 
 10   000230.752237 . 812252.589 
 
 
 4 　 算法 的 并行 实现 及其 复杂度 研究 
 　 　 这里 ， 给出 对于 大规模 TSP 问题 的 动态 聚类 分层 优化 算法 的 一种 主从 式 并行 实现 形式 ， 并 初步 分析 其 计算 复杂度 . 
 　 　 动态 聚类 分层 优化 算法 中 ， 高层 完成 了 区域 划分 后 ， 低层 中 每个 区域 的 路径 寻优 实际上 只 利用 了 相邻 区域 的 重心坐标 ， 而 这 一 信息 是 在 高层 区域 划分 过程 中 获得 的 . 所以 ， 低层 每个 区域 之间 的 寻 优是 相互 无关 的 ， 可以 很 容易 地 实现 并行处理 . 
 
 图 1 　 动态 聚类 分层 优化 算法 的 并行 实现 结构图 
 　 　 算法 的 并行 实现 是 一棵 P 叉 树 的 形式 . 根 节点 进行 N 个 城市 的 区域 划分 ， 并 将 P 个 区域 分给 第二层 的 P 个 节点 同步进行 各 区域 的 寻优 . 这 P 个 节点 进一步 进行 区域 划分 ， 并 将 任务 向下 分解 . 在 算法 完成 时 ， 遍历 这棵 P 叉 的 所有 叶 节点 ， 就 可以 建立 最终 的 结果 路径 . 按照 上文 的 方法 进行 并行算法 的 复杂度 分析 ， 可以 看出 ， 将 N 城市 问题 分为 k = logPN - 1 层时 ， 其 计算 复杂度 可以 表示 为 
 
 ( 9 ) 
 现在 计算 复杂度 主要 由 动态 聚类 算法 决定 ， 而 局部 搜索算法 的 影响 相对 变成 了 次要 问题 . 这 也 促使 研究 的 重点 转向 了 动态 聚类 算法 . 寻找 更 高效 的 聚类 算法 或 算法 的 并行 实现 ， 以 进一步 降低 算法 复杂度 ， 将 成为 下 一步 研究 的 方向 . 
 1 ) 国家自然科学基金 资助 项目 . 
 作者简介 ： 卢 　 欣 　 1996 年 毕业 于 清华大学 ， 获 学士学位 . 现为 清华大学 自动化系 博士生 . 研究 兴趣 为 生物 信息学 、 计算 智能 技术 、 组合 优化 及 算法 等 . 
 　 　 　 　 　 李衍达 　 清华大学 自动化系 教授 、 信息 学院 院长 、 中国科学院 院士 . 长期 从事 生物 信息学 、 信号处理 和 计算 智能 理论 及 应用 的 研究 . 
 作者 单位 ： 清华大学 自动化系 　 北京 　 100084 
 参考文献 
 1 　 Johnson   D   S ,   Papadimitriou   C   H ,   Yannakakis   M .   How   easy   is   local   search ? J .   Comput .   Sys . Sci.1988 ， 37 ( 1 ) ： 79 — 100 
 2 　 Papadimitriou   C   H ,   Yannakakis   M .   Optimization ,   Approximation   and   complexity   classes .   J .   Comput .   Sys .   Sci.1991 ， 43 ( 3 ) ： 425 — 440 
 3 　 Ausiello   G ,   Protasi   M .   Local   search ,   reducibility   and   approximability   of   NP - optimization   problem . Information   Processing   Letters , 1995 ， 54 ( 2 ) ： 73 — 79 
 收稿 日期 　 1997 - 04 - 09 
 收 修改稿 日期 　 1998 - 04 - 28 
