计算机 研究 与 发展 
 JOURNAL   OF   COMPUTER   RESEARCH   AND   DEVELOPMENT 
 1999 年   第 36 卷   第 9 期   Vol.36   No.9   1999 
 
 
 
 基于 文档 目录 树 的 WWW 文档 协同 写作 机制 
 杨文清 　 黄宜华 　 冯坚 　 卢坚 　 张福炎 
 摘 　 要 　 协同 写作 是 CSCW 的 一个 重要 研究 领域 . 文中 针对 WWW 文档 的 协同 写作 提出 了 一种 文档 目录 树 技术 ， 不仅 为 WWW 文档 扩充 了 表示 其 全局 结构 的 层次 式 目录 结构 ， 还 为 文档 的 分工协作 写作 提供 了 良好 的 数据组织 结构 . 文中 详细 讨论 了 基于 文档 目录 树结构 对 一个 WWW 文档 进行 协同 写作 时 的 协同 机制 ， 研究 了 多 用户界面 设计 、 协作 方式 、 以及 使用 “ 目录 路径 锁定 法 ” 实现 的 并发 控制 等 主要 技术 . 
 关键词 　 CSCW ， 协同 写作 ， WWW 文档 ， 文档 目录 树 
 中图法 分类号 　 TP393 
 COOPERATIVE   AUTHORING   OF   WWW   DOCUMENT   BASED   ON   DOCUMENT   CATALOG   TREE 
 YANG   Wen - Qing ,   HUANG   Yi - Hua ,   FENG   Jian ,   LU   Jian ,   and   ZHANG   Fu - Yan 
 ( Department   of   Computer   Science   and   Technology ,   Nanjing   University ,   Nanjing 　 210093 ) 
 ( State   Key   Laboratory   for   Novel   Software   Technology ,   Nanjing   University ,   Nanjing 　 210093 ) 
 Abstract 　 Cooperative   authoring   is   one   branch   of   CSCW .   In   the   present   paper ,   a   technique   of   document   catalog   tree   is   proposed   in   cooperative   authoring   of   WWW   document ,   a   hierarchical   directory   structure   is   extended   for   common   WWW   document   to   express   its   global   structure ,   and   a   perfect   infrastructure   is   provided   for   cooperative   authoring .   Also   discussed   are   the   details   of   the   cooperation   technique   in   team   authoring   based   on   document   catalog   tree ,   including   the   design   of   multi - user   interface ,   cooperation   mechanism ,   and   the   concurrent   control   method   of   catalog   path   locking . 
 Key   words 　 CSCW ,   cooperative   authoring ,   WWW   document ,   document   catalog   tree 
 1 　 引言 
 　 　 计算机 支持 的 协同工作 （ CSCW ） 自 80 年代 提出 以来 ， 已经 发展 成为 当今 最富 生机 和 前景 的 多 学科前沿 研究 领域 之一 . 从 应用 角度 出发 ， 文献 ［ 1 ］ 将 CSCW 分为 4 类 ， 其中 一类 为 协同 写作 与 讨论 系统 ， 用于 支持 协作 成员 之间 的 协商 和 讨论 ， 其 典型 应用 就是 文档 的 协同 写作 ， 它 以 最终 完成 一个 共同 的 文档 作为 协作 的 目的 . 　 　 
 　 　 超文本 技术 的 广泛 使用 是 协同 写作 系统 的 一个 重要 特征 ［ 1 ］ . 超文本 结构 为 协同 写作 提供 了 理想 的 数据组织 机制 ， 它 可以 提供 一种 基于 文档 结构 的 分工协作 和 分布 管理 方法 . 超 文本文档 比 常规 文档 更 适合 于 进行 协同工作 ， 因为 常规 文档 是 连续 的 线性 结构 ， 文档 在 组织 结构 上 没有 划分 手段 ， 因而 协同 写作 时 ， 难以 进行 分工 . 而超 文本文档 的 离散 化 节点 和 超链接 组织 有利于 多人 协作 时 文档 任务 的 划分 ， 多 成员 可 在 一个 分布 环境 下 分担 完成 文档 中 的 不同 部分 ， 通过 超链接 将 各 部分 链接 起来 ， 保持 超 文本文档 的 整体性 ［ 2 ］ ， 尤其 是 具有 良好 的 层次 组织 结构 的 大型 超 文本文档 更 有利于 实现 分工协作 和 存储管理 ［ 3 ］ . 
 　 　 WWW （ world   wide   web ） 网是 目前 世界 上规模 最大 、 应用 最 广泛 的 超 文本文档 系统 ， 但是 由于 WWW 文档 信息量 巨大 ， 结构复杂 ， 其 写作 及 内容 组织 还 存在 许多 的 困难 . 现有 的 一些 实用 WWW 写作 工具 ， 大多数 不能 有效 地 支持 一组 人员 协同 地 进行 写作 ， 只能 以 人工 合并 的 方式 完成 大规模 WWW 文档 的 写作 . 一些 著名 的 大型 工具 如 Microsoft   FrontPage 等 ， 可以 支持 基于 工作组 的 简单 的 文档 协作 写作 ， 由 一组 人员 各自 划分 一个 固定 部分 进行 写作 ， 各 部分 独立 完成 后 一起 发布 到 WWW 服务器 上 ， 但 写作 中 难以 方便 地 访问 或 链接 其他 人员 的 文档 ， 难于 在 各 部分 独自 完成 以后 一起 发布 到 WWW 服务器 上 . 这种 协同 写作 方式 还 较为简单 ， 限制 较大 ， 难以 满足 协作 程度 要求 较 高 的 应用 . 
 　 　 针对 WWW 文档 应用 的 这个 问题 ， 我们 提出 一种 文档 目录 树 技术 ， 扩充 了 WWW 文档 的 层次 式 结构 ， 并 提供 可视化 的 文档 目录 树以 支持 WWW 文档 的 协同 写作 . 本文 主要 讨论 文档 目录 树 技术 ， 以及 基于 这种 目录 树结构 进行 WWW 文档 协同 写作 时 的 协作 管理 技术 和 并发 控制策略 . 
 2 　 WWW 文档 目录 树及 文档 组织 管理 
 　 　 一个 好 的 超 文本文档 应当 具有 良好 的 连贯性 ［ 4 , 5 ］ ， 所谓 文档 连贯性 （ coherence ） ， 是 指 文档 本身 在 内部 组织 结构 和 外部 表现 结构 上 具有 整体 上 的 连续 一致性 ， 使 用户 阅读 时 易于 理解 和 掌握 文档 的 事实 和 语义 ［ 5 ］ . 而 HTML 语言 自身 恰恰 存在 一些 系统性 缺陷 ， 并 带来 文档 连贯性 问题 ［ 6 ］ . 常规 的 HTML 文档 仅 支持 文档 节点 间 的 交叉 链接 关系 ， 而 不能 支持 层次 链接 关系 ， 浏览 时 只能 基于 文档 间 无规则 的 交叉 链接 关系 进行 交叉 跳转 ， 虽然 WWW 浏览器 通常 会 提供 一些 浏览 导航 手段 ， 但 读者 始终 缺少 对 一定 范围 内 文档 信息 的 全局 结构 的 清晰 把握 ， 在 反复 的 跳转 后 ， 读者 常常 难以 把握 当前 的 位置 ， 容易 引起 迷航 ［ 6 ］ . 
 　 　 文档 目录 树 技术 通过 在 常规 的 WWW 文档 外围 增加 一个 文档 结构 包装 ， 扩充 了 WWW 文档 的 全局 层次结构 ， 在 文档 内部 组织 结构 上 提供 对 一个 WWW 文档 的 层次 式 目录 结构 组织 ， 并 通过 可视化 文档 目录 树为 用户 提供 基于 文档 全局 结构 的 图形化 浏览 ， 有效 地 提高 了 WWW 文档 的 连贯性 . 
 　 　 基于 文档 目录 树 技术 的 一个 WWW 文档 包括 两个 组成部分 ， 即 表示 文档 目录 层次结构 的 文档 目录 树 和 常规 的 HTML 文档文件 . 每个 WWW 文档 采用 一个 集中式 目录 树以 表示 其 全局 层次结构 ， 文档 目录 树上 的 分支 节点 称为 目录 节点 ， 而叶 节点 称为 正文 节点 . 目录 节点 主要 用来 描述 文档 的 层次结构 ， 正文 节点 则 表示 文档 的 内容 部分 . 无论是 目录 节点 还是 正文 节点 都 对应 于 一个 HTML 文档文件 ， 目录 节点 对应 的 文档文件 一般 由 系统 自动 生成 和 维护 ， 记录 该 节点 的 创建者 、 创建 时间 等 属性 ， 并 包含 下层 节点 的 目录 列表 ； 而 正文 节点 对应 的 文档文件 则 是 成员 所 写作 的 实际 内容 . 
 　 　 文档 目录 树 也 为 写作 时 的 分工协作 提供 了 良好 的 数据组织 机制 . 我们 采用 集中式 的 体系结构 ［ 7 ］ ， 将 整个 WWW 文档 集中 存放 在 一个 写作 服务器 上 并 进行 统一 管理 ， 这种 集中式 文档 目录 树 避免 了 分布式 情况 下 目录 树 链接 时 的 复杂 处理 . 写作 时 ， 各 成员 在 各自 的 本地 机上 使用 专用 的 写作 程序 连接 到 该 服务器 ， 对 文档 目录 树 进行 共享 访问 和 编辑 ， 并 申请 对 某个 节点 进行 写作 . 在 一般 状态 下 任一 成员 可以 在 整个 文档 目录 树 的 任意 位置 进行 编辑 操作 ， 当多 成员 同时 编辑 时 ， 需要 进行 并发 控制 以 保持 文档 目录 树 的 一致性 . 
 3 　 协作 管理 
 3.1 　 多 用户界面 设计 
 　 　 WYSIWIS ( What   you   see   is   what   I   see , 你 见 即 我 见 ) 是 CSCW 中 设计 多 用户界面 的 一个 著名 标准 ， WYSIWIS 分为 严格 的 和 松散 的 两种 层次 . 通过 对 实际 系统 的 研究 表明 ， 严格 的 WYSIWIS 在 很多 情况 下 是 不必要 的 ［ 8 ］ ， 尤其 对于 协同 写作 系统 ， 各个 成员 通常 都 有 自己 的 任务 划分 ， 因此 一般 采用 松散 的 WYSIWIS . 基于 这种 思想 ， 在 一个 成员 进行 写作 时 ， 并不需要 将 整个 文档 目录 树 下载 到 本地 机上 ， 我们 将 成员 所 实际 见到 的 目录 树 称为 屏幕 目录 树 ， 屏幕 目录 树是 整个 文档 目录 树 的 一个 子集 ， 仅 包含 运行 时刻 用户 操作 中 已 涉及 到 的 部分 ， 它 随着 目录 树 层次 的 展开 而 动态 扩充 . 
 　 　 写作 时 ， 成员 运行 本地 写作 程序 登录 到 服务器 ， 首先 从 服务器 取得 根 节点 和 第一层 节点 的 信息 ， 并 将 其 作为 屏幕 目录 树 显示 在 工作 窗口 中 ， 当 成员 在 屏幕 目录 树上 进行 目录 节点 展开 操作 时 ， 如果 本地 机 尚无 该 节点 下层 分支 信息 ， 则 请求 服务器 将 该 下层 分支 传送 过来 . 写作 过程 中 对 屏幕 目录 树 的 编辑 操作 请求 将 立即 提交 到 服务器 ， 由 服务器 确认 后 更新 到 文档 目录 树中 ； 而且 ， 服务器 还 需要 将 目录 树 的 更新 情况 实时 发送到 所有 其他 同时 也 在 工作 的 成员 的 客户端 ， 这些 客户端 根据 各自 屏幕 目录 树 的 当前 状态 作出 响应 ， 如果 本地 的 屏幕 目录 树 涉及 到 该 更新 部分 ， 则 要 根据 接收 到 的 信息 进行 刷新 ， 以 保证 屏幕 目录 树 的 有效性 . 
 　 　 当 成员 从 屏幕 目录 树上 选择 一个 正文 节点 打开 进行 编辑 时 ， 则 请求 服务器 将 该 正文 节点 对应 的 HTML 文档文件 传送 到 本地 机 ， 编辑 完成 后 也 立即 提交 到 服务器 并 保存 到 相应 的 HTML 文件 中 . 
 3.2 　 协同 写作 方式 
 　 　 在 实际 的 协同 写作 中 ， 对于 某个 确定 的 节点 而言 ， 同一 时刻 一般 仅 允许 有 一个 成员 对 它 进行 编辑 ， 这是 一种 异步 的 写作 方式 ， 我们 主要 对 这种 异步 协同 写作 进行 了 研究 ， 提出 两种 协同 写作 方式 — — 全 文档 目录 共享 方式 和 目录 分支 保护方式 . 
 　 　 协同 写作 的 理想 境地 是 不 给 用户 设置 任何 限制 ， 充分 满足用户 的 操作 愿望 . 全 文档 目录 共享 方式 正是 基于 这种 思想 而 设计 的 ， 它 允许 成员 在 全 文档 目录 树 范围 内 的 任意 位置 进行 节点 的 插入 、 删除 、 移动 、 修改 等 编辑 访问 ， 不 限制 各 成员 的 工作 范围 ， 集中式 的 文档 目录 树 易于 支持 并 实现 这种 工作 方式 . 其 优点 是 减少 了 为 实现 协同工作 给 用户 带来 的 种种 限制 ， 用户 对 文档 的 编辑 操作 自由度 较大 . 但 从 另 一个 角度 讲 ， 这种 方式 不利于 各 成员 间 相对 独立 地 工作 ， 各 成员 缺少 分工 工作 区以 有效 地 管理 和 保护 自己 的 编辑 结果 、 设置 访问 权限 来 阻止 其他 成员 在 不 希望 时 强行 修改 自己 的 内容 . 
 　 　 与 此 相对 应 ， 目录 分支 保护方式 允许 一个 成员 将 自己 所 编辑 管理 的 目录 分支 设置 为 保护 分支 ， 阻止 其他 成员 对 该 分支 的 修改 ， 但 不 阻止 其他 成员 的 浏览 访问 . 这种 方式 相当于 一种 分工 工作 方式 ， 可以 为 成员 提供 相对 独立 的 分工 工作 区 ， 减少 相互间 的 干扰 . 
 　 　 这 两种 协同 写作 方式 各有所长 ， 全 文档 目录 共享 方式 允许 多个 成员 方便 地 对 同一个 节点 进行 异步 写作 ， 而 目录 分支 保护方式 能 有效 保护 自己 写作 的 内容 不 被 别的 成员 任意 改变 . 在 实际 写作 过程 中 ， 各 成员 可以 根据 所 编辑 的 节点 在 协作性 上 的 特点 ， 通过 设置 / 取消 保护 在 两种 工作 方式 间 自由 切换 . 
 　 　 为了 记录 文档 目录 树上 的 协同 编辑 情况 ， 每个 节点 都 要 保存 一个 保护 状态 ， 同时 还要 记录 创建 成员 的 成员 名 ， 当 一个 成员 设定 自己 创建 的 目录 分支 为 保护 分支 时 ， 设置 相应 的 保护 状态 . 可以 通过 检查 当前 成员 名 与 待 保护 节点 中 记录 的 成员 名 是否 一致 来 决定 设置 保护 分支 的 申请 是否 合法 . 
 4 　 并发 控制 
 4.1 　 目录 路径 锁定 法 
 　 　 在 协同 编辑 方式 下 ， 多 成员 的 同时性 编辑 访问 会 引起 访问 冲突 ， 导致 文档 目录 数据 的 不一致性 ， 因此 必须 采用 一定 的 并发 控制策略 来 消除 这种 冲突 . 在 常规 文档 协同 编辑 中 ， 一般 常 采用 “ 块 锁 ” 或 “ 位锁 ” ［ 9 ］ 控制 ， 但 对于 超 文本文档 则 可以 基于 超文本 网 结构 、 尤其 是 规则 的 层次 式 超文本 结构 考虑 更为 合适 和 有效 的 控制策略 . 
 　 　 针对 文档 目录 树 的 特点 ， 我们 提出 了 一种 “ 目录 路径 锁定 法 ” 的 并发 控制策略 . 如图 1 所示 ， 当 一个 成员 M 申请 编辑 一个 正文 节点 A 成功 后 ， 首先 要 对 该 节点 进行 锁定 ， 这 可以 有效 地 阻止 其他 成员 对 节点 A 的 编辑 访问 申请 （ 但 不 阻止 其他 成员 的 只读 访问 ） . 但 这 并 没有 完全 解决问题 ， 因为 另 一 成员 N 可能 会 删除 节点 A 所在 的 上层 目录 节点 B ， 一旦 删除 了 B ， A 就 成为 一个 无效 节点 ， 这时 成员 M 再 编辑 写入 节点 A 就 会 出现 数据 混乱 . 为此 ， 成员 M 申请 节点 A 成功 后 ， 必须 向 文档 的 根 节点 R 回溯 ， 锁定 根 节点 R 到 节点 A 之间 的 目录 路径 上 的 所有 目录 节点 ， 当 成员 N 需要 删除 或 修改 这一 路径 上 的 某个 目录 节点 时 ， 将 不能 申请 成功 . 对 节点 A 到 根 节点 R 间 目录 路径 的 锁定 并 不 影响 对 目录 路径 外 的 其它 任何 节点 的 编辑 访问 ， 如 节点 C ， D ， E 等 . 
 
 图   1 　 目录 路径 锁定 并发 控制 
 　 　 为了 有效 地 实现 这一 目录 路径 锁定 方法 ， 为 每个 节点 设置 一个 锁定 计数器 ， 当对 节点 A 编辑 访问 申请 成功 后 ， 对 节点 R 到 节点 A 之间 目录 路径 上 的 所有 节点 的 锁定 计数器 加 1 ， 当 释放 节点 A 时 ， 则 对 这些 锁定 计数器 减 1 . 当 任一 成员 需要 申请 任一 节点 进行 编辑 访问 时 ， 只要 判断 该 节点 的 锁定 计数器 是否 大于 0 . 
 4.2 　 基于 目录 路径 锁定 法 的 并发 写作 控制 
 　 　 根据 操作 对象 及 操作 的 特点 ， 我们 将 成员 的 写作 请求 分为 两类 ， 一类 为 节点 编辑 ， 是 对 节点 内容 进行 的 编辑 写作 ； 另一类 为 目录 树 编辑 ， 包括 节点 的 增加 、 删除 、 移动 等 操作 . 下面 分别 讨论 这 两种 编辑 操作 的 并发 控制 处理 . 
 4.2 . 1 　 节点 编辑 
 　 　 对于 节点 编辑 的 情况 ， 其 特点 是从 开始 操作 到 最后 完成 需要 经过 一段时间 ， 在 整个 操作 期间 ， 不 允许 其他 成员 对 该 节点 进行 编辑 ， 也 不 允许 其他 成员 编辑 该 节点 的 上层 节点 ， 以免 造成 数据 的 混乱 ， 因此 ， 在 编辑 前 需要 对 该 节点 以及 该 节点 到 根 节点 之间 的 所有 节点 进行 锁定 ， 并 在 编辑 完成 以后 再 加以 解锁 . 
 　 　 使用 目录 路径 锁定 法 申请 一个 节点 进行 编辑 时 ， 综合 考虑 有 成员 工作 在 目录 分支 保护方式 下 的 情况 ， 其 基本 处理 方法 是 ： 当 一个 成员 申请 一个 节点 时 ， 先 从 该 节点 向根 节点 回溯 检查 该 节点 是否 属于 一个 成员 的 保护 分支 ， 若 是 本地 成员 的 保护 分支 ， 则 申请 成功 ， 若 属于 一个 非 本地 成员 的 保护 分支 ， 则 申请 失败 ； 当 不 属于 任何 成员 的 保护 分支 时 ， 则 按照 如前所述 的 锁定 方法 ， 对 该 节点 与 根 节点 之间 的 所有 节点 加以 锁定 . 释放 时 ， 对于 本地 成员 保护 分支 中 的 节点 不 需作 任何 处理 ， 只 需 处理 目录 路径 锁定 法 锁定 的 节点 . 主要 申请 处理过程 描述 如下 ： 
 　 　 / *   Node :   要 申请 的 节点 　 * / 
 　 　 Request 　 Node ( Node ) 
 　 　 { 
 　 　 　 　 if   ( IsProtected ( Node ) ) 　 　 　 　   / *   检查 是否 属于 某个 成员 的 保护 分支 ？ * / 
 　 　 　 　 　 　 if   ( IsLocalProtected ( Node ) )   / *   是否 为 本地 成员 的 保护 分支 ？ * / 
 　 　 　 　 　 　 return ( SUCCESS ) ;   / *   申请 成功   * / 
 　 　 　 　 　 　 else   return ( FAIL ) ;   / *   申请 失败   * / 
 　 　 　 　 / *   无 任何 成员 锁定 ， 继续 按 目录 路径 锁定 法 处理   * / 
 　 　 　 　 if   ( IsLocked ( Node ) ) 　 　 　 　 　 　 　   / *   该 节点 已 被 锁定 ， 申请 失败 返回   * / 
 　 　 　 　 　 　 return ( FAIL ) ; 
 　 　 　 　 else { 
 　 　 　 　 　 　 LockPathNodes ( Node ) ; / *   申请 成功 ， 锁定 相应 路径 上 的 所有 节点   * / 
 　 　 　 　 　 　 return ( SUCCESS ) ; 
 　 　 　 　 } 
 　 　 } 
 　 　 在 对 节点 进行 锁定 操作 时 ， 为了 保证数据 的 一致性 和 完整性 ， 需要 使用 操作系统 或 编程语言 提供 的 同步 及 互斥 机制 ， 对 有关 共享 数据 和 操作 处理 设置 临界 区 或 并发 控制 锁 ， 以 实现 共享 数据 的 并发 访问 ， 防止 因 同时 访问 而 可能 产生 的 冲突 和 错误 ， 并 保证 某些 操作 处理 不 被 打断 地 连续 完成 . 例如 ， 在 图 1 中 ， 当 一个 成员 M 申请 编辑 节点 A 成功 后 ， 先 锁定 了 节点 A ， 接着 锁定 根 节点 R 到 节点 A 之间 的 所有 节点 ， 这一 操作过程 应该 连续 完成 ， 操作 时 将 不 允许 其他 成员 同时 也 对 这 一 分支 上 的 节点 进行 操作 ； 否则 ， 如果 锁定 节点 A 后 ， 在 锁定 节点 B 前 ， 有 另 一 成员 N 锁定 节点 B 并 获得 了 对 其 操作 的 权限 ， 将会 导致 进一步 操作 时 发生 错误 . 
 4.2 . 2 　 目录 树 编辑 
 　 　 与 节点 编辑 相比 ， 目录 树 编辑 是 一种 瞬间 操作 ， 因此 ， 目录 树 编辑 只要 在 操作前 检查 操作 对象 的 锁定 状态 ， 以 确认 该 操作 在 该 时刻 是 可以 正常 进行 的 即可 ， 而 不 需要 对 有关 节点 进行 加锁 . 
 　 　 当 一个 成员 申请 对 某个 节点 进行 删除 、 移动 等 操作 时 ， 需要 检查 该 节点 是否 属于 某个 成员 的 保护 分支 ， 如果 是 本地 成员 的 保护 分支 ， 则 申请 成功 ， 若 属于 其他 成员 的 保护 分支 ， 则 申请 失败 . 当 不 属于 任何 成员 的 保护 分支 时 ， 检查 该 节点 的 锁定 计数器 ， 如果 等于 0 ， 则 编辑 操作 可以 进行 ， 如果 大于 0 ， 表明 该 节点 已经 被 锁定 ， 申请 失败 . 
 　 　 节点 移动 、 删除 时 ， 从 开始 申请 到 整个 操作 完成 这一 全过程 也 应该 设计 成为 不可 中断 的 连续 操作 ， 防止 多 成员 并发 访问 可能 带来 的 数据 不一致性 . 
 5 　 应用 实例 
 　 　 我们 将 本文 的 研究成果 应用 于 WWW 文档 协同 写作 系统 WWWDOC 的 设计 与 开发 中 . 该 系统 面向 Internet 网 ， 以 Windows   NT 为 服务器 平台 ， Win95 或 Windows   NT 为 客户机 平台 ， 支持 若干个 成员 协作 完成 一个 WWW 文档 的 写作 . WWWDOC 系统 已经 在 一定 范围 内 进行 了 试用 ， 如 新华社 江苏 分社 等 ， 得到 了 用户 的 好评 . 
 　 　 WWWDOC 系统 的 体系结构 如图 2 所示 ， 它 是 一种 集中式 体系结构 ， 采用 基于 Internet 的 客户 / 服务器 结构 ， 客户 和 服务器之间 以 TCP / IP 协议 进行 连接 和 数据通信 . 写作 的 WWW 文档 由 文档 目录 树 和 常规 的 HTML 文档文件 两 部分 组成 ， 集中 存放 在 WWW 服务器 上 . 
 
 图   2 　 WWWDOC 协同 写作 系统 的 体系结构 
 　 　 系统 主要 包括 两 部分 ： 客户机 上 的 文档 写作 程序 和 服务器 上 的 协同 写作 服务程序 . 每个 客户机 上 各自 运行 相同 的 写作 程序 ， 负责 实时 地 从 服务器 取得 所 需 的 文档 目录 树结构 并 进行 显示 ， 用户 可以 对 该 目录 树 进行 交互 的 编辑 操作 ， 也 可以 从 目录 树上 每次 申请 一个 节点 在 本地 进行 写作 ， 并 在 写作 完成 后 将 节点 内容 提交 到 服务器 . 服务器端 的 协同 写作 服务程序 则 负责管理 和 存储 整个 文档 的 目录 树结构 和 所有 的 HTML 文档文件 ， 处理 客户机 写作 程序 的 请求 ， 传送 相应 的 文档 数据 ， 并 负责 多 成员 协同 写作 时 的 并发 控制 ， 以及 各 客户端 文档 目录 树 的 同步 更新 等 . 
 　 　 写作 完成 后 的 WWW 文档 经过 发行 转换 以后 ， 普通用户 就 可以 使用 通用 浏览器 连接 到 服务器进行 阅读 . 由于 扩充 的 文档 目录 树是 一种 私有 格式 数据 ， 不能 为 通用 浏览器 识别 ， 因此 系统 使用 Java   Applet 将 这种 扩充 的 层次结构 以 可视化 的 文档 目录 树 形式 显示 在 浏览器 中 ， 为 用户 提供 有效 的 图形化 浏览 导航 . 
 6 　 结束语 
 　 　 本文 对 WWW 文档 的 协同 写作 进行 了 研究 ， 使用 文档 目录 树 技术 有效 地 改进 了 现有 WWW 文档 在 超文本 内部 表示 结构 和 外部 用户 表现 结构 上 的 缺陷 ， 在 内部 表示 结构 上 对 WWW 文档 扩充 了 一种 层次 式 超文本 结构 ， 在 用户 表现 结构 上 使用 了 可视化 文档 目录 树 ； 这种 文档 目录 树结构 提供 了 良好 的 分工协作 和 并发 控制 基础 ， 可以 有效 地 支持 多 成员 的 协同 写作 ， 针对 此 结构 而 采用 的 “ 目录 路径 锁定 法 ” 有效 实现 了 对 多 成员 的 协同 写作 的 并发 控制 . 我们 已 将 该 技术 应用 于 WWW 文档 协同 写作 系统 WWWDOC 中 ， 取得 了 良好 的 效果 ， 实践 表明 ， 文档 目录 树及 以 其 为 基础 的 协同 写作 机制 为 WWW 文档 协同 写作 提供 了 方便 有效 的 支持 . 
 注 ： 本 课题 得到 国家 “ 八 六三 ” 计划 基金 ( 项目编号 863 - 306 - 02 - 01 - 3 ) 资助 . 
 作者简介 ： 杨文清 ， 男 ， 1974 年 6 月生 ， 博士 研究生 ， 主要 研究 方向 为 多媒体技术 . 
 黄宜华 ， 男 ， 1962 年 12 月生 ， 教授 ， 主要 研究 领域 为 超文本 / 超媒体 技术 和 中文信息处理 技术 . 
 冯坚 ， 男 ， 1962 年 9 月生 ， 副教授 ， 主要 研究 领域 为 图像处理 和 网络 技术 . 
 卢坚 ， 男 ， 1974 年 11 月生 ， 博士 研究生 ， 主要 研究 领域 为 多媒体技术 . 
 张福炎 ， 男 ， 1939 年 9 月生 ， 教授 ， 博士生 导师 ， 主要 研究 领域 为 多媒体技术 、 计算机 图形学 等 . 
 作者 单位 ； 南京大学 计算机科学 与 技术 系 　 南京 　 210093 
 南京大学 计算机软件 新 技术 国家 重点 实验室 　 南京 　 210093 
 参考文献 
 1 　 　 Rodden   T ,   Blair   G   S .   Distributed   system   support   for   computer   supported   cooperative   work .   Computer   Communications ,   1992 ,   15 ( 8 ) :   527 ～ 538 
 2 　 　 Khoshafian   S ,   Bucjiewicz   M .   Groupware , Workflow ,   and   Workgroup   Computing .   New   York :   John   Wiley   &   Sons ,   1995 
 3 　 　 Huang   Yihua ,   Zhang   Fuyan ,   Ji   Yuan ,   You   Xiaobai .   The   distribution ,   cooperation   and   hyperlinking   mechanism   for   a   hypermedia   document   system   based   on   CSCW .   In :   Proceedings   of   International   Workshop   on   CSCW   in   Design ,   Beijing ,   1996 .   531 ～ 539 
 4 　 　 Hannemann   J ,   Thuring   M .   What   matters   in   developing   interfaces   for   hyperdocument   presentation .   In :   Schuler   W ,   Hannemann   J ,   Streitz   N   eds .   Designing   User   Interfaces   for   Hypermedia .   Berlin :   Springer - Verlag ,   1994 
 5 　 　 Thuring   M ,   Hannemana   J ,   Jorg   M .   Hypermedia   and   cognition :   Designing   for   comprehension .   Communications   of   the   ACM ,   1995 ,   38 ( 8 ) :   57 ～ 73 
 6 　 　 Kahn   P .   Visual   cues   for   local   and   global   coherence   in   the   WWW .   Communications   of   the   ACM ,   1995 ,   38 ( 8 ) :   67 ～ 69 
 7 　 　 Bentley   R ,   Rodden   T ,   Sawyer   P ,   Sommerville   I .   Architectural   support   for   cooperative   multiuser   interface .   IEEE   Transactions   on   Computer ,   1994 ,   27 ( 5 ) :   37 ～ 45 
 8 　 　 Stefik   M ,   Bobrow   D   G ,   Foster   G   et   al .   WYSIWIS   revised :   Early   experiences   with   multiuser   interfaces .   ACM   Transactions   on   Office   Information   System ,   1987 ,   5 ( 2 ) :   147 ～ 167 
 9 　 　 Santos   A .   Cooperative   hypermedia   editing   with   CoMEdiA .   Journal   of   Computer   Science   &   Technology ,   1993 ,   8 ( 3 ) :   257 ～ 269   
 原稿 收到 日期 ： 1998 - 12 - 24 ； 修改稿 收到 日期 ： 1999 - 05 - 31 . 
