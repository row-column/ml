软件 学报 
 JOURNAL   OF   SOFTWARE 
 1999 年 　 第 10 卷 　 第 11 期 　 Vol.10 　 No.11 　 1999 
 
 
 
 一种 基于 Rough   Set 理论 的 属性 约简 及 规则 提取 方法 
 常犁云 　 王国 胤 　 吴渝 
 　 　 摘要 　 该文 针对 Rough   Set 理论 中 属性 约简 和 值 约简 这 两个 重要 问题 进行 了 研究 ， 提出 了 一种 借助于 可 辨识 矩阵 （ discernibility   matrix ） 和 数学 逻辑运算 得到 最佳 属性 约简 的 新 方法 . 同时 ， 借助 该 矩阵 还 可以 方便 地 构造 基于 Rough   Set 理论 的 多 变量 决策树 . 另外 , 对 目前 广泛 采用 的 一种 值 约简 策略 进行 了 改进 ， 最终 使 得到 的 规则 进一步 简化 . 
 　 　 关键词 　 Rough   Set 理论 ， 属性 约简 ， 值 约简 ， 多 变量 决策树 . 
 　 　 中图法 分类号 　 TP18 
 An   Approach   for   Attribute   Reduction   and   Rule   Generation   Based   on   Rough   Set   Theory 
 CHANG   Li - yun   WANG   Guo - yin   WU   Yu 
 ( Institute   of   Computer   Science   and   Technology   Chongqing   University   of   Posts   and   Telecommunications   Chongqing   400065 ) 
 　 　 Abstract 　   In   this   paper ,   the   authors   discuss   two   important   issues   in   rough   set   research   which   are   attribute   reduction   and   value   reduction .   A   new   attribute   reduction   approach   which   can   reach   the   best   attribute   reduction   is   presented   based   on   discernibility   matrix   and   logic   computation .   And   a   multivariate   decision   tree   can   be   got   with   this   method .   Some   improvements   for   a   widely   used   value   reduction   method   are   also   achieved   in   this   paper .   The   complexity   of   acquired   rule   knowledge   can   be   reduced   effectively   in   this   way . 
 　 　 Key   words 　 Rough   set   theory ,   attribute   reduction ,   value   reduction ,   multivariate   decision   tree . 
 　 　 Rough   Set 理论 是 由 波兰 科学家 Z . Pawlak 在 1982 年 提出 的 一种 处理 含糊 和 不精确性 问题 的 新型 数学 工具 ［ 1 ］ . 这一 理论 从 新 的 视角 出发 对 知识 进行 了 定义 ， 它 把 知识 看做 是 关于 论域 的 划分 ， 并 引入 代数学 中 的 等价关系 来 讨论 知识 . 经过 十余年 的 发展 ， 该 理论 已 渗透到 人工智能 的 各个 分支 ， 在 模式识别 、 机器 学习 等 方面 也 都 已有 成功 的 应用 . 
 　 　 在 Rough   Set 理论 中 ， 数据 约简 是 非常 重要 的 一个 研究课题 . 研究 人员 发现 ， 对 许多 大型 系统 ， 仅 有 部分 数据库 表 属性 必须 保留 ， 如果 能 将 冗余 属性 删除 ， 可 大大提高 系统 潜在 知识 的 清晰度 . 目前 , 国际 上 关于 属性 约简 已有 不少 方法 ， 本文 提出 的 属性 约简 是 基于 Rough   Set 理论 ， 利用 Skowron 提出 的 可 辨识 矩阵 ( discernibility   matrix ) 来 得到 属性 的 最佳 约简 . 
 　 　 在 对 数据库 进行 分析 时 ， 我们 经常 关心 蕴涵 在 数据 当中 的 潜在 知识 . 由于 数据库系统 一般 数据量 都 较大 ， 因此 很 有 必要 对 信息 表 （ 也 称 决策表 ， 是 指 将 真实世界 的 信息 以 条件 属性 与 决策 属性 构成 的 表 的 形式 给出 ） 进行 值 约简 . 目前 , 人们 已 在 理论 上 证明 了 求取 处理 对象 的 所有 值 约简 组合 是 一个 NP 完全 问题 ， 因此 很难 通过 枚举法 求 出 问题 的 最小值 约简 . 本文 提出 的 算法 将 文献 ［ 2 ］ 中 所述 的 值 约简 策略 进行 了 一定 程度 的 改进 ， 最终 能够 得到 进一步 优化 的 值 约简 组合 . 
 　 　 本文 分 两节 介绍 属性 约简 算法 及值 约简 算法 . 在 介绍 属性 约简 算法 时 , 我们 还 提出 了 一种 计算 简单 、 语意 明确 的 多 变量 决策树 构造方法 . 文章 最后 以 一个 经典 数据 集为例 ， 综合 运用 本文 所 提出 的 算法 ， 最终 得到 较 满意 的 规则 . 
 1 　 最佳 属性 约简 算法 
 　 　 在 数据库系统 中 ， 经常 存在 大量 的 冗余 属性 . 为 减少 冗余 量 ， 提高 数据库 中 蕴涵 知识 的 可 理解 程度 ， 人们 已 在 属性 约简 上作 了 许多 工作 ， 提出 了 一些 比较 有效 的 算法 . 例如 , 通过 去除 某 属性 后 判断 不可 区分 关系 是否 改变 来 决定 是否 应 删除 该 属性 ［ 3 ］ ， 但 该 算法 对于 求取 最佳 约简 是 不 完备 的 . 事实上 ， 所谓 最佳 属性 约简 应 指出 一个 标准 ， 即 约简 后 得到 的 属性 数 最少 , 或 最终 得到 的 规则 最简 , 或 全部 数据 约简 量 最大 ， 这因 需要 而定 . 本文 介绍 的 算法 可 根据 具体 需要 得到 在 该 要求 下 的 最佳 属性 约简 . 
 　 　 在 已知 关于 Rough   Set 研究成果 中 ， Skowron 提出 的 可 辨识 矩阵 为 我们 求取 最佳 属性 约简 提供 了 很 好 的 思路 . 该 方法 将 信息 表中 所有 有关 属性 区分 信息 都 浓缩 进 一个 矩阵 当中 ， 人们 已 发现 可 通过 该 矩阵 方便 地 得到 信息 表 的 属性 核 ［ 4 ］ （ 属性 核是 指 信息 表中 不可 删除 的 属性 ） . 本 算法 以 可 辨识 矩阵 为 基础 ， 重点 研究 矩阵 中除 属性 核 之外 的 其他 属性 组合 ， 同时 , 利用 一些 简单 的 数学 逻辑 协助 进行 运算 . 
 1.1 　 可 辨识 矩阵 
 　 　 可 辨识 矩阵 由 波兰 华沙 大学 数学家 Skowron 提出 ， 其 定义 为 : 令 S = ( U , A ) 是 一个 信息系统 ， U 为 论域 且 U = { x1 , x2 , ... , xn } ， A 是 条件 属性 集合 ， D 是 决策 属性 ， a ( x ) 是 记录 x 在 属性 a 上 的 值 ， 可 辨识 矩阵 可 表示 为 
 
 1.2 　 属性 约简 算法 描述 
 　 　 令 M 是 决策表 T 的 可 辨识 矩阵 ， A = { a1 , a2 , ... , an } , 是 T 中 所有 条件 属性 的 集合 . S 是 M 中 所有 属性 组合 的 集合 ， 且 S 中 不 包含 重复 项 . 令 S 中 包含 有 s 个 属性 组合 ， 每个 属性 组合 表示 为 Bi ， 其 公式化 描述 为 Bi ∈ S , Bj ∈ S , Bi ≠ Bj ( i , j = 1 , 2 , ... , s ) . 令 Card ( Bi ) = m ， 则 Bi 中 每个 条件 属性 表示 为 bi , k ∈ Bi ( k = 1 , 2 , ... , m ) . 
 　 　 由 可 辨识 矩阵 的 定义 我们 知道 ： 矩阵 中 属性 组合 数为 1 表明 ， 除该 属性 外 其余 条件 属性 无法 将 信息 表中 决策 不同 的 两条 记录 区分 出来 ， 即该 属性 必须 保留 ， 与 决策表 中核 属性 的 概念 一致 . 因此 ， 矩阵 中 所有 属性 组合 数为 1 的 属性 均 为 决策表 的 核 属性 （ 可能 为空 ） . 令 C0 是 M 中 的 核 属性 集 ， 则 有 C0A . 
 　 　 考虑 到 可 辨识 矩阵 包含 了 决策表 中 的 所有 属性 区分 信息 ， 因此 , 核 属性 外 的 其余 有用 属性 应 从属性 组合 数不为 1 的 矩阵 元素 中 分析 取得 . 假设 某 信息 表除 C0 外 剩余 两个 属性 组合 ， 分别 表示 为 a1a2 ... am , b1b2 ... bn ， 为 进行 数学 逻辑运算 ， 将 该 属性 组合 以 布尔值 表示 其中 是否 包含 某个 条件 属性 . 例如 , a1 = 0 表示 不 包含 条件 属性 a1 ， 而 a1 = 1 表示 包含 条件 属性 a1 . 根据 可 辨识 矩阵 可知 ， 如果 要 识别 所有 决策 不同 的 记录 ， 则 ai ( i = 1 , 2 , ... , m ) 与 bj ( j = 1 , 2 , ... n ) 之中 必然 至少 各需 保留 一条 属性 . 构造 表达式 P = ( a1 ∨ a2 ∨ ... ∨ am ) ∧ ( b1 ∨ b2 ∨ ... ∨ bn ) ， 由 以上 分析 得到 P = 1 . 将 P 转化 为 析取范式 形式 ， 且 令 P 中 任意 合取 式 项 的 值 均 等于 1 ， 则 该 合取 式 代表 的 属性 组合 连同 核 属性 即可 将 原 决策表 中 的 所有 决策 区分 出来 . 由于 析取范式 由 多个 合取 式 构成 ， 究竟 采用 哪组 属性 组合 应 根据 需要 而定 ， 该 属性 组合 与 核 属性 一起 构成 在 指定 要求 下 的 最佳 属性 约简 . 如 信息 表除 C0 外 还 剩余 N 个 属性 组合 ， 其 处理 方法 可 依此类推 . 
 　 　 令 Redu 是 决策表 T 属性 约简 后 得到 的 属性 集合 ， 本 约简 算法 的 描述 见 算法 1 . 
 　 　 算法 1 . 
 第 1 步 .   将 核 属性 列入 属性 约简 后 得到 的 属性 集合 ， 即 Redu = C0 ； 
 　 　 第 2 步 .   在 可 辨识 矩阵 中 找出 所有 不 包含 核 属性 的 属性 组合 S ， 即 
 
 　 　 第 3 步 .   将 属性 组合 S 表示 为 合取范式 的 形式 ， 即 P = ∧ { ∨ bi , k : ( i = 1 , 2 , ... , s ; k = 1 , 2 , ... , m ) } ； 
 　 　 第 4 步 .   将 P 转化 为 析取范式 形式 ； 
 　 　 第 5 步 .   根据 需要 选择 满意 的 属性 组合 . 如需 属性 数 最少 ， 可 直接 选择 合取 式 中 属性 数 最少 的 组合 ； 如需 规则 最简 或 数据 约简 量 最大 ， 则 需先 进行 属性 值 约简 . 
 1.3 　 算法 举例 
 　 　 现举 一 气象 状况 实例 作为 信息系统 ， 如表 1 所示 . 
 表 1 　 一个 信息系统 
 
 UConditionAttribute ( C ) Decision   Attribute ( D ) 
 Outlook   ( a1 ) Temperature   ( a2 ) Humidity   ( a3 ) Windy   ( a4 ) Class 
 1SunnyHotHighFalseN 
 2SunnyHotHighTrueN 
 3OvercastHotHighFalseP 
 4RainMildHighFalseP 
 5RainCoolNormalFalseP 
 6RainCoolNormalTrueN 
 7OvercastCoolNormalTrueP 
 8SunnyMildHighFalseN 
 9SunnyCoolNormalFalseP 
 10RainMildNormalFalseP 
 11SunnyMildNormalTrueP 
 12OvercastMildHighTrueP 
 13OvercastHotNormalFalseP 
 14RainMildHighTrueN 
 
 　 　 根据 可 辨识 矩阵 的 定义 我们 知道 , 矩阵 的 对角线 元素 均 为 0 ， 且 沿 左 对角线 对称 . 因此 ， 我们 只 需 计算 上 对角 阵 元素 即可 , 如图 1 所示 . 
 
 图 1   可 辨识 矩阵 
 　 　 从 上面 的 可 辨识 矩阵 可知 ， 核 属性 为 { a1 ， a4 } . 经 观察 ， 不 包含 核 属性 的 属性 组合 只有 a2a3 . 构造 表达式 P = a2 ∨ a3 ， 由于 P 仅 有 一种 属性 组合 ， 故 无需 进行 形式 变换 . 这样 , 原 决策表 条件 属性 可 约简 为 { a1 ， a2 ， a4 } 或 { a1 ， a3 ， a4 } . 若 我们 希望 得到 最简 规则 ， 将 以上 两种 属性 组合 进行 值 约简 后 可知 ： 以 { a1 ， a2 ， a4 } 为 条件 属性 得到 的 规则 有 ： 
 　 　 ①   （ a1 ， sunny ） 且 （ a2 ， hot ） ， 则 Class = N ； 
 　 　 ②   （ a1 ， overcast ） ， 则 Class = P ； 
 　 　 ③   （ a1 ， rain ） 且 （ a4 ， false ） ， 则 Class = P ； 
 　 　 ④   （ a1 ， rain ） 且 （ a4 ， true ） ， 则 Class = N ； 
 　 　 ⑤   （ a1 ， sunny ） 且 （ a2 ， mild ） 且 （ a4 ， false ） ， 则 Class = N ； 
 　 　 ⑥   （ a2 ， cool ） 且 （ a4 ， false ） ， 则 Class = P ； 
 　 　 ⑦   （ a2 ， mild ） 且 （ a4 ， true ） ， 则 Class = P , 
 共 7 条 规则 . 而 以 { a1 ， a3 ， a4 } 为 条件 属性 得到 的 规则 有 ： 
 　 　 ①   （ a1 ， sunny ） 且 （ a3 ， high ） ， 则 Class = N ； 
 　 　 ②   （ a1 ， overcast ） ， 则 Class = P ； 
 　 　 ③   （ a1 ， rain ） 且 （ a4 ， false ） ， 则 Class = P ； 
 　 　 ④   （ a1 ， rain ） 且 （ a4 ， true ） ， 则 Class = N ； 
 　 　 ⑤   （ a1 ， sunny ） 且 （ a3 ， normal ） ， 则 Class = P , 
 共 5 条 规则 . 原 决策表 的 最佳 属性 约简 应为 { a1 ， a3 ， a4 } . 
 1.4 　 多 变量 决策树 构造 算法 
 　 　 目前 ， 大多数 决策树 被 限制 在 每个 结点 上 只 检验 单个 属性 ， 这样 的 决策树 被 称为 单 变量 决策树 ， 如 ID3 系统 . 由于 这一 限制 ， 很多 复杂 概念 的 表达 变得 非常 困难 . 为了 克服 这一 限制 , 人们 开始 利用 各种 方法 构造 多 变量 决策树 . 苗夺谦 、 王珏 等 人 以 Rough   Set 理论 为 基础 ， 提出 了 相对 泛化 的 概念 ， 并 将 它 用于 构造 多 变量 检验 ［ 5 ］ ， 但 该 方法 相对 泛化 的 语义 不易 理解 . 
 　 　 可 辨识 矩阵 中 元素 项可 分为 3 类 . 第 1 类 是 核 属性 ； 第 2 类 是 除 核 属性 之外 还 包含 其他 条件 属性 的 属性 组合 ； 第 3 类 是 不 包含 核 属性 的 属性 组合 . 其中 第 3 类 表明 了 仅 由 核 属性 无法 区分 其 决策 的 记录 ， 可 将 这些 记录 作为 论域 的 一个 划分 . 在 决策表 保证 一致性 （ 无 冲突 记录 ） 的 前提 下 ， 除去 无法 由核 属性 区分 其 决策 的 记录 之外 , 其余 记录 可 根据 决策 的 不同 区分 为 N 类 （ 假设 决策表 有 N 个 不同 决策 ） . 这样 ， 整个 决策表 被 划分 为 N + 1 个 不同 部分 . 该 多 变量 决策树 构造 算法 见 算法 2 . 
 　 　 算法 2 .   
 　 　 第 1 步 .   利用 可 辨识 矩阵 计算 核 属性 集 C0 ， 若 C0 = ， 转第 2 步 ； 否则 , 转第 3 步 ; 
 　 　 第 2 步 .   用 ID3 方法 选择 一个 最佳 属性 作为 该 结点 的 检验 ; 
 　 　 第 3 步 .   根据 决策 数 N ， 将 决策表 中 的 记录 划分 为 N + 1 类 . 首先 根据 可 辨识 矩阵 ， 统计 出 不 包含 核 属性 的 所有 属性 组合 所在 的 行 与 列 ， 该行 与 列 对应 于 决策表 中 的 记录 号 ， 由 这些 记录 可 构成 论域 上 的 一个 划分 . 其余 记录 根据 决策 再 将 论域 划分 为 N 类 ， 每 一类 中 的 记录 都 具有 相同 的 决策 . 
 　 　 仍 以表 1 为 例来 构造 多 变量 决策树 . 参照 如图 1 所示 的 可 辨识 矩阵 ， 可以 得到 C0 = { a1 ， a4 } . 不 包含 a1 ， a4 的 属性 组合 为 a2a3 ， 且 它们 所在 的 行 与 列 分别 为 ［ 1 ， 9 ］ , ［ 2 ， 11 ］ ， ［ 8 ， 9 ］ . 因此 ， 记录 { 1 ， 2 ， 8 ， 9 ， 11 } 构成 论域 U 上 的 一个 划分 . 除 上述 5 条 记录 外 , 原 信息 表 剩余 记录 中 决策 为 N 的 记录 有 { 6 ， 14 } ， 决策 为 P 的 记录 有 { 3 ， 4 ， 5 ， 7 ， 10 ， 12 ， 13 } ， 它们 构成 了 论域 U 上 的 另外 两个 划分 . 由此 可 得到 本 信息系统 的 多 变量 决策树 ， 如图 2 所示 . 
 
 图 2   多 变量 决策树 
 2 　 值 约简 算法 
 　 　 Rough   Set 理论 还 具有 从 信息 表中 抽取 规则 知识 的 能力 ， 事实上 ， 在 Rough   Set 理论 中 抽取 规则 的 过程 正是 对 信息 表 进行 值 约简 的 过程 . 
 　 　 分析 最小值 约简 ， 我们 可 从值 核 入手 . 所谓 值核 是 指 , 在 信息 表 的 每条 记录 中 寻找 对 得出 决策 影响 最大 的 属性 值 . 关于 信息 表 求值 核 ， 目前 已有 一些 资料 对 其 进行 了 介绍 ［ 2 ］ . 本文 介绍 的 值 约简 算法 即 建立 在 文献 ［ 2 ］ 的 基础 之上 ， 针对 文献 ［ 2 ］ 中未 提出 当 删除 某 属性 后 ， 在 剩余 属性 所 构成 的 信息 表中 不 存在 重复记录 时该 属性 对应 值 的 处理 方法 提出 了 部分 改进 ， 使 最终 的 值 约简 结果 得到 进一步 简化 . 
 　 　 改进 后 的 值 约简 算法 见 算法 3 . 
 　 　 算法 3 .   
 　 　 第 1 步 .   对 信息 表中 条件 属性 进行 逐列 考察 . 除去 该列 后 ， 若 产生 冲突 记录 , 则 保留 冲突 记录 的 原该 属性 值 ； 若 未 产生 冲突 但 含有 重复记录 ， 则 将 重复记录 的 该 属性 值标 为 “ * ” ； 对 其他 记录 , 将 该 属性 值标 为 “ ？ ” . 
 　 　 第 2 步 .   删除 可能 产生 的 重复记录 , 并 考察 每条 含有 标记 “ ？ ” 的 记录 . 若仅 由 未 被 标记 的 属性 值 即可 判断 出 决策 ， 则 将 “ ？ ” 标记 为 “ * ” ， 否则 , 修改 为原 属性 值 ； 若 某条 记录 的 所有 条件 属性 均 被 标记 ， 则 将 标有 “ ？ ” 的 属性 项 修改 为原 属性 值 . 
 　 　 第 3 步 .   删除 所有 条件 属性 均 被 标为 “ * ” 的 记录 及 可能 产生 的 重复记录 . 
 　 　 第 4 步 .   如果 两条 记录 仅 有 一个 条件 属性 值 不同 ， 且 其中 一条 记录 该 属性 被 标为 “ * ” ， 那么 , 对 该 记录 如果 可 由 未 被 标记 的 属性 值 判断 出 决策 ， 则 删除 另外 一条 记录 ； 否则 , 删除 本 记录 . 
 　 　 经过 约简 之后 得到 的 新 信息 表 ， 所有 属性 值均 为 该表 的 值 核 ， 所有 记录 均 为 该 信息 表 的 规则 . 
 　 　 现举 一例 ， 如表 2 所示 . 其中 a ， b ， c ， d 为 条件 属性 ， e 为 决策 属性 . 先由 第 1.2 节 所述 方法 对表 2 进行 属性 约简 ， 得到 表 3 . 再 对表 3 进行 值 约简 . 
 　 　 　 　 　   　 　 表 2 
 
 Uabcde 
 110011 
 210001 
 300000 
 411010 
 511022 
 621022 
 722222 
 
 表 3 
 
 Uabde 
 11011 
 21001 
 30000 
 41110 
 51122 
 62122 
 72222 
 
 　 　 对于 表 3 ， 以 记录 1 为例 ， 若 删除 属性 a ， 由于 其余 属性 构成 的 信息 表中 不 包含 重复记录 ， 因此 该 记录 中 属性 a 的 值 标为 “ ? ” ； 若 删除 属性 b ， 由于 a = 1 , d = 1 与 记录 4 的 决策 冲突 ， 因此 属性 b 保持 原值 ； 若 删除 属性 d ， 由于 a = 1 , b = 0 与 记录 2 的 决策 相同 ， 因此 属性 d 的 值 标为 “ * ” . 逐条 记录 进行 处理 ， 得到 表 4 . 
 　 　 表 2 中 记录 1 与 记录 3 属性 b 的 值 相同 ， 但 决策 不同 ， 应将表 4 中 记录 1 的 属性 a 改为 原值 ； 记录 5 仅 由 属性 d 的 值 即可 判断 出 决策 ， 应 将 该 记录 中 属性 b 标为 “ * ” . 逐条 记录 进行 处理 ， 得到 表 5 . 
 　 　 表 5 中 记录 6 与 记录 7 除 属性 a 外 其余 属性 值 都 对应 相等 ， 且 由表 2 可知 , 仅 由 属性 d 即可 判断 出 决策 ， 因此 删除 记录 7 . 表 6 为值 约简 之后 得到 的 信息 表 ， 该表中 的 记录 反映 出原 信息 表中 的 潜在 规则 ， 可 总结 为 ： 
 　 　 ①   ( a , 1 ) 且 ( b , 0 ) ， 则 有 ( e , 1 ) ； 
 　 　 ②   ( a , 0 ) ， 则 有 ( e , 0 ) ； 
 　 　 ③   ( b , 1 ) 且 ( d , 1 ) ， 则 有 ( e , 0 ) ； 
 　 　 ④   ( d , 2 ) ， 则 有 ( e , 2 ) . 
 表 4 
 
 Uabde 
 1 ? 0 * 1 
 21 ? * 1 
 30 ? ? 0 
 4 ? 110 
 5 * ? 22 
 6 * * ? 2 
 7 ? * ? 2 
 
 表 5 
 
 Uabde 
 110 * 1 
 210 * 1 
 30 * * 0 
 4 * 110 
 5 * * 22 
 6 * * 22 
 72 * 22 
 
 表 6 
 
 Uabde 
 110 * 1 
 20 * * 0 
 3 * 110 
 4 * * 22 
 
 3 　 实验 数据 验证 
 　 　 为 验证 本文 提出 的 约简 算法 ， 我们 采用 了 Fisher 教授 提出 的 著名 的 花朵 识别 数据 集 （ Iris   data   set ） 进行 测试 . 该 数据 集 共有 150 条 被 分为 3 类 决策 的 记录 ， 每条 记录 包含 4 个 条件 属性 ( petal - length ， petal - width ， septal - length ， septal - width ) 和 1 个 决策 属性 . 实验 从 所有 数据 集中 任选 120 条 记录 作为 学习 样本 ， 由于 所有 数据 均 为 连续 量值 ， 我们 利用 波兰 华沙 大学 与 挪威 科技 大学 联合开发 的 Rosetta 软件 中 的 Orthogoal   Scaler 方法 对 所有 属性数据 进行 了 离散 化 . 离散 化后 ， 采用 本文 介绍 的 方法 对 其 进行 属性 约简 ， 将 特征 属性 数 约简 至 3 个 （ petal - length ， petal - width ， septal - width ） ， 值 约简 后 获得 10 条 规则 ， 平均 每条 规则 包含 两个 特征 属性 ， 总 的 数据 约简 量 约 为 96.7% （ 评价 方法 参见 文献 ［ 6 ］ ） . 为 证明 其 效果 ， 我们 用 Rosetta 软件 作 了 对比 测试 ， 结果表明 , 采用 针对 本 问题 效果 最佳 的 Dynamic   Reducts 方法 进行 属性 约简 后 ， 也 得到 3 条 属性 ， 结果 与 本 实验 一致 ； 但 经过 值 约简 后 ， Rosetta 软件 得到 13 条 规则 ， 且 每条 规则 均 由 3 条 属性 组成 ， 总 数据 约简 量 为 93.5% . 
 　 　 为 验证 本 算法 所得 规则 的 有效性 ， 实验 对 剩余 30 个 样本 进行 了 测试 . 结果 有 两个 样本 产生 了 误识 ， 识别 正确率 为 93.3% ； 而 利用 Rosetta 软件 得到 的 规则 对 同样 30 个 样本 进行 测试 时 ， 产生 3 个 误识 样本 ， 识别 正确率 为 90% .   
 4 　 总   结 
 　 　 本文 利用 Skowron 提出 的 可 辨识 矩阵 ， 提出 了 一种 计算 信息 表 最佳 属性 约简 的 新 方法 . 该 方法 将 数学 逻辑运算 运用 于 可 辨识 矩阵 中核 属性 以外 的 其他 属性 组合 ， 能够 得到 给定 要求 下 的 最佳 属性 约简 . 在 基于 可 辨识 矩阵 中 包含 有 信息 表中 所有 属性 区分 信息 ， 本文 还 提出 一种 构造 多 变量 决策树 的 直观 方法 . 最后 ， 本文 提出 了 一种 改进 的 值 约简 方法 ， 该 方法 可 有效 地 简化 最终 得到 的 规则 知识 . 
 基金项目 ： 文 研究 得到 国家自然科学基金 和 重庆市 应用 基础 研究 基金 资助 . 
 作者简介 ： 常犁云 ， 1974 年生 ， 硕士 ， 主要 研究 领域 为 Rough   Set 理论 及 应用 . 
 　 　 　 　 　 王国 胤 ， 1970 年生 ， 博士 ， 副教授 ， 主要 研究 领域 为 神经网络 ， Rough   Set 理论 ， 知识 获取 ， 集成 智能 系统 . 
 　 　 　 　 　 吴渝 ， 女 ， 1970 年生 ， 博士 ， 讲师 ， 主要 研究 领域 为小波 分析 ， Rough   Set 理论 . 
 作者 单位 ： 重庆 邮电学院 计算机科学 与 技术 研究所   重庆   400065 
 　 　 　 　 　 E - mail :   netpopeye @ 263 . net 
 本文 通讯联系 人 : 常犁云 ， 广州   510620 , 广州市 电信局 科技处 
 参考文献 
 　 1 　 Pawlak   Z .   Rough   set .   International   Journal   of   Computer   and   Information   Sciences ,   1982 , 11 ( 5 ) : 341 ～ 356 
 　 2 　 王珏 ， 苗夺谦 ， 周育健 . 关于 Rough   Set 理论 与 应用 的 综述 . 模式识别 与 人工智能 , 1996 , 9 ( 4 ) : 337 ～ 344 
 ( Wang   Jue ,   Miao   Duo - qian ,   Zhou   Yu - jian .   Rough   set   theory   and   its   application :   a   survey .   Pattern   Recognition   and   Aritificial   Intelligence ,   1996 , 9 ( 4 ) : 337 ～ 344 ) 
 　 3 　 Pawlak   Z ,   Grzymala - Busse   J ,   Slowinski   R   et   al .   Rough   sets .   Communications   of   the   ACM ,   1995 , 38 ( 11 ) : 89 ～ 95 
 　 4 　 Hu   X , Cercone   N .   Learning   in   relational   databases :   a   rough   set   approach .   International   Journal   of   Computational   Intelligence ,   1995 , 11 ( 2 ) : 323 ～ 338 
 　 5 　 苗夺谦 ， 王珏 . 基于 粗糙集 的 多 变量 决策树 构造方法 . 软件 学报 , 1997 , 8 ( 6 ) : 425 ～ 431 
 ( Miao   Duo - qian ,   Wang   Jue .   Rough   sets   based   approach   for   multivariate   decision   tree   construction .   Journal   of   Software ,   1997 , 8 ( 6 ) : 425 ～ 431 ) 
 　 6 　 王珏 ， 王任 ， 苗夺谦 等 . 基于 Rough   Set 理论 的 “ 数据 浓缩 ” . 计算机 学报 , 1998 , 21 ( 5 ) : 393 ～ 400 
 ( Wang   Jue ,   Wang   Ren ,   Miao   Duoqian   et   al .   Data   enriching   based   on   rough   set   theory .   Chinese   Journal   of   Computers ,   1998 , 21 ( 5 ) : 393 ～ 400 ) 
 本文 1998 - 10 - 20 收到 原稿 , 1999 - 01 - 22 收到 修改稿 
