微型机 与 应用 
 MICROCOMPUTER   &   ITS   APPLICATIONS 
 2000 　 Vol.19 　 No.4 　 P.49 - 51 
 
 
 
 工程化 计算机 远程 测控 系统 的 研究 
 蓝悦 
 摘   要 ：   从 工程化 的 角度 对 计算机 远程 测控 系统 进行 了 研究 ， 讨论 了 系统 硬件 及 软件 的 研制 ， 阐述 了 提高 系统 性能 的 关键技术 。 
 关键词 ：   工程化 设计   测控 系统   定时 自动 巡测 
 　 　 近年来 ， 计算机 远程 测控 系统 在 电力系统 、 水文 观测 、 交通运输 等 多种 领域 都 得到 了 广泛应用 。 随着 用户 对系统 需求 的 不断深入 、 细化 ， 系统 也 变得 越来越 庞大 ， 复杂度 不断 提高 。 在 旧 的 设计 方法 下 ， 系统 不 具备 良好 的 移植性 、 复用 性 ， 开发人员 面对 相似 的 需求 仍然 需要 重新 设计 ， 浪费 人力 、 物力 ， 而且 很多 系统 设计 的 个体化 特征 使 它们 随着 时间 的 推移 越来越 难于 维护 。 经过 30 多年 的 软件工程 实践 ， 国际 上 已经 形成 了 多种 较 成熟 的 软件工程 方法 ， 为 系统 开发 提供 了 一整套 提高效率 的 途径 ， 并 使 所 开发 的 系统 具有 良好 的 结构 及 较 高 的 可靠性 、 复用 性 和 可维护性 。 由此可见 ， 工程化 设计 是 解决问题 的 关键 。 
 1 　 系统 开发 模型 
 　 　 现在 比较 成熟 的 开发 模型 有 瀑布 模型 、 演化 模型 、 螺旋 模型 、 增量 模型 、 喷泉 模型 等 。 
 　 　 一般来说 在 系统 开发 前 ， 通过 需求 分析 和 调研 ， 我们 未必 能 了解 用户 的 全部 需求 。 通常 用户 会 给出 待 开发 系统 的 核心 需求 ， 当 核心 需求 实现 后 ， 再 通过 有效 反馈 逐步完善 。 另外 ， 当 设计 开发 时间 不 充足 又 必须 短期内 占领市场 时 ， 通常 我们 会 采用 增量 开发 ， 即 首先 完整 地 开发 系统 的 1 个 核心 子集 ， 继之 周期性地 进行 增量 开发 ， 不断 精化 产品 ， 以 完成 系统 最终 设计 和 实现 。 因此 ， 根据 模型 特征 和 该 系统 的 实际 情况 ， 我们 对 增量 模型 和 螺旋 模型 进行 结合 、 裁剪 ， 提出 了 符合 工程 实际 要求 的 开发 结构 ， 如图 1 所示 。 沿着 螺线 旋转 ， 在 笛卡尔 坐标 的 4 个 象限 上 分别 表达 了 系统 不同 开发 时期 的 活动 ， 从 螺旋 中心 自 内向 外 每 旋转 1 圈 便 根据 用户 的 信息反馈 开发 出 1 个 更为 完善 的 系统 版本 。 
 
 图 1 　 系统 开发 模型 
 2 　 系统 需求 分析 
 2 ． 1 　 系统 的 用户 分类 
 　 　 系统 在 应用 中 会 面向 不同 的 用户群 ， 合理 地 进行 分类 ， 了解 用户群 结构 以及 各类 用户 掌握 专业知识 的 程度 和 操作 习惯 才能 使 开发 出 的 系统 适合 需求 。 按照 不同 的 应用 对象 ， 对 用户 可以 进行 如下 分类 ： 
 　 　 （ 1 ） 按 使用 计算机系统 频度 ， 可 分为 偶然 型 用户 、 间歇 型 用户 、 经常 型 用户 ； 
 　 　 （ 2 ） 按 使用 计算机 的 熟练程度 ， 可 分为 生疏 型 用户 、 熟练 型 用户 和 专家型 用户 ； 
 　 　 （ 3 ） 按 使用 计算机系统 的 目的 ， 可 分为 事务处理 用户 、 应用 开发 用户 和 系统 开发 用户 等 。 
 　 　 进行 分析 调研 时应 注意 收集 经常 型 用户意见 ， 照顾 到 偶然 型 、 间歇 型 用户 ； 人机交互 中 对于 生疏 型 用户 注意 提供 在线 帮助 、 软件 向导 ， 而 对于 熟练 型 、 专家型 用户 则 应 设计 快捷 操作 方式 以 满足 其 需要 ； 对于 某些 专业 力量 强 的 用户 可能 对系统 进行 二次开发 ， 因此 在 系统 初期 设计 时 就 应 尽量 降低 该 部分 与 核心 系统 的 耦合度 ， 并 提供 必要 的 接口 。 
 2 ． 2 　 系统 功能 需求 
 　 　 （ 1 ） 遥控 功能 ： 要求 系统 具有 远程 控制 测控 对象 ， 设置 设备 各项 参数 、 定值 ， 实时 显示 设备 状态 的 功能 。 
 　 　 （ 2 ） 遥测 功能 ： 要求 系统 具有 实时 远程 获取 设备 各项 数据 及 设置 相关 参数 的 功能 。 
 　 　 （ 3 ） 定时 自动 巡测 ： 系统 按 用户 设定 时间 自动 获取 部分 或 所有 测控 对象 的 有效 数据 存入 数据库 作为 历史数据 备档 。 
 　 　 （ 4 ） 报表 处理 ： 将 实时 或 历史 数据处理 加工 成 相应 报表 提交 系统管理 人员 或 上报 上级 管理机构 。 
 　 　 功能 需求 的 数据流 图如图 2 所示 。 
 
 图 2 　 系统 需求 数据流 图 
 2 ． 3 　 系统 性能需求 
 　 　 目前 该 系统 一般 应用 于 比较 重要 的 部门 ， 因此 在 系统 设计 中 必需 保证 其 可靠性 和 安全性 ， 在 条件 允许 的 范围 内 尽量 提高 系统 效率 。 
 　 　 （ 1 ） 可靠性 （ reliability ） ： 指 程序 按 要求 的 精度 完成 预期 功能 的 程度 ， 包括 一致性 、 容错性 、 准确性 、 简单 性 。 
 　 　 （ 2 ） 安全性 （ security ） ： 指 未经许可 的 人员 接近 系统 和 对 数据 加以控制 的 程度 ， 包括 存取控制 、 存取 审查 。 
 　 　 （ 3 ） 效率 （ efficiency ） ： 指 程序 完成 预期 功能 所 需 的 资源 及 代码 数量 ， 包括 执行 效率 、 存储 效率 。 
 3 　 系统 总体 结构 
 　 　 远程 测控 系统 中 与 测控 对象 直接 相 联系 的 终端设备 往往 与 中心站 距离 较 远 。 因此 整个 系统 呈 以 中心站 为 核心 ， 以 各个 站点 （ 终端 ） 为 从机 的 主从 问答式 结构 。 中心站 与 点 站 之间 可以 通过 无线 信道 （ 载波 或 微波 ） 连接 ， 也 可以 通过 电话线 形成 有线 网络 。 系统结构 如图 3 所示 。 由于 测控 现场 环境 往往 会 对 设备 造成 一定 影响 ， 如瞬变 干扰 、 共模 干扰 等 ， 加入 太多 的 数据处理 会 降低 系统可靠性 ； 另外 ， 终端 功能 越 繁杂 ， 远程 维护 就 越 困难 。 因此 ， 我们 在 设计 中 减轻 了 终端设备 的 负担 ， 它 只 负责 将 现场 信息 转化 为 有效 数据 短期 存储 ， 并 在 一定 时刻 应答 中心站 将 数据 传回 。 这样 在 一定 程度 上 提高 了 系统 的 复用 性 和 可维护性 ， 保证 了 数据 的 准确 。 系统软件 结构 如图 4 所示 。 
 
 图 3 　 系统 体系结构 
 
 图 4 　 系统软件 结构 
 4 　 系统 实现 
 4 ． 1 　 系统 硬件 实现 
 　 　 中心站 系统 网络 采用 标准 以太网 结构 。 中心 服务器 负责管理 、 存储 数据 。 为了 提高 系统可靠性 一般 选用 小型 局域网 专用 服务器 ， 如 HP   NetServer   LH   Pro 系列 ， 存储器 为 双硬盘 镜像 。 定时 巡 测数据 量 较大 时 系统 会长 时间 处于 忙 状态 ， 信道 和 网络 也 被 占用 ， 因而 会 影响 用户 对点 站 的 实时 测控 操作 。 鉴于 此 ， 定时 巡测 专门 由 采集 工作站 （ 前置 机 ） 来 完成 ， 而 实时 测控 和 数据处理 则 由 管理 工作站 （ 后台 机 ） 完成 。 中心站 作为 整个 系统 的 核心 其 稳定性 尤为重要 ， 为此 我们 采用 了 双机 热 备份 。 平时 2 套 设备 中任 1 套 设置 为 主机 拥有 信道 控制权 ， 主机 损坏 时 ， 系统 将 发出 警报 ， 自动 启动 备机 维持 正常 工作 。 中心站 系统结构 如图 5 所示 。 
 
 图 5 　 中心 体系结构 
 　 　 终端设备 由 电台 、 调制解调器 、 传感器 、 CPU 、 存储器 等 组成 。 现场 很多 干扰 都 会 影响 到 信号 的 传输 ， 为此 我们 采用 系统 交流电源 使用 双层 隔离 ， 提高 信号 噪声 比 ， 输入 信号 光电 隔离 等 方法 。 在 器件 选取 上 ， 采用 HCMOS 工艺 的 16 位 高性能 单片机 和 大规模 逻辑 阵列 ispLSI2064 ， 降低 了 系统 功能 ， 提高 了 其 可靠性 和 抗干扰能力 ， 主板 采用 4 层 印刷 板 ， 有效 地 消除 了 电源 和 地 之间 的 干扰 和 噪声 。 
 4 ． 2 　 系统软件 实现 
 　 　 （ 1 ） 开发工具 的 选取 
 　 　 在 目前 较 先进 的 软件 开发工具 中 Visual   Basic 、 Delphi 和 Visual   C ＋ ＋ 是 比较 常用 的 ， 它们 都 是 基于 Windows 的 面向对象 的 可视化 开发工具 。 相对 来讲 VC ＋ ＋ 的 代码运行 效率 较 高 ， 并 可以 使用 ODBC 和 DAO 作为 访问 各类 数据库 的 引擎 。 它 提供 的 组件 库 （ COMPONENT   GALLERY ） 、 可 定制 的 Appwizards 以及 MFC 扩展 有助于 代码 重用 。 因此 我们 采用 VC ＋ ＋ 作为 实时 测控 和 定时 巡测 子系统 的 开发 平台 ， 以 最大 限度 地 满足 系统 效率 。 
 　 　 数据库 我们 采用 了 SQL   Server ， 它 具有 彻底 的 C ／ S 体系结构 ， 支持 完整性 约束 ， 具有 比较 好 的 安全性 保护 和 故障 恢复 机制 ， 并且 实现 开放 互连 支持 网络 环境 下 的 分布式 数据管理 。 这样 就 充分保证 了 系统 数据管理 的 安全 。 
 　 　 另外 值得一提的是 Excel 在 报表 处理 方面 具有 强大 的 功能 。 它 是 第一个 将 表处理 软件 与 图形界面 编程 工具 结合 在 一起 的 开发工具 ， 具有 样式 丰富 的 表格 和 图表 。 VBA 被 嵌入 在 Excel 表处理 软件 中 ， 它 所 提供 的 用户 以 编程 方式 对 数据分析 功能 的 访问 是 所有 表处理 软件 中 最高级 的 。 我们 利用 Excel 在短期内 就 完成 了 报表 子系统 的 开发 。 但 在 使用 过程 中 也 发现 ， 当 数据处理 量 较大 时 ， 子系统 速度 明显降低 ， 在 一定 程度 上 影响 了 系统 的 性能 。 可以 看出 Excel 在 数据分析 处理 方面 还 存在 着 不足 。 这 可以 通过 二种 方式 来 解决 ， 一是 将 复杂 的 数据处理 移 到 上级 系统 ， 这种 方法 可以 显著 提高 运行 速度 ， 但 同时 增加 了 数据管理 的 负担 和 子系统 间 的 耦和度 ； 另 一种 方法 是 使 报表 系统 在 系统 空闲 时 将 复杂 数据 预处理 ， 并 存入 历史 数据库 中 ， 这样 就 由 系统 间 耦合 变为 系统 内 耦合 ， 降低 了 耦合度 ， 较 好地解决 了 系统结构 和 性能 之间 的 矛盾 。 实践 中 我们 采用 了 后 一种 方法 。 
 　 　 （ 2 ） 系统 工作 原理 
 　 　 根据 硬件 结构 ， 软件系统 可以 分为 后台 机上 的 后台 子系统 和 前置 机上 的 前置 子系统 二 部分 ， 系统 间 采用 网络通信 。 后台 子系统 通过 人机交互 模块 接收 操作员 指令 ， 经 编码 模块 处理 成 指令码 ， 经由 网络 发送到 前置 系统 。 前置 系统 识别 并 接收 指令 后 将 其 加入 指令 发送 队列 ， 通信 模块 将 待 发送 的 指令码 分析 处理 成 符合 无线 （ 有线 ） 传输 协议 的 帧 （ 简称 下行 报文 ） ， 通过 信道 发送给 终端 。 终端 应答 后 ， 前置 系统 校验 并 将 应答 帧 （ 间 称 上行 报文 ） 通过 网络 发送给 后台 系统 。 后台 系统 识别 后 送 消息 给 通信 解码 模块 ， 经 解码 后 显示 并 存入 服务器 的 相关 数据库 中 。 定时 巡测 模块 放在 前置 系统 中 ， 工作 原理 基本 同 上 ， 只不过 编码 、 发送 、 接收 解码 都 由 前置 系统 自行 完成 。 时钟 到达 预定 时间 后 向 系统 总控 模块 发送 消息 ， 定时 巡测 被 启动 ， 解码 后 的 数据 被 存入 相关 数据库 中 。 报表 子系统 嵌入 在 后台 系统 中 ， 根据 用户 需求 可以 是 数据 集成 、 表示 集成 或 控制 集成 。 管理员 可以 通过 它 将 数据分析 处理 后 显示 或 通过 有线 信道 上报 。 由于 篇幅 限制 ， 具体 模块 流程 不再 赘述 。 
 　 　 （ 3 ） 关键技术 
 　 　 最初 设计 时 ， 考虑 到 编码 解码 模块 的 复用 ， 往往 会 把 定时 巡测 模块 也 放到 后台 系统 中 。 但 通过 性能 测试 发现 ， 巡 测量 较大 时 分析 处理 工作 会 占用 大量 CPU 和 网络 时间 ， 导致 其它 功能 如 报表 处理 、 人机交互 以及 动态 画面 显示 速度 明显降低 ， 给 用户 带来 不便 。 相对而言 ， 前置 子系统 的 负载 较 轻 ， 并且 对 用户 操作 影响 较 小 。 因此 将 该 模块 放到 前置 子系统 中 更 有利于 系统 负载平衡 ， 提高效率 。 另外 ， 定时 巡测 可能 会长 时间 占用 信道 ， 这 给 后台 用户 进行 实时 测控 操作 带来 不便 。 因此 ， 实现 中 可以 设置 二个 消息 等待 队列 — — 巡测 消息 队列 和 操作 消息 队列 ， 后者 具有 较 高 优先级 ， 这样 就 能 合理 分配 独占 资源 ， 及时 响应 用户 操作 。 
 　 　 后台 系统 的 档案 数据 区 负责 显示 、 更新 数据库 中 的 设备 参数 ， 而 实时 测控 中 终端 相应 参数 的 设置 和 巡测 也 必将 影响 到 档案 数据 区 的 数据 显示 。 对此 ， 使用 VC ＋ ＋ 中 的 记录集 类 （ RecordSet   Class ） 能够 很 好 地 将 它们 统一 起来 。 如图 6 所示 （ 图中 箭头 所指 为 数据流 向 ） ， 应用程序 初始化 （ 包括 运行 期 窗体 刷新 的 二次 初始化 ） 将 数据库 中 参数 通过 记录集 类 读入 档案 数据 区 ， 用户 更新 档案 数据 区 的 参数 时 通过 记录集 类 同时 更新 库中 相应 字 段 ； 主 文档 类 数据 区 被 作为 主要 的 数据 缓冲区 ， 它 可以 临时 存储 部分 档案 数据 和 测控 参数 ； 测控 操作 部分 的 数据 交互 类 可以 从 记录 集中 直接 取得 、 修改 数据 或 从主 文档 数据 区中 取得 有关 的 索引 及 参数 。 
 
 图 6 　 数据 存取 机制 
 5 　 结束语 
 　 　 本文 基于 工程化 的 思想 对 计算机 远程 测控 系统 进行 了 研究 ， 作为 上述 研究 的 载体 和 综合 运用 对象 ， 我们 开发 的 远程 测控 系统 被 多家 用户 选用 。 经 长期 实地 运行 ， 系统 运行 稳定 、 实时性 好 、 数据 精度高 、 抗干扰性 强 ， 对 同类 系统 的 设计 和 实现 具有 一定 的 借鉴 作用 。 
 蓝悦 （ 北京大学 应用 文理学院  100084 ） 
 参考文献 
 １ ， Ｒ ｏ ｂ ｅ ｒ ｔ   Ｌ   Ｇ ． Ｂ ｕ ｓ ｉ ｎ ｅ ｓ ｓ   Ａ ｐ ｐ ｌ ｉ ｃ ａ ｔ ｉ ｏ ｎ ｓ ： Ｗ ｈ ａ ｔ   ｓ ｈ ｏ ｕ ｌ ｄ   ａ   ｐ ｒ ｏ ｇ ｒ ａ ｍ ｍ ｉ ｎ ｇ   ｌ ａ ｎ ｇ ｕ ａ ｇ ｅ   ｏ ｆ ｆ ｅ ｒ ？ ． Ｓ ｏ ｆ ｔ ｗ ａ ｒ ｅ   ｐ ｒ ａ ｃ ｔ ｉ ｔ ｉ ｏ ｎ ｅ ｒ ， １ ９ ９ ６ 
 ２ ， 王常力 ． 集散 型 控制系统 的 设计 与 应用 ． 北京 ： 清华大学出版社 ， １ ９ ９ ８ 
 ３ ， 王立福 ． 软件工程 — — 技术 、 方法 与 环境 ． 北京 ： 北京大学出版社 ， １ ９ ９ ７ 
  收稿 日期 ： １ ９ ９ ９ － １ ０ － ２ ０ 
