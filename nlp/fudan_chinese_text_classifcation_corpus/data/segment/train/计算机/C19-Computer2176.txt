计算机 应用 研究 
 APPLICATION   RESEARCH   OF   COMPUTERS 
 2000 　 Vol.17 　 No.2 　 P.12 - 13 , 30 
 
 
 
 一种 进行 Web 网络管理 的 技术 策略 
 谢双 一 　 薛进 
 摘   要   首先 对 传统 的 网络管理 模式 和 基于 Web 的 网络管理 模式 进行 比较 , 同时 介绍 了 利用 CORBA 规范 和 Java 技术 来 进行 Web 网络管理 的 策略 。 最后 ， 详细 介绍 了 如何 使用 这种 策略 来 实现 Web 网络管理 的 具体方法 。 
 关键词   网络管理   CORBA   Java   事务管理 
 1   引言 
 　 　 随着 计算机网络 的 不断 发展 ， 如何 对 日益 复杂 的 网络 进行 管理 变得 越来越 重要 。 传统 的 网络管理 模式 不能 适应 目前 现代化 的 网络 对 其 安全性 、 易 操作性 、 可视性 的 管理 需要 ， 取而代之 的 是 利用 Web 技术 进行 网络管理 。 
 2   传统 的 网络管理 模式 和 基于 Web 的 网络管理 模式 
 　 　 传统 的 网络管理 模式 是 由 管理者 Manager ， 代理 Agent 和 网络管理 协议 三个 要素 组成 。 它 是 一种 高度集中 的 管理模式 。 由于 网络 管理者 不仅 要 与 代理 Agent 进行 大量 的 数据 信息 交换 ， 还要 进行 获取 相关 信息 的 处理 ， 进行 复杂 界面 的 绘制 和 显示 。 这样 很 容易 造成 网管 主机 系统 的 超负荷 工作 ， 降低 了 网络管理 的 运行 效率 。 这 就 需要 将 界面 复杂 的 图形 工作 从 网管 主机 的 操作 中 独立 出来 。 
 　 　 Web 技术 将 网络管理 的 图形 绘制 分离出来 ， 不仅 允许 管理人员 有 同样 的 能力 去 监测 他们 的 网络 ， 同时 ， 它 还 避免 了 传统 网络管理 模式 的 超负荷 ， 低效率 的 缺点 。   基于 Web 的 网络管理 模式 ， 融合 了 Web 功能 和 网管 技术 ， 允许 网管 工作人员 通过 任何 一种 Web 浏览器 在 网络 上 的 任何 节点 进行 方便 、 迅速 地 访问 和 管理 计算机 。 与 传统 的 网络管理 模式 不同 ， 它 不再 是 Manager - Agent 的 两层 管理 结构 ， 而是 基于 客户 层 Web 浏览器 + 应用层 + 各种 设备 资源 的 三层 体系结构 。 其中 ， 应用层 又 可以 包括 Web 服务器 和 应用服务器 。 
 　 　 基于 Web 方式 的 网络管理 三层 体系结构 如图 1 所示 ， 这种 三层 体系结构 有 很多 优点 ： 
 
 图 1   基于 Web 方式 的 网络管理 三层 体系结构 
 　 　 ● 管理者 的 操作 和 设备 的 远程 配置 不 受 地理位置 的 影响 和 限制 ， 更 适合 进行 分布式 网络管理 ； 
 　 　 ● 管理者 只 需要 通过 浏览器 与 服务器 交换 信息 ， 而 不 与 具有 各种类型 和 协议 的 资源 层 直接 联系 ， 使得 服务器 从 绘制 大量 的 实时 界面 的 沉重负担 中 解脱 出来 ， 着重于 后台 资源 的 采集 和 对 故障 的 处理 中 。 同时 ， 也 避免 了 资源 层 信息 的 不 统一 而 造成 的 对 整体 性能 的 影响 ； 
 　 　 ● 便于 给 用户 提供 信息 。 用户 仅仅 通过 Web 浏览器 就 可以 访问 在 网络 上 的 各种 网络设备 和 对象 信息 。 
 　 　 目前 ， 基于 Web 的 网络管理 途径 和 方法 主要 有 以下 几种 ： 
 　 　 ● WBEM ( Web _ Based   Enterprise   Management ) 
 　 　 ● WEB / JMAPI ( Java   Management   API ) 或 JMX ( Java   Management   Extensions ) 　 
 　 　 ● WEB / CORBA ( Common   Object   Requst   Broker   Architecture ) 
 　 　 下面 将 着重 说明 利用 CORBA 规范 和 Java 技术 来 进行 Web 网络管理 的 方法 和 策略 。 
 3   CORBA 规范 和 Java 技术 
 3.1   CORBA 规范 
 　 　 为了 使得 基于 对象 的 软件 在 分布 异构 环境 下 有 良好 的 可 重用 性 、 可移植性 和 互操作性 ， OMG ( Object   Management   Group ) 组织 制定 了 OMA ( Object   Management   Architecture ) 参考模型 。 其 核心 是 ORB 对象 请求 代理 。 同时 ， 针对 于 ORB ， OMG 组织 推出 了 CORBA 规范 。 在 CORBA 规范 中 ， 主要 有 以下内容 。 
 　 　 ● 接口定义 语言 IDL ： 在 CORBA 规范 下 ， 由 IDL 来 标识 对象 的 接口 操作 及其 数据 参数 。 它 是 一种 描述性 的 框架 语言 ， 并且 是 独立 于 具体 编程语言 而 存在 的 。 
 　 　 ● ORB ： ORB 提供 了 客户 - - 对象 实现 间 实现 透明 通信 的 方法 ， 也就是说 通过 ORB ， 对象 可以 透明 地 发出请求 和 接收 响应 。 
 　 　 ● 对象 适配器 OA ： OA 位于 ORB 和 对象 实现 之间 ， 负责 服务 对象 的 注册 、 对象 引用 的 创建 和 解释 、 对象 实现 服务 进程 的 激活 和 去 活 。 
 　 　 ● IDL 桩 和 动态 调用 接口 DII ： IDL 桩 和 DII 都 是 客户端 发送 客户 请求 与 ORB 通信 时 客户 方 的 代理 。 所 不同 的 是 IDL 桩 是 为 客户 提供 的 静态 调用 方式 ， 这种 方式 是 基于 客户 预先 知道 服务器 所 提供 的 服务 对象 的 接口 信息 ， 客户端 仅 需要 把 用户 的 请求 进行 编码 ， 通过 ORB 发送到 对象 的 实现 端 上 。 
 　 　 ● IDL 构架 和 动态 构架 接口 DSI ： 类似 于 IDL 桩 和 动态 调用 接口 DII ， IDL 构架 和 动态 构架 接口 DSI 是 服务器 方 用来 处理 从 客户端 通过 ORB 和 OA 传送 来 的 请求 ， 定位 该 请求 的 实现 方法 。 其中 ， IDL 构架 是 静态 实现 方式 。 
 3.2   Java 技术 
 　 　 Java 是 一个 应用 程序开发 平台 ， 它 以 其 跨平台 、 连通性 、 面向对象 的 特性 ， 给 构建 基于 Web 的 网络管理 带来 了 更 大 的 发展 空间 。 同 CORBA 一样 ， Java 提供 了 面向对象 的 编程语言 和 运行 环境 ， 这为 CORBA 和 Java 的 结合 实现 了 可行性 。 在 Java 平台 中 ， 利用 分布 在 网络 中 的 各类 对象 共同完成 相应 的 任务 ， 使得 程序 从 服务器 上 动态 的 下载 到 客户端 的 浏览器 中 ， 完成 HTML 页面 上 的 网络通信 和 数据 参数 的 动态变化 。 这种 Web 交互 应用 开发 的 形式 ， 丰富 了 客户端 的 功能 。 另外 ， Java 程序 预 编译 后 的 字节 码 具有 对 网络 的 强大 安全 机制 ， Java 虚拟机 对 所有 Java 类 ， 包括 从 网络 上 下载 的 类 都 要 进行 安全 检测 。 
 3.3   CORBA 和 Java 结合 的 优点 
 　 　 Java 和 CORBA 的 结合 使 Java 客户端 能够 访问 由 IDL 定义 的 范围 非常 广泛 的 CORBA 对象 服务 ， 这 使得 Java   Applet 能够 和 用 不同 语言 编写 的 其它 对象 进行 跨 地址 空间 和 网络 的 通信 。 
 　 　 另外 ， Java - CORBA 的 框架 总 的 服务 方是 规则 的 CORBA 对象 ， 它们 与 客户端 的 连接 可以 是 永久 的 。 这种 在 事务 方面 的 优势 ， 可以 保证 客户端 的 实时 故障 报警 响应 和 动态 性能 报告 显示 。 
 　 　 总之 ， Java 技术 和 CORBA 分布式 技术 来 实现 网络管理 ， 既 可以 体现 出 CORBA 分布式 管理 的 思想 和 CORBA 所 提出 的 各种 服务 ， 特别 是 事务 服务 的 功能 ， 又 可以 充分利用 Java 在 Web 技术 中 的 优势 。 
 4   利用 CORBA 技术 的 Web 网络管理 
 　 　 利用 CORBA 技术 的 Web 网络管理 结构 如图 2 所示 。 客户端 首先 在 浏览器 中 下载 并 运行 Java   Applet 程序 ， 当 这个 Applet 程序 使用 了 分布式 的 Java 类 ， 则 通过 Stub 代码 先 向 本地 的 Java   ORB 发出请求 ， 客户 方 的   ORB 利用 IIOP 协议 与 服务器 方 的 ORB 在 TCP / IP 中 进行 通信 ， 这时 ， 服务器 方 的 ORB 根据 请求 的 内容 调用 相关 的 Skeleton 代码 ， 激活 Server 端 相关 目标 对象 ， 由该 对象 实现 完成 对 Server 端 请求 的 操作 。 
 
 图 2   利用 CORBA 技术 的 Web 网络管理 结构图 
 　 　 在 实现 操作 的 过程 中 ， Server 可以 利用 ODBC 或 JDBC 来 访问 数据库 ， 获得 原始数据 信息 ； 通过 CORBA 和 基于 各种 网管 协议 Agent 的 连接 接口 ， 从 网元 中 获取 设备 信息 。 在 得到 数据 的 基础 上 ， 对系统 状态 进行 分析 ， 并 将 结果 按 原路 返回 给 Client 。 在 整个 过程 中 ， Java   ORB 起着 桥梁 的 作用 ， 负责 远程 对象 请求 的 生成 、 编码 、 传输 等 工作 。 而 CORBA 网关 起着 收集 网络设备 信息 ， 转换 协议 操作 和 数据格式 的 作用 。 
 　 　 利用 CORBA 技术 实现 各种 网络管理 协议 ， 如 SNMP ， CMIP 的 思想 已 日趋 成熟 。 对 整个 网络管理 的 结构 来说 ， 它 实现 了 从 MIB 库 ─ 〉 IDL ─ 〉 Java 的 映射 。 这样 ， CORBA 和 底层 网管 之间 的 透明 传输 保证 了 应用 开发者 不 需要 知道 被 管远 地 设备 的 具体 协议 。 这方面 ， 包括 Bell 实验室 、 朗讯 等 许多 大 公司 都 有 专门 的 研究 和 比较 成熟 的 产品 。 
 　 　 CORBA 事件 服务 提供 一个 异步 事件 通知 的 框架 。 事件 服务 由 生产者 、 消费者 和 事件 通道 组成 。 其中 生产者 主要 用来 产生 数据 ， 而 消费者 负责 处理 数据 。 事件 通信 有 两种 通知 模型 ： Push 方式 和 Pull 方式 。 在 Push 方式 中 ， 生产者 主动 提供 事件 给 消费者 ， 调用 消费者 的 Push 操作 ； 在 Pull 方式 中 ， 由 消费者 向 生产者 获取 事件 ， 调用 生产者 的 Pull 操作 。 CORBA 事件 服务 的 这种 机制 ， 给予 网络管理 很大 的 便利 。 这样 ， 基于 CORBA 的 Java   Applet 客户 就 避免 了 传统 网络管理 模式 中 需要 定期 的 轮询 应用服务器 和 设备 间 的 事件 管理器 的 弊病 。 当 Agent 推送 一个 Trap 信息 或者 其它 的 事件 信息 到 服务器 中 的 事件 管理器 中 去 。 这时 ， 管理员 就 可以 通过 Web 浏览器 中 Java   Applet   查看 设备 发生 事件 的 详细信息 。 
 　 　 CORBA 的 远程 调用 机制 的 性能 取决于 两个 因素 ： 远程 客户 调用 的 数目 和 传送数据 的 大小 。   CORBA 提高 事件 的 处理 能力 的 一种 方法 是 事件 的 成组 分发 。 这种 方法 将 那些 频繁 的 事件 类 打包 到 一个 序列 中 ， 对 这个 序列 整体 调用 事件 的 发送 操作 。 在 现代 网络管理 中 ， 对于 大 数据量 的 获取 和 多个 MIB 库 变量 的 实时 回送 是 有助 的 。 
 5   实践 操作 
 　 　 Sun 公司 提供 了 一个 100% 纯 Java 对象 请求 代理 系统 Java   IDL 。 它 是 一种 IDL 编译器 ， 将 Java 对象 映射 到 CORBA 对象 代理 中 ， 以 达到 Java 对象 与 其它 语言 而且 是 运行 在 其它 对象 上 的 对象 间 的 操作 。 总的来说 ， Java   IDL 包含 以下 构件 。 
 　 　 ● IDL 到 Java 的 映射 ： 将 IDL 的 每个 元素 映射 成 Java 语言 定义 的 元素 ； 
 　 　 ● IDL 到 Java 的 编译器 ： 从 IDL 的 接口定义 中 产生 桩 和 构架 ； 
 　 　 ● 支持 IIOP 的 Java   ORB ： 用于 支持 桩 和 构架 之间 的 通信 和 OA 对象 适配器 的 透明 创建 ； 
 　 　 ● 临时 对象 名字 服务器 :   提供 从 层次化 对象 空间 获取 远程 对象 引用 的 能力 。 
 　 　 同时 ， Java   API 还 提供 org . omg . CORBA 和 org . omg .   CosNaming 包 用于 Java 对象 和 CORBA 的 联编 。 
 　 　 利用 分布式 对象 技术开发 Java   Applet 的 方法 ： 
 　 　 ( 1 ) 用 IDL 源码 描述 出 基于 CORBA 的 分布式应用 的 接口 规范 ， 这些 接口 包括 所 构建 系统 中 对象 的 属性 和 对外 接口 ； ( 2 ) 利用 Sun 公司 的 IDL 编译器 将 IDL 源码 转换成 Java 源码 ， 生成 5 个 文件 ， 其中 包括 接口定义 文件 ， Skeleton 文件 和 Stub 文件 ， 同时 还有 两个 辅助 文件 Helper 和 Holder 。 这些 文件 主要 用来 实现 客户端 和 服务器进行 通信 的 接口 和 代理 ； ( 3 ) 编写 服务器程序 ， 创建对象 实现 实例 和 侦听 客户 请求 ； ( 4 ) 编写 客户 方 Applet ， 用于 初始化 对象 引用 ， 发送 对象 请求 。 
 　 　 在 运行 程序 前 ， 需要 先 运行 Java 执行程序 tnameserv . exe ， 启动 名录 服务 ， 用于 登记 对象 实现 。 
 6   结束语 
 　 　 实现 基于 Web 的 网络管理 是 现阶段 网络管理 必行 的 趋势 。 CORBA 技术 和 Java 技术 的 应用 ， 使得 基于 Web 网络管理 不仅 在 用户 的 交互性 、 易 操作性 上 ， 而且 在 对 网络 的 故障 管理 、 配置管理 和 性能 等 方面 的 管理 都 体现 出 很大 的 优势 。 
 谢双 一 （ 华中师范大学 计算机系   武汉   430079 ） 
 薛进 （ 湖北省 粮食 学校   武汉   430010 ） 
 参考文献 
 1 ， 肖德宝 .   网络管理 技术 现状及 发展趋势 .   国际 电子报 ,   1998 年 11 期 
 2 ， 汪芸 .   CORBA 规范 和 技术 .   南京 ： 东南大学 出版社 ,   1998 
 3 ， Jams   Won - ki   Hong .   Web - Based   Intranet   Services   and   network   Management ,   IEEE   Communications   Magazine ,   October   1997 
 4 ， Nikolaos   Anerousis .   Scalable   Management   Services   Using   Java   and   the   World   Wide   Web ,   AT&T   Labs   Research ,   http : / / www .   research . att . com / ～ nikos / 
 5 ， Stefano   Sandolo ,   Andrea   Sappia ．   JAD   System   Architecture ,   http : / / www . esng . dibe . unige . It / JAD / ,   1997.8 . 30 
 6 ， A   White   Paper   on   Web - Based   Management ,   http : / / cybermanage .   wipro . com / wpaper - wbnm . html 
 收稿 日期 ： 1999 年 8 月 23 日 
