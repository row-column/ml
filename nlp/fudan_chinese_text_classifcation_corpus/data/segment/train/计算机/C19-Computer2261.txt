计算机 应用 研究 
 APPLICATION   RESEARCH   OF   COMPUTERS 
 2000 　 Vol.17 　 No.5 　 P.23 - 24 ， 86 
 
 
 
 操作系统 对 QoS 的 技术支持 
 卢 文成 　 章昊翰 　 姜晓红 　 石教英 
 摘     要     该文 就 操作系统 对 QoS ( 服务质量 ) 的 技术支持 进行 了 深入探讨 。 在 给出 QoS 及其 处理 模型 的 基础 上 ， 阐述 了 OS 支持 QoS 的 思想 ， 并 给出 OS 支持 QoS 的 技术 实现 方法 。 
 关键词     OS     QoS     分布式 多媒体 
 1     引言 
 　 　 操作系统 作为 信息 计算 系统 中 最 基础 的 系统软件 ， 它 处于 硬件 底层 与 上层 其它 系统软件 及 应用软件 之间 ， 其 目标 与 功能 在于 有效 地 管理 硬件资源 ， 并 提供 上层 应用 便利 的 调用 接口 。 其中 系统 效率 、 使用 方便性 、 强壮 性 与 安全性 等 是 其 设计 与 实现 考虑 的 主要 方面 [ 1 ] 。 由于 操作系统 所处 的 地位 ， 操作系统 的 发展 最 需要 关注 的 是 底层 硬件 体系 变化 以及 上层 应用 的 需求 变化 ， 而 两者 之中 应用 需求 的 驱动 是 最 根本 的 ， 正是 由 它 促进 了 硬件 体系 以及 其它 软件 体系 的 变革 ， 从而 又 引发 了 自身 新 的 需求 。 这 一点 可以 从 计算机 诞生 以来 ， 计算机硬件 的 发展 变化 、 应用 需求 的 发展 变化 以及 软件 体系 包括 操作系统 的 发展 变化 过程 可以 清晰 地 看到 。 另一方面 ， 硬件 与 计算 体系结构 的 发展 速度 是 惊人 的 ， 相对而言 ， 操作系统 的 设计 与 更新 要 滞后 得 多 ， 这 主要 与 操作系统 的 设计 与 实现 难度 有关 。 无疑 地 ， 这种 情况 影响 了 软件系统 的 效率 与 性能 。 目前 大多数 的 操作系统 设计 思想 ， 仍然 沿用 的 是 七 、 八十年代 传统 的 UNIX 系统 的 设计 思想 。 然而 近 20 年来 硬件平台 与 应用 却 发生 了 重大 的 变化 ， 尤其 是 近 10 年来 网络通信 技术 的 发展 ， Internet 的 成功 ， 分布式 多媒体 应用 的 发展 ， 对 下一代 信息 计算 模式 产生 深远 的 影响 。 可以 预见 下一代 信息 计算 将 是 基于 高性能 多 服务网络 的 分布式 多媒体 协同 的 智能 信息 计算 [ ２ ， ３ ] 。 
 　 　 鉴于 这种 网络 环境 与 应用环境 的 需求 的 变化 ， 传统 操作系统 的 设计 背景 已经 发生 了 改变 ， 许多 方面 的 设计 需要 重新 审视 。 本文 主要 针对 这种 变化 ， 就 其中 操作系统 对 QoS 的 技术支持 这 一方面 进行 探讨 。 以下 各节 ， 我们 分别 从 QoS 及其 处理 模型 和 OS 支持 QoS 的 技术 实现 方法 两个 方面 来 展开 论述 ， 最后 还 讨论 了 我们 在 OS 端 支持 QoS 方面 的 将来 工作 。 
 2     QoS 及其 处理 模型 
 2.1     QoS 的 概念 
 　 　 服务质量 QoS 最早 出现 于 通信 领域 ， 用来 描述 数据传输 链路 的 速率 、 可靠性 等 技术 特性 。 开始 时 ， 它 只 应用 于 网络 底层 协议 ， 对 上层 应用 而言 是 透明 的 ， 这 对于 早期 时间 要求 不强 的 应用 而言 是 可以 接受 的 。 但是 随着 与 时间 关联 紧密 的 多媒体 应用 的 发展 ， 这种 限于 底层 的 QoS 显得 很 不 完整 ， 因而 国际电信联盟 ( ITU ) 在 其 开放系统 互连 推荐 模型 ( OSI - RM ) 中将 QoS 的 定义 扩展 为 整个 多媒体 分布 系统 ， 要求 整个 系统 一 起来 提供 服务水平 保证 ， 其 定义 如下 ： 
 　 　 A   set   of   quality   requirements   on   the   collective   behavior   of   one   or   more   objects . 
 　 　 这里 指出 QoS 是 一个 或 多个 对象 的 集体 行为 的 质量 需求 集 ， 它 涉及 的 是 一组 对象 的 集体 行为 。 一般而言 ， 它们 包括 硬件 终端 系统 、 操作系统 、 通信 系统 、 应用 系统 等 。 由于 QoS 是 一种 集体 行为 ， 因而 对象 之间 需要 协商 。 但 最终 每个 对象 都 要 保证 其所 承诺 的 QoS 服务 ， 由此 来 确保 总体 的 QoS 实现 。 也就是说 在 分布式 多媒体系统 的 各个 层次 、 各个 对象 中 ， 都 需要 有 相应 的 QoS 处理 机制 。 然后 这些 个体 的 QoS 处理 机制 再 通过 QoS 协商 机制 完成 全局 的 QoS 处理 。 以下 我们 简略 地 讨论 通用 的 QoS 处理 模型 。 
 2.2     通用 QoS 处理 模型 
 　 　 一般 地 ， 通用 QoS 处理 模型 由 以下 几个 部分 构成 ： ( 1 ) 构造 通用 的 QoS 框架 ； ( 2 ) 反映 QoS 需求 的 QoS 规范 说明 ； ( 3 ) QoS 规范 说明 到 具体 资源 的 映射 ； ( 4 ) 实现 所需 QoS 行为 的 具体 机制 。 
 　 　 其中 ， 抽象 出 反映 应用 QoS 需求 的 QoS 规范 说明 是 进行 QoS 处理 的 前提 。 由于 计算机系统 能够 处理 的 只是 有限 的 正则 集 ， 因而 从 众多 的 应用 中 抽象 出 有限 的 QoS 规范 参数 的 正则 集 十分 重要 。 同时 这种 规范 集 ， 具体 在 系统 的 不同 层次 与 对象 上 又 各不相同 。 一般 地 ， QoS 规范 说明 应 包含 以下 几个 方面 的 需求 ： 性能 、 同步 、 服务 等级 、 服务 开销 、 QoS 自身 的 管理 等等 。 
 　 　 QoS 规范 说明 给出 的 只是 系统 对象 层 对外 的 界面 规范 ， 对于 这种 界面 规范 ， 系统 对象 层 内部 总 要 落实 到 具体 资源 的 分配 与 占用 上 ， 也就是说 ， 需要 一种 资源 的 推导 映射 机制 。 当然 这种 资源 包括 对象 层 自身 拥有 的 物理 资源 以及 从 其它 对象 层 获得 承诺 的 抽象 资源 。 因此 在 确定 映射 机制 时 ， 需要 了解 该 对象 层 拥有 的 资源 。 
 　 　 对象 层 在 接收 到 QoS 规范 参数 后 ， 通过 层内 映射 机制 ， 落实 到 资源 的 占用 需求 。 这种 占用 需求 需要 相应 实现 QoS 行为 的 具体 机制 来 分配 、 管理 与 监控 。 
 3     OS 支持 QoS 的 技术 实现 方法 
 　 　 这里 我们 主要 讨论 增强 支持 方式 ， 其中 主要 围绕 网络通信 支持 展开 。 我们 的 目标 是 支持 各种各样 的 分布式 多媒体 应用 ， 为了 提供 上层 多媒体 应用 的 支持 ， 我们 首先 需要 抽象 出 上层 应用 的 QoS 说明 界面 。 
 3.1     应用 的 QoS 说明 界面 
 　 　 由于 上层 应用 的 多样性 ， 我们 需要 抽象 出 能够 传达 应用 相应 QoS 需求 的 参数 界面 。 这种 参数 界面 需要 满足 以下 两 原则 ： 1 ) 是 能够 代表 各种 不同 应用 需求 的 正则 集 ； 2 ) 参数 不宜 多且 对于 上层 应用 而言 易于 指定 。 一般 地 ， 我们 可以 把 应用 类型 大致 分为 以下 三类 ： 
 　 　 ． 等 时类 应用 ( 连续 媒体 类 ) 
 　 　 这 类 应用 是 以 固定 速率 产生 或 吸收 连续 媒体 流 数据 的 应用 ， 为了 避免 抖动 ， 它 具有 较 高 的 等 时性 要求 。 这 类 应用 的 网络 传输 情况 特点 ， 可以 由 以下 三个 参数 给出 ： 帧 速率 、 最大 帧 大小 以及 平均 帧 大小 。 这 三个 参数 可以 决定 该 应用 网络连接 需要 的 带宽 需求 。 另外 附加 一个 发送 端到 接收端 的 延迟 参数 ， 可以 决定 缓冲 资源 的 需求 情况 。 
 　 　 ． 突发性 应用 
 　 　 这 类 应用 数据 的 发送 与 接收 是 随机 的 突发性 的 ， 以 多媒体 浏览 应用 为 代表 。 其 QoS 参数 主要 为 最大 数据 大小 以及 需要 的 带宽 。 
 　 　 ． 低 延迟 类 应用 
 　 　 这 类 应用 主要 是 消息 发送 与 接收 类 应用 ， 带宽 需求 不高 但 要求 较 小 的 响应 时间 。 需要 提供 一定 速率 的 消息 传送 服务 的 数据流 应用 也 属 此类 ， 如 DIS ( 分布 交互 模拟 ) 。 这 类 应用 其 QoS 参数 主要 为 最大 消息 包 大小 、 延迟 、 消息 速率 。 
 　 　 这些 应用 的 QoS 说明 界面 ， 可 通过 扩展 的 或 增强 的 QoS 系统 调用 来 实现 。 
 3.2     QoS 到 资源 需求 的 映射 
 　 　 应用程序 以 上面 定义 的 QoS 参数 向 操作系统 核心 提出 的 请求 后 ( 系统 调用 方式 ) ， 操作系统 需要 将 这些 面向 应用 的 QoS 参数 需求 转换成 系统 硬件资源 的 需求 关系 ， 即 需要 进行 资源 需求 的 QoS 映射 。 对于 应用 的 通信 会话 ， 涉及 的 是 网络 链路 资源 、 网络 数据 协议 处理 的 计算资源 ( 可 调度 的 处理器 资源 ) ， 因此 需要 在 其中 建立 一种 需求 推导 机制 。 这种 推导 基于 如图 1 所示 模型 。 
 
 图 1 通信 构成 模型 
 　 　 映射 过程 如下 ： 1 ) 根据 采用 的 协议 ， 调节 数据包 大小 ， 同时 根据 总 延迟 确定 终端 部分 的 延迟 估算 。 2 ) 根据 调节 后 的 数据包 大小 与 延迟 估计 确定 网络连接 的 带宽 与 延迟 参数 。 3 ) 根据 网络带宽 与 延迟 估算 导出 协议 处理 能力 需求 ( 处理器 资源 ) 及 缓冲 资源 。 
 　 　 下面 我们 详细 给出 协议 处理 的 CPU 资源 需求 映射 过程 。 以 等 时类 的 应用 为例 ， 由 该类 应用 的 帧 速率 、 平均 帧 大小 及 最大 帧 大小 可 确定 其 连接 的 带宽 需求 ， 记为 v 。 其 延迟 参数 定出 终端 部分 的 延迟 为 D 。 下面 我们 根据 v 、 D 与 PDUsize 来 导出 其 处理器 需求 。 由 v 及 PDUsize 可以 确定 该 网络连接 需要 网络适配器 发送 一个 PDU 的 时间 间隔 t 。 为了 满足 链路 充分 工作 的 条件 ， 我们 需要 在 间隔 t ， 至少 准备 好 一个 PDU 。 考虑 到 协议 处理 的 开销 ， 一般 一次 处理 n 个 协议 包 ， n 的 取值 要 满足 n ( t < d ， 同时 n 还 与 网络 缓冲 资源 相关 。 这样 在 t = n ( t 的 周期性 时间 间隔 内 ， 该 网络连接 需要 cpu 来 形成 n 个 pdus 。 该 处理 时间 记为 c ， 与 cpu 及 协议 处理 代码 有关 。 通过 c / t ， 我们 就 可为 这次 网络连接 预留 处理器 资源 。 
 3.3   QoS 的 强化 
 　 　 应用 的 QoS 需求 经 映射 推导 处理 后 ， 最终 落实 到 具体 的 资源 需求 ： 处理器 资源 、 缓冲 资源 以及 链路 资源 等 。 这些 资源 的 可 分配 性 ， 分配 后 如何 强化 保证 其 落实 ， 是 实现 QoS 支持 的 重要 方面 。 其中 对于 操作系统 而言 ， 增加 QoS 的 支持 ， 最 关键 的 就是 引入 QoS 强化 落实 机制 ， 其 主要 内容 是 处理器 资源 的 调度 保证 措施 。 针对 协议 处理 的 需求 ， OS 需要 ： 
 　 　 ( 1 ) 构造 在 一个 进程 内 周期性 的 处理 行为 机制 ； 
 　 　 ( 2 ) 在 多个 进程 间 调度 这些 行为 的 调度 机制 。 
 　 　 这 在 传统 的 Unix 系统 中 ， 并未 得到 很 好 的 解决 ， 其 进程 的 调度 往往 采用 基于 优先级 的 RR 算法 。 一般 的 处理 是 在 OS 的 核心 调度 中 添加 实时 扩充 ， 以 增加 对 周期性 实时处理 的 支持 。 如图 2 所示 。 这种 实时 扩充 支持 可 分为 三类 ： 1 ) 添加 一些 新 的 可 执行 对象 ， 包括 增加 实时 线程 或 进程 对象 ， 实时 signal 对象 等等 各种 方法 [ 4 ] 。 2 ) 通过 对 现有 的 一些 可 执行 对象 进行 实时 调度 增强 处理 ， 而 不 增加 新 的 可 执行 对象 [ 5 ] 。 3 ) 采用 一些 周期性 的 实时 调度 算法 ， 如 RM ( Rate - Monotonic ) 算法 、 EDF ( Earliest   Deadline   First ) 算法 等 。 
 
 图 2 核心 调度 的 实时 扩充 实现 方法 
 　 　 这些 方法 实现 各有 各自 的 优缺点 ， 一般而言 ， 实现 的 难度 、 性能 效率 以及 通用性 是 其 考虑 的 指标 。 
 3.4   网络协议 系统 的 开发 与 优化 
 　 　 网络通信 作为 OS 支持 QoS 的 重要 内容 ， 其 协议 模块 的 开发 以及 降低 系统 开销 的 性能 优化 工作 具有 重要 意义 。 一般 地 ， 网络协议 系统 的 开发 根据 协议 处理 代码 的 实现 位置 可 分为 ： 核心 级 实现 与 用户 级 实现 两种 。 其中 网络 模块 在 用户 级 的 实现 由于 具有 更 高 的 可 配置 性 、 灵活性 ， 同时 效率 上 与 核心 驻留 协议 处理 相差 不 大 ， 故 近来 研究 工作 更 多 的 考虑 用户 级 的 网络 实现 方法 。 
 　 　 无论是 用户 级 的 网络 实现 还是 核心 级 的 网络 实现 ， 其 数据 都 涉及 从 用户 空间 到 核心 空间 的 过程 ， 以及 协议 处理 中 的 上下文 切换 开销 。 因而 降低 数据 拷贝 开销 以及 上下文 切换 开销 是 协议 系统优化 的 关键 。 
 　 　 其中 在 降低 数据 拷贝 开销 方面 ， 主要 的 方法 有 硬件 上 采用 专用 的 网络 适配卡 ， 上层 应用 的 缓冲区 直接 定位 在 网络 适配卡 上 ， 从而 降低 数据 移动 开销 。 软件 上 ， 采用 一些 共享内存 技术 来 降低 数据 从 用户 空间 到 核心 空间 之间 的 拷贝 ， 所 传递 的 只是 几个 字节 大小 的 内存 句柄 。 
 　 　 在 降低 系统 调用 切换 开销 方面 ， 常 采用 一些 在 应用 进程 与 核心 之间 共享 的 一些 数据结构 ， 如 环状 buffs ， 通过 应用 进程 以及 核心 对 这些 共享 数据结构 的 操作 与 轮询 来 协调 工作 ， 降低 一些 管理 方面 的 切换 开销 。 
 4     结论 
 　 　 本文 中 ， 我们 对 操作系统 对 QoS 的 终端 技术支持 作 了 较为 完整 的 探讨 ， 其中 从 分布式 多媒体 的 QoS 处理 出发 ， 详细 讨论 了 在 OS 中 支持 QoS 的 思想 以及 实现 技术 。 目前 ， 我们 正在 ATM 网上 构造 一个 多媒体 分布 处理 框架 系统 ， 该 系统 的 目标 是 提供 应用 到 应用 的 QoS 保证 机制 。 作为 该 框架 系统 构成 的 一部分 ， 我们 正对 操作系统 Linux 进行 改造 ， 使 之 在 终端 系统 上 满足 应用 QoS 的 需求 。 
 卢 文成 ( 浙江大学 CAD & CG 国家 重点 实验室       浙江大学 计算机系     杭州   310027 ) 
 章昊翰 ( 浙江大学 CAD & CG 国家 重点 实验室     浙江大学 计算机系       杭州   310027 ) 
 姜晓红 ( 浙江大学 CAD & CG 国家 重点 实验室     浙江大学 计算机系       杭州   310027 ) 
 石教英 ( 浙江大学 CAD & CG 国家 重点 实验室     浙江大学 计算机系       杭州   310027 ) 
 参考文献 
 1 ， Abraham   S .   & amp ;   Peter   B .   Galvin .   Operating   System   Concepts   ( Fourth   Edition ) ,   Addison - Wesley   Publishing   Company .   1994 
 2 ， Jean   Walrand   & amp ;   Pravin   Varaiya .   High - Performance   Communication   Networks ,   University   of   California   Berkeley ,   Morgan   Kaufman   Publisher ,   Inc .   1996 
 3 ， Paul   P .   White   & amp ;   Jon   Crowcroft .   The   Integrated   Services   in   the   Internet :   State   of   the   Art ,   Proceedings   of   the   IEEE ,   Vol .   85 ,   No .   12 ,   December .   1997   pp   1934 ～ 1946 
 4 ， R .   Gopalakrishnan   & amp ;   Guru   M .   Parulkar .     A   Framework   for   QoS   Guarantees   for   Multimedia   Applications   within   an   Endsystem ,   Swiss   German   Computer   Society   Conference ,   September ,   1995 
 5 ， David   K .   Y .   Yau   & amp ;   Simon   S .   Lam ,   Operating   System   Techniques   for   Distributed   Multimedia ,   Proceedings   SPIE   Multimedia   Computing   and   Networking ( MMCN   ' 96 ) ,   January   1996 
 收稿 日期 ： 1999 - 12 - 22 
