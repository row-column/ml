计算机 工程 
 COMPUTER   ENGINEERING 
 1999 年   第 25 卷   第 12 期   vol.25   No.12   1999 
 
 
 
 ABC95 阵列 机 的 FPGA 实现 及其 优化 
 佟 　 冬 　 黎冬梅 　 周永林 　 方滨兴 
 　 　 ABC95 阵列 机和 它 的 前身 ABC90 - jr 阵列 机 [ 1 ] 一样 是 一台 16 个 节点 的 SIMD 并行 计算机 ， 它 的 主要 特点 是 5 种 模式 存储器 无 冲突 访问 、 静态 和 动态 互连 模式 相 统一 的 拓扑 结构 等 。 ABC90 的 实现 技术 是 TTL 芯片 和 小规模 的 可编程 器件 ， 它 由 11 块 PCB 板 组成 ， 集成度 不高 ， 调试 难度 大 。 ABC95 采用 现场 可编程 门阵列 ( FPGA ) 技术 ， 最 主要 的 目的 是 提高 阵列 机 的 集成度 。 
 　 　 ABC95 由 5 个 部分 组成 ： 输入输出 部件 ( I / O ) 、 控制部件 ( CU ) 、 16 位 标量 运算 部件 ( SP ) 、 16 个 8 位 向量 运算 部件 ( PE ) 和 互连 网络 部件 ( NET ) 。 其 运行 方式 是 ： I / O 将 汇编程序 和 数据 先加 载入 阵列 机 的 存储器 中 ， 并 命令 程序 开始 执行 。 CU 分析 每 一条 指令 并 向 SP 、 PE 和 NET 发送 控制 信号 和 运算 数据 ， 控制 它们 统一 同步 地 运行 。 SP 部件 执行 标量 指令 并 控制 PE 的 屏蔽 字 。 PE 部件 执行 向量指令 ， 存储 数据 的 对准 和 PE 之间 的 数据传输 由 NET 部件 完成 。 
 　 　 ABC95 阵列 机 采用 Altera 公司 的 FLEX10K 系列 FPGA 器件 [ 2 ] 实现 ， 设计 软件 是 Altera 公司 的 MaxPlus   II 软件包 。 FLEX10K 器件 有 以下 几个 主要 部分 组成 ： 1 )   LAB ( Logic   Array   Block ) ， 采用 4 - LUT ( 4   Look - Up   Table ) 技术 实现 逻辑 功能 。 在 逻辑 单元 LE ( Logical   Element ) 之间 加入 了 快速 进位 链 ( 延迟 小于 1ns ) 和 级联 链 ( Cascade   Chain ) ， 能 大大提高 了 算术 运算 的 速度 。 2 )   EAB ( Embedded   Array   Block ) ， 可用 来 实现 小规模 的 RAM 、 ROM ， 还 可以 设计 成 大型 的 LUT 实现 其它 特殊 的 逻辑 。 3 )   FastTrack   Interconnection ， 采用 分层 的 互连 模式 ， 实现 快速 、 统一 延迟 的 连接 。 4 )   IOE ( I / O   Element ) ， 能 实现 各种 对外 连接 方式 ， 包括 三态 和 漏级 开路 ( Open - drain ) 。 
 1   主要 需 解决 的 问题 
 　 　 在 ABC95 设计 的 开始 阶段 采用 的 是 传统 的 设计 方法 ， 只 把 FPGA 当作 一般 的 大型 可编程 器件 来看 。 在 设计 中 仍然 采用 了 ABC90 阵列 机中 使用 的 一些 元器件 ， 如 SP 的 算 逻 部件 ( Am29C101 ) 、 SP 的 乘法 部件 ( Am29517 ) 、 PE 的 算 逻 部件 、 存储器 及 实现 CU 指令 译码 的 EPROM 等 。 表 1 是 SP 和 PE 的 结果 数据 ， 其中 用 一个 FPGA 实现 两个 PE 。 
 表 1   未 优化 的 FPGA 试验 数据 
 部件 名称 器件 类型 输入输出 总数 LE 利用率 EAB 利用率 
 SP10k50VBC356 - 32617% 0% 
 PE2in110K50GC403 - 327739% 0% 
 
 　 　 从表 1 的 数据 可以 看出 ， 实现 SP 和 PE 的 FPGA 逻辑 单元 利用率 非常低 ， EAB 的 利用率 为 零 ， 而且 所 选择 的 FPGA 器件 类型 也 比较 高级 。 总之 ， 其 性能 价格比 极低 。 
 　 　 主要 原因 是 此 设计 中 SP 和 PE 的 输入输出 信号 过多 。 这样 势必 选择 管脚 多 的 FPGA ， 而 管脚 多 的 FPGA 其 内部 逻辑 单元 也 相对 多 ， 从而 使 FPGA 的 利用率 很 低 。 另外 ， 设计 中 没有 小规模 的 存储器 ， Altera 的 FPGA 中 提供 的 EAB 单元 也 浪费 了 。 
 　 　 为了 提高 FPGA 的 利用率 ， 必须 对 设计 进行 重新 优化 。 首先 需 分析 阵列 机 各 功能模块 的 输入输出 信号 来源 ， 然后 以此 为 依据 采取相应 的 优化 方法 。 优化 的 主要 方法 是 将 分立 部件 的 逻辑 尽可能 的 用 FPGA   实现 。 由于 SP 和 PE 的 设计 大同小异 ， 本文 以 SP 为例 进行 分析 。 SP 主要 由算逻 部件 ( ALU ) 、 乘法 部件 ( MUL ) 、 存储器 和 接口 部件 组成 ， 图 1 是 其 输入输出 信号 的 分布图 。 
 
 图 1   SP 部件 的 输入输出 信号 比例图 
 　 　 由图 1 可以 看出 SP 的 信号 主要 来自 算逻 部件 、 乘法器 、 CU 和 存储器 。 SP 部件 是 16 位 的 标量 部件 ， 其 存储器 的 大小 是 64kBX16 。 Altera 公司 的 FLEX10kB 内部 的 EAB 不能 实现 这么 大 的 内部 存储器 ， 所以 存储器 还是 采用 分立元件 实现 。 对 阵列 机 设计 的 优化 主要 是 减少 算逻 部件 、 乘法器 和 CU 的 连线 。 
 2   控制器 CU 的 优化 设计 
 　 　 在 ABC90 阵列 机中 ， SP 、 PE 和 NET 的 所有 控制 信号 和 运算 数据 ， 都 是 由 控制器 CU 产生 的 。 指令 采用 3 地址 格式 ， 算术 和 逻辑运算 及 结果 的 寄存器 回写 在 一个 时钟 周期 内 完成 ， 指令 字长 为 32 位 。 指令 的 执行 采用 流水线 方式 ， 分为 取指 、 译码 、 执行 、 写入 4 个 执行 周期 。 将 所有 72 个 控制 信号 组成 控制 字 ， 将 由 每条 指令 控制 字 组成 的 译码 表 存在 一个 EPROM 中 。 当 指令 执行 时 ， 指令 的 操作码 作为 EPROM 的 地址 ， EPROM 的 输出 数据 即 是 所 需 的 控制 信号 。 
 　 　 控制 信号 和 运算 数据 由 CU 统一 发出 ， 使 CU 和 SP 、 PE 、 NET 之间 的 连线 过多 ， 影响 每个 模块 的 FPGA 利用率 。 如何 减少 连线 是 解决 ABC95 阵列 机 优化 的 一个 关键问题 。 
 　 　 FLEX10K 中 的 EAB 单元 能 实现 ROM ， 可以 用来 实现 指令 译码 。 为了 减少 各 模块 之间 的 连线 ， 可以 将 译码 逻辑 移入 各 模块 中 。 这样 CU 向 各 模块 发送 的 是 指令 字 ， 各 模块 分别 对 指令 译码 产生 控制 信号 。 由于 这些 控制 信号 在 FPGA 内部 产生 ， 可以 减少 连线 。 例如 SP 的 控制 信号 和 数据 共 54 根线 ， 在 内部 实现 译码 后 ， SP 与 CU 的 连线 减少 为 32 根线 。 
 　 　 在 ABC95 阵列 机中 一共 有 72 根 控制线 ， 指令 数为 113 条 ， 需要 256kBX72 的 ROM 。 但是 FLEX10K 中 没有 这么 多 的 EAB 单元 ， 不能 实现 整个 的 译码 功能 。 但 在 每个 模块 内 ， 并 不是 每个 信号 都 用到 ， 如 标量 指令 执行 时 SP 只用 25 个 控制 信号 。 可以 将 指令 控制 字 划分 ， 各 模块 用到 的 信号 组成 控制 字 ， 存入 EAB 单元 中 ， 这样 每个 模块 的 译码器 都 能 用 最少 的 EAB 单元 实现 。 
 　 　 这种 将 译码 表 分解 到 各个 模块 的 方法 有 以下 优点 ： 1 )   减少 了 CU 和 各 功能模块 的 连线 ； 2 )   使用 了 EAB 单元 ， 充分利用 了 FPGA 的 资源 ； 3 )   更改 设计 容易 ， 对 一个 功能模块 的 改变 基本上 不 影响 阵列 机 的 其它 部分 ； 4 )   由于 各 模块 的 控制 输入 是 指令 字 ， 可以 分别 模拟 ， 减少 整机 调试 的 难度 。 
 3   算逻 部件 和 乘法器 的 优化 实现 
 3.1   算逻 部件 的 实现 
 　 　 ABC95 阵列 机 SP 的 算 逻 部件 的 主要 组成部分 是 ： 16 个 16 位 寄存器 组 、 操作数 选择 部件 、 ALU 、 移位 部件 和 0 标志 位 生成 部件 。 ALU 需 完成 8 种 操作 ： 加 、 减 、 位 与 、 位 或 、 位 异或 等 ， 操作 由 选择 信号 S [ 2 : 0 ] 控制 。 
 　 　 实现 算逻 部件 的 关键 是 ALU 的 实现 。 在 FLEX10K 系列 中 ， 可以 用 3 种 方法 实现 ALU ： 传统 的 设计 方法 、 硬件 描述语言 方法 和 Altera 的 lmp 专用 库法 。 传统 的 设计 方法 以 基本 的 门 为 基础 ， 特点 是 对 逻辑运算 和 进位 链 进行 直接 优化 设计 ， 在 VLSI 设计 和 TTL 级 的 设计 中 经常 使用 。 硬件 描述语言 设计 方法 采用 VHDL 或 AHDL ( Altera   HDL ) 描述 硬件 ， 经过 综合 得到 最终 的 设计 结果 ， 其 好处 是 设计 方便 。 
 　 　 Altera 的 设计 软件包 中 ， 提供 了 一个 专用 的 元件库 lpm ， 其中 每个 元件 都 是 用 AHDL 编写 的 ， 它 充分考虑 到 FLEX10K 的 各种 特色 ， 使 每个 元件 的 设计 都 能 达到 最优 。 但是 lmp 库中 并 没有 提供 ALU 的 元件 ， 只 提供 了 加减法 器 和 单个 的 逻辑 部件 。 
 　 　 采用 一种 结果 选择 法来 实现 ALU ： 用 lmp 库 的 元件 分别 实现 ALU 的 每 一种 运算 ， 再用 一个多 选一 部件 来 选择 输出 ， 其 选择 信号 是 ALU 的 操作控制 信号 。 这种 方法 的 结构 如图 2 所示 。 在 做 任何 的 运算 时 ， 各个 运算 逻辑 元件 同时 进行 运算 ， 但 结果 只 选择 需要 的 。 
 
 图 2   用 lmp 库 实现 ALU 的 结构图 
 　 　 我们 在 MaxPlusII 中 分别 用 这 3 种 方法 实现 了 SP 的 16 位 ALU ， 其中 传统 的 设计 ( ALU _ 74381 ) 采用 74 系列 中 的 ALU 器件 74381 和 进位 链 74182 ， 硬件 描述语言 方法 ( ALU _ AHDL ) 使用 AHDL 硬件 描述语言 ， 专用 库法 ( ALU _ Selector ) 分别 用 lpm 库中 元件 实现 了 8 中 运算 。 通过 模拟 ALU 延迟 最长 的 运算 FFFF + 1 和 0 - 1 ， 对 这 3 种 方法 进行 了 比较 ， 表 2 为 实验 结果 。 
 表 2   实现 ALU   3 种 方法 的 结果 比较 
 实现 方法 输入输出 数 FFFF + 1 延迟 0 - 1 延迟 所用 LE 数 
 ALU _ 743815431.8 ns56.4 ns123 
 ALU _ AHDL5436.1 ns25.8 ns243 
 ALU _ Selector5431.6 ns25.2 ns151 
 
 　 　 表 2 的 试验 结果表明 ， 专用 库 方法 实现 ALU 最好 。 主要 是 FLEX10K 中 提供 了 快速 的 进位 链和级 连链 ， 它们 能 优化 加法器 和 多 选一 逻辑 的 实现 。 这种 专用 库 实现 方法 虽然 不 太合 常理 ， 但 很 有效 ， 其 优点 在于 ： 设计 简单 、 更改 容易 、 速度 快 、 使用 的 逻辑 单元 数少 。 
 3.2   乘法器 的 实现 
 　 　 SP 中 的 乘法器 是 一个 16X16 的 整数 乘法器 ， 其 结果 是 一个 32 位 的 整数 。 乘法 指令 执行 时 ， 其 结果 的 低 16 位 直接 存入 一个 寄存器 内 ， 其高 8 位 结果 暂 存在 乘法器 的 一个 结果 寄存器 内 。 乘法 指令 执行 后 ， 应立即 执行 高位 结果 传送 指令 ， 将 高 8 位 送入 另 一个 寄存器 内 。 
 　 　 Altera 的 FLEX10K 中 ， 乘法器 可以 采用 两种 结构 ： EAB 和 LE 。 FLEX10K 中 的 EAB   可以 用来 实现 存储 ， 它 也 可以 看作 是 大型 的 LUT 来 实现 逻辑 。 使用 EAB 有 两种 设计 方法 ： 流水线 并行 乘法器 和 时间 域 选择 乘法器 。 用 EAB 设计 的 乘法器 ， 其 计算结果 是 通过 查表 得来 的 ， 因此 其 运算 运算 速度 最快 ， 而且 延迟 固定 。 
 　 　 利用 LE 设计 乘法器 利用 了 LE 之间 的 快速 进位 链 ， 其 设计 方法 有 3 种 ： 逐位 进位 乘法器 、 布思 算法 的 组合 乘法器 和 流水 式 乘法器 。 流水 式 的 乘法器 速度 最快 ， 适合 大量 的 乘法 连续 执行 ， 但 它 使用 的 LE 资源 太 多 。 逐位 进位 乘法器 和 布思 算法 乘法器 的 速度 也 比较 快 ， 其 使用 的 LE 数 更 合理 。 
 　 　 在 ABC95 阵列 机 的 SP 设计 中 ， FLEX10K 中 的 EAB 已经 用来 实现 指令 译码 ， 所以 采用 EAB 来 实现 乘法器 ， 只能 用 LE 来 实现 。 SP 的 乘法器 只当 执行 乘法 指令 时才 用到 ， 因此 采用 流水 式 乘法器 速度 未必 快 。 所以 SP 中 采用 逐位 进位 乘法器 来 实现 乘法 指令 ， 它 用 了 537 个 LE ， 最大 延迟 48ns 。 
 3.3   ALU 和 乘法器 的 结合 
 　 　 ABC90 阵列 机中 SP 的 乘法器 是 采用 的 专用 芯片 Am29517 ， 它 的 两个 操作数 是 由 ALU 部件 的 结果 数据 提供 的 。 由于 ALU 一个 时钟 周期 只能 提供 一个 操作数 ， 完成 乘法 运算 需要 用 4 个 周期 ， 给 控制 和 时钟 设计 带来 不便 。 
 　 　 在 ABC95 阵列 机 的 中 ， 将 乘法器 和 加法器 设计 在 一起 。 将 图 1 中 的 一个 运算 部件 用 lmp 库中 的 逐位 进位 乘法器 代替 ， 结果 的 低 8 位 通过 八选 一 逻辑 直接 回写 到 寄存器 组中 ， 结果 的 高 8 位用 一个 寄存器 暂存 ， 在 执行 高位 结果 传送 指令 时 ， 由 立即 数 端口 回写 到 寄存器 组中 。 
 　 　 利用 以上 方法 可以 将 SP 和 PE 中 的 ALU 和 乘法器 用 FPGA 实现 ， ALU 和 乘法器 的 信号 都 变成 了 FPGA 中 的 内部 信号 。 这样 不仅 提高 了 计算速度 ， 简化 了 控制 ， 而且 也 提高 了 FPGA 的 利用率 。 
 4   结论 
 　 　 通过 以上 两种 优化 ， 对 SP 和 PE 重新 设计 的 结果 如表 3 所示 。 结果表明 经过 优化 后 的 设计 ， 采用 的 FPGA 规模 小 ， LE 和 EAB 的 利用率 都 很 高 。 
 表 3   优化 后 的 FPGA 试验 数据 
 部件 名称 器件 类型 输入输出 总数 LE 利用率 EAB 利用率 
 SP10K30RC20813295% 54% 
 PE2in110K30RC24017887%   72% 
 
 　 　 ABC95 阵列 机由 3 块 PCB 板 组成 ， 两块 各有 8 个 PE 的 PE 板 ， 一块 由 I / O 、 CU 和 SP 组成 的 控制板 。 这比 ABC90 的 11 块 PCB 板少 得 多 ， 达到 了 提高 集成度 的 目的 。 
 作者 单位 ： 哈尔滨工业大学 计算机科学 与 工程系 , 哈尔滨 150001 
 参考文献 
 1   方滨兴 , 李晓明 . ABC90 - jrSIMD 阵列 计算机控制 结构 . 计算   机 研究 与 发展 , 1995 , 34 ( 4 ) : 1 - 5 
 2   Altera . FLEX10K   Embedded   Programmable   Logic   Family   Data   Sheet , 1998 
