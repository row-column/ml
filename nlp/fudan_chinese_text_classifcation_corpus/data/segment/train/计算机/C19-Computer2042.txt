计算机 工程 
 Computer   Engineering 
 1999 年 　 第 25 卷 　 第 4 期 　 Vol.25 　 No.4 　 1999 
 
 
 
 RTF 文件格式 分析 及 在 多媒体 中 的 应用 
 余阳 　 游燕 
 摘 　 要 　 RTF 是 一种 在 不同 操作系统 下 不同 应用软件 之间 进行 文本 和 图象 信息 交换 的 文件格式 。 以 RTF 格式 作为 多媒体系统 中 文本 媒体 的 一种 输入 形式 ， 可 为 用户 提供 极大 的 方便 。 简要 分析 了 RTF 文件格式 并 介绍 了 RTF 阅读器 （ RTF   Reader ） 的 编程 方法 。 
 关键词 　 RTF 多媒体   文件格式   RTF 阅读器 
 Analyses   of   Rich   Text   format   and   application   in   Multimedia 
 YuYang   YouYan 
 （ Research   Center   for   Electronical   Mechanism , Zhongshan   University   Guangzhou   510275 ) 
 Abstract : Rich   Text   Format ( RTF ) provides   a   format   for   text   and   graphics   interchange   that   can   be   used   with   different   output   devices , operating   environments , and   operating   system . This   paper   analyses   the   format   structure   of   RTF   and   introduces   the   programming   of   RTF   reader . 
 Key   words : RTF ; multimedia ; File   format ; RTF   reader 
 　 　 RTF ( Rich   Text   Format ) 格式 是 Microsoft 公司 为 进行 文本 和 图象 信息格式 的 交换 而 制定 的 一种 文件格式 ， 它 适用 于 不同 的 设备 、 操作 环境 和 操作系统 。 自从 1987 年 3 月 《 Microsoft   System   Journal 》 发表 RTF 格式 说明书 以来 ， 它 在 MS - DOS 、 Windows 、 OS / 2 和 Apple   Macintosh 等 环境 下 的 字 处理 系统 中 得到 了 广泛 的 支持 。 目前 的 版本 是 1.4 。 
 1   RTF 文件格式 分析 
 1.1 　 RTF 格式 描述 中 的 基本概念 
 　 　 RTF 文件 的 基本 元素 是 正文 ( Text ) 、 控制 字 ( Control   word ) 、 控制 符号 ( Control   Symbol ) 和 群组 ( Group ) 。 
 　 　 控制 字 是 一种 特定 格式 的 命令 ， RTF 用 它 作为 正文 格式 的 控制代码 ， 也 作为 应用程序 管理 文档 的 控制 信息 。 一般 形式 如下 ： 
 　 　 \ 字符 序列 < 定界符 > 
 　 　 控制 字 均 以 反 斜杠 开头 ， 字符 序列 是 小写字母 ( RTF 对 大小写 敏感 ) ， 定界符 标志 一个 RTF 控制 字 的 结束 ， 它 是 下列 形式 之一 ： 
 　 　 . 空格 。 
 　 　 . 数字 或 连 字符 ( - ) ， 它 表示 后 跟 数字 参数 。 后续 的 数字 序列 以 空格 或 任何 非 字母 数字 的 字符 作为 结束 。 
 　 　 . 非 字母 数字 的 任何 其它 字符 。 
 　 　 控制 符号 由 反 斜杠 后 跟 一个 单独 的 、 非 字母 的 字符 ， 表示 一个 特定 的 符号 。 
 　 　 群组 由 包括 在 大括号 ( { } ) 中 的 正文 和 控制 字 或 控制 符号 组成 。 每个 群组 描述 了 由 它 修饰 的 正文 和 正文 的 各种 属性 。 
 1.2 　 RTF 格式 的 语法 描述 
 　 　 RTF 格式 的 语法 可用 backus - Naur 范式 描述 。 完整 的 描述 需要 大量 的 篇幅 ， 这里 简要 分析 其中 重要 的 部分 。 一个 完整 的 RTF 文件 可 看作 是 一个 群组 ： 
 　 　 < File > 　 　 　 　   ' { ' < header > < document > ' } ' 
 　 　 它 包括 文件 头 < header > 和 文档 区 < document > 两 大部分 。 其中 文件 头 具有 下面 语法 ： 
 　 　 < header > \ rtf < charset > \ deff ? < fonttbl > 
 　 　 < filetbl > ? < colortbl > ? < stylesheet > ? < revtbl > ? 
 　 　 控制 字 \ rtf   必须 紧跟 在 左 括号 后 ， 后 跟 数字 参数 表示 版本号 ； < charset > 说明 文档 中 使用 的 字符集 ； \ deff   指出 省确 字体 ； < fonttbl > 群组 定义 了 文档 中 所有 可用 的 字体 ， 并 用来 作为 整个 文档 字体 的 索引 ； < filetbl > 定义 了 文档 参考 引用 的 文件 ； < colortbl > 群组 定义 了 屏幕 颜色 、 字符 颜色 、 以及 其它 颜色 信息 ； < stylesheet > 描述 了 文档 中 可以 使用 的 各种 字型 ； < revtbl > 这个 表格 跟踪 记录 该 文档 每 一次 修订 的 作者 和 时间 。 一旦 RTF 定义 了 文件 头 ， 就 有 了 足够 的 的 信息 去 正确 阅读 文档 区 。 
 　 　 文档 区 遵守 下面 的 语法 ： 
 　 　 < document > < info > ? < docfmt > * < section > + 
 　 　 信息 群组 < info > 包含 了 有关 该 文档 的 信息 。 这些 信息 包括 标题 、 作者 、 关键字 、 批注 以及 其它 有关 该 文件 的 特有 信息 。 < docfmt > 是 一组 定义 该 文档 格式 属性 的 控制 字 ， 如 ： 页 边 空白 、 脚注 位置 、 页 高页 宽 等 ， 这些 属性 必须 在 文档 中 第一个 纯正 文字 符 之前 出现 。 接下来 的 部分 由 一个 或 多个 节 构成 ， 每个 节 具有 下面 的 语法 ： 
 　 　 < section >   < secfmt > * < hdrftr > ? < para > + ( \ sect < section > ) ? 
 　 　 关键字 \ sect 标志 着 一个 新节 的 开始 。 < secfmt > 是 一系列 的 节 格式 属性 控制 字 ， 它们 也 可 出现 在 节 的 任何 位置 ( 不仅仅 是 开头 ) ， 每 一节 都 可定义 它 本身 的 页 信息 ( 宽 、 高 、 空白 等 ) 、 页 号 格式 等 ； < hdrftr > 单元 设定 页眉 和 页脚 ； < para > 是 段落 群组 ， 每 一节 的 内容 由 一个 或 多个 段落 组成 。 
 　 　 段落 有 简单 型 和 表格 型 两种 ， 关键字 \ par 标志 着 一个 新 段落 的 开始 。 在 一个 段落 里 ， 可以 定义 段落 的 格式 属性 ， 如 ： 对齐 方式 、 缩排 、 间隔 、 段落 边界 、 底纹 等 。 文档 的 实际 内容 也 出现 在 段落 中 ， 这 包括 字符 正文 、 图片 、 OLE 嵌入 对象 等等 。 每 一种 实质 内容 都 可定义 其 格式 属性 ， 如 ： 对于 字符 正文 ， 我们 可以 定义 粗体 、 斜体 、 下划线 、 底纹 、 背景色 、 字符 色 等 。 
 　 　 总之 ， 我们 可以 看到 ， RTF 格式 描述 除了 文件 头外 ， 其它 内容 的 描述 呈 层次结构 ： 
 文档 → 节 → 段落 → 对象 ( 正文 、 图片 、 OLE 对象 等 ) 
 　 　 前者 包含 后者 ， 前 3 层 主要 是 定义 各种 格式 属性 ， 对象 层 除了 描述 具体 对象 的 属性 外 ， 出现 了 对象 的 实质 内容 。 
 2 　 RTF 阅读器 的 编程 方法 
 　 　 要 在 自己 的 多媒体系统 中 支持 RTF 格式 的 文档 ， 就 必须 自己 编写 相应 的 RTF 阅读器 程序 。 一个 RTF 阅读器 的 开发 必定 要 包含 以下 3 个 基本 步骤 。 
 　 ( 1 ) 分离 RTF 控制 字 与 正文 
 　 　 RTF 控制 字 与 正文 的 分离 比较简单 。 因 所有 的 RTF 控制 字 都 以 反 斜杠 开始 ， 并 以 定界符 结束 ( 上 一节 已 说明 ) ， 所以 ， 很 容易 将 其 与 正文 内容 分开 。 下面 是 该 算法 的 形式 描述 ： 
 　 　 while ( 没有 到达 文件 尾 ) { 
 　 　 ch < -   从文件 读取 一个 字符 ； 
 　 　 switch ( ch ) { 
 　 　 　 case ' { ' ： 
 　 　 　 　 　 保存 RTF 状态 ( 文档 属性 、 节 属性 、 段落 属性 、 字符 属性 、 程序 分析 中间状态 等 ) ； 
 　 　 　 　 　 break ； 
 　 　 　 case ' } ' ： 
 　 　 　 　 　 恢复 RTF 状态 ； 
 　 　 　 　 　 break   ； 
 　 　 　 case ' \ ' ： 
 　 　 　 　 　 RTF   控制 字 语法分析 
 　 　 　 　 　 break ； 
 　 　 　 case 回车 、 换行 ： 
 　 　 　 　 　 break ； 
 　 　 　 default ： 
 　 　 　 　 　 if ( ch 是 西文 ) 
 　 　 　 　 　 　 输出 ch ； 
 　 　 　 　 　 else 
 　 　 　 　 　 　 等 下 一个 ch 共同 组成 汉字 ， 输出 ； 
 　 　 　 } ； / / switch 结束 
 　 　 } ； / / while 结束 
 　 　 　 　 return ; 
 　 ( 2 ) RTF 控制 字 语法分析 
 　 　 这 一步 也 相当 简单 。 一个 RTF 控制 字 要么 是 小写字母 的 字符串 ( 后 可 跟 数字 参数 ) ， 要么 是 一个 非 字母 数字 的 字符 。 下面 是 该 算法 的 形式 描述 ： 
 　 　 ch < - 从文件 读取 一个 字符 ； 
 　 　 if ( 到达 文件 尾 ) return ； 
 　 　 if ( ch 是非 字母 数字 ) { 
 　 　 　 控制 字 语义 翻译 ； 
 　 　 　 return ; 
 　 　 } ; 
 　 　 keyword < -   读取 关键字 ； 
 　 　 if ( 后续 字符 是 ' - ' ) 
 　 　 　 表示 负数 ； 
 　 　 if ( 后续 字符 是 数字 ) 
 　 　 　 Parameter < - 读取 数字 参数 ； 
 　 　 控制 字 语义 翻译 ； 
 　 　 return 
 　 　 ( 3 ) 控制 字 语义 翻译 
 　 　 语义 翻译 是 相当 复杂 的 一步 。 这 不仅仅 是 由于 控制 字 数量 繁多 、 含义 类型 各异 ， 还 由于   RTF   在 描述 不同 但 相关 的 属性 时 在 顺序 上 是 模糊 的 ， 这 就 要求 语法分析 和 语义 翻译 必须 灵活 准确 。 无论 采用 什么 方法 ， 语义 翻译 应 与 前 两个 步骤 相互配合 ， 做到 以下 3 点 ： 
 　 　 1 ) 忽略 你 不 准备 翻译 的 控制 字 
 　 　 如果 不 处理 好该 问题 ， 则 RTF 阅读器 遇到 不 " 懂 " 的 控制 字 就 很易 崩溃 。 事实上 ， 要 面面俱到 地 翻译 全部 控制 字 是 很 困难 的 ， 对于 具体 应用 也 是 不必要 的 。 Microsoft 也 在 不断 增加 新 的 控制 字 ， 正确 的 忽略 可以 使 阅读器 兼容 于 不同 程序 产生 的 RTF 文档 ， 也 可 兼容 于 RTF 以后 发展 的 版本 。 
 　 　 2 ) 永远 要 理解 控制 字 \ * 
 　 　 该 控制 字 引入 了 一个 目标 单元 ， 它 不 属于 文档 的 一部分 ， 它 告诉 RTF 阅读器 ： 如果 它 不 识别 下 一个 控制 字 ， 它 应该 跳过 整个 封闭 的 群组 ( { … } ) 。 
 　 　 3 ) 跳过 忽略 的 RTF 字符 时要 注意 二进制 数据 的 出现 
 　 　 在 RTF 中 跳 过 一个 群组 的 简单 方法 是 保持 一个 动态 计数器 ， 以 记录 RTF 流中 遇到 的 大括号 ： 遇到 " { " 时 ， 计数器 加 1 ； 遇到 " } " 时 ， 计数器 减 1 ， 计数器 为 负时 ， 表明 到 了 群组 的 结尾 。 不幸 的 是 ， 当 RTF 文件 包含 \ bin 控制 字时 ， 这种 方法 就 无效 了 。 阅读器 必须 检查 每 一个 遇到 的 控制 字 是否是 \ bin   ， 若 是 ， 先要 跳 过 它 说明 的 所有 字节 ( 我们 目前 不 准备 支持 二进制 图片 数据 ) ， 然后 才能 恢复 扫描 大括号 。 
 　 　 这里 我们 简单 介绍 一种 " 表格 驱动 " 的 翻译 方法 ： 首先 ， 建立 一个 控制 字 描述 表 和 一个 属性 描述 表 。 前者 将 控制 字 翻译 为 属性 索引 ， 并 得到 该 属性 的 省 缺值 、 控制 字 类型 ( 属性 、 特殊字符 、 目标 单元 、 等 ) 等 信息 。 然后 通过 属性 索引 在 属性 描述 表中查 到 属性 所在 的 结构 以及 在 结构 中 的 偏移量 、 属性 值 的 类型 ( 字节 、 字 、 需 特殊 处理 ) 等 。 有 了 这些 信息 ， 程序 就 能 正确 翻译 控制 字 并 将 它 的 值 存到 指定 结构 的 指定 位置 。 
 　 　 以上 3 个 基本 步骤 完成 后 ， 我们 已经 将 正文 与 控制 分 离开 ， 并 能 用 一定 的 结构 跟踪 记录 不断 变化 的 各种 属性 。 在 网址 ： http : / / www . Sunpack . com / RTF / Webdocs / RTF - Spec / RTF1 - 4 . htm 处 ， 你 可以 从 附录 A 得到 实现 这 3 步 的 示意性 C 程序 。 我们 已经 对 这部分 程序 进行 了 更正 ( 有 部分 小 错误 )   、 扩充 和 改进 ： ① 使 其 支持 更 多 的 控制 字 和 语法 ， 支持 中文 ； ② 扩充 了 各种 排版 算法 ， 完成 了 另 一个 重要 步骤 ： 根据 属性 将 正文 排版 输出 ； ③ 用 C++ 中类 的 概念 封装 了 该 解释器 ， 更 便于 使用 和 进一步 扩充 ； ④ 将 该 解释器 并入 我们 开发 的 " 图文 特技 软件包 " ， 进而 用于 我们 的 多媒体 产品 。 
 作者简介 ： 余阳 　 男 ， 31 岁 ， 工程师 ， 主研 多媒体 ， 网络 技术 
 作者 单位 ： 中山大学 电子机械 研究 中心   广州 510275 
 参考文献 
 　 1 　 Microsoft   Product   Support   Services , Rich   Text   Format ( RTF ) Specification   and   Sample   RTF   Reader   Program , http : / / www . Sunpack . com / RTF / Webdocs / RTF - Spec / RTF1 - 4 . htm 
 　 2 　 HellerM 著 . 朱鸿隽译 . Windows 高级 程序设计 , 北京 ： 电子 工业 出版社 ， 1994 - 11 
 　 3 　 姚玉明 ， 胡晓峰   .     超媒体 系统 中 文本 媒体 的 处理 方法 及 表现 . 全国 第四届 多媒体技术 学术会议 论文集 ： 198 - 202 
 收稿 日期 : 1998 - 02 - 23 
