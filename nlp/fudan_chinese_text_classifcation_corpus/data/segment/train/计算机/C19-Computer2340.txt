计算机 研究 与 发展 
 JOURNAL   OF   COMPUTER   RESEARCH   AND   DEVELOPMENT 
 1999 　 Vol.36 　 No.7 　 P.842 - 847 
 
 
 
 一种 基于 状态 迁移 图 的 性能 评价 模型 
 刘晓冬 　 李莲治 　 郭福顺 
 摘 　 要 ： 性能 评价 在 计算机系统 的 选型 、 改进 与 设计 中是 至关重要 的 . 使用 模拟 模型 和 队列 解析 模型 可 对 计算机系统 的 性能 进行 分析 . 但是 构造 和 使用 模拟 模型 的 费用 较 高 . 而 队列 解析 模型 又 要求 对系统 作较 多 的 简化 和 假设 . 针对 以上 模型 的 不足 ， 文中 基于 图论 和 自动机 理论 提出 了 一种 新 的 基于 状态 迁移 图 的 计算机系统 性能 评价 模型 ， 并 给出 了 一个 基于 状态 迁移 图 模型 求解 实时 系统 响应 时间 的 算法 . 经过 证明 和 时间 复杂性 分析 ， 该 算法 是 正确 而 有效 的 . 
 关键词 ： 性能 评价 ， 状态 迁移 图 ， 模型 ， 算法 
 分类号 ： TP302 
 AN   PERFORMANCE   EVALUATION   MODEL   BASED   ON 
 FINITE   STATE   TRANSITION   GRAPH 
 LIU   Xiao - Dong 
 （ Department   of   Computer   Science   and   Engineering ,   Harbin   Institute   of   Technology ,   Harbin   150001 ） 
 LI   Lian - Zhi 
 （ Department   of   Computer   Science   and   Engineering ,   Harbin   Institute   of   Technology ,   Harbin   150001 ） 
 GUO   Fu - Shun 
 （ Department   of   Computer   Science   and   Engineering ,   Harbin   Institute   of   Technology ,   Harbin   150001 ） 
 Abstract ： Performance   evaluation   is   important   in   selection ,   improvement ,   and   design   of   computer   systems .   Simulation   and   queue   model   can   be   used   to   analyze   the   performance   of   computer   systems .   It   is   expensive   to   create   and   use   simulation   model .   Queue   model   needs   more   hypothesis   and   simplification .   Aiming   at   the   shortcomings   of   the   two   models ,   a   finite   state   transition   graph   ( FSTG )   model   based   on   chart   and   automaton   theory   is   presented   to   analyze   performance   of   computer   systems   in   this   paper .   An   algorithm   based   on   FSTG   for   solving   the   response   time   of   real - time   systems   is   also   presented .   By   proving   and   complexity   analysis ,   the   algorithm   is   correct   and   effective . 
 Key   words ： performance   evaluation ，   state   transition   graph ，   model ，   algorithm ▲ 
 1 　 引言 
 　 　 性能 评价 就是 要 对 指定 的 一个 计算机系统 或 一类 计算机系统 求出 其 性能指标 ［ 1 ］ . 性能 评价 在 计算机系统 的 选型 、 改进 与 设计 中 具有 重要 的 作用 . 一般来说 ， 首先 对要 评价 的 计算机系统 建立 一个 适当 的 模型 ， 然后 求 出 模型 的 性能指标 ， 以便 对系统 进行 评价 . 
 　 　 一种 常用 的 模型 是 队列 模型 ［ 2 ］ . 它 是 以 排队 论 和 随机 过程 论 作为 理论 基础 的 . 将 计算机系统 的 各种 部件 看作 “ 服务员 ” ， 把 需要 处理 的 各种 作业 当作 “ 顾客 ” ， “ 顾客 ” 排队 等待 “ 服务员 ” 为 其 完成 某种 服务 . 队列 模型 一般 需要 对系统 作较 多 的 数学 简化 与 假设 （ 如 假设 “ 顾客 ” 总体 与 队列 长度 是 无限 的 ） ， 因此 其 详细 程度 较差 ， 从而 影响 了 结果 精度 . 此外 ， 对于 并行 和 分布式 等 大型 复杂 系统 ， 队列 模型 难以 准确 而 全面 地 描述 系统 行为 . 
 　 　 可以 构造 计算机系统 的 模拟 模型 ， 使 之 模拟 真实 系统 ， 以 与 真实 系统 同样 的 方式 运行 ， 通过 对模型 进行 测量 从而 推断出 系统 性能 . 模拟 模型 是 通过 一个 相当 大 的 程序 来 实现 的 ， 因此 其 成本 和 费用 是 较 高 的 . 
 　 　 针对 以上 模型 的 不足 ， 本文 提出 了 一个 新 的 计算机系统 性能 评价 模型 — — 状态 迁移 图 模型 .   它 以图 论 和 自动机 理论 作为 理论 基础 ， 能够 跟踪 系统 的 各种 工作 轨迹 ， 记录 运行 期间 系统 所处 的 各种 状态 以及 状态 的 改变 ， 可以 根据 基于 图论 的 形式化 算法 快速 准确 地 计算 出所 需 的 性能指标 . 本文 首先 对 该 模型 及其 组合分析 给出 了 语法 和 语义 定义 ， 其次 指出 组合 时 可能 产生 的 状态 爆炸 问题 并 提出 用 两级 等价 折迭 技术 解决 该 问题 . 最后 给出 了 一个 基于 该 模型 的 算法 以 求解 实时 系统 的 响应 时间 . 
 2 　 模型 定义 
 　 　 定义 1 .   一个 进程 是 一个 2 元组 P = ( V ,   E ) . 其中 V 是非 空 状态 集 . E 是 V 上 的 二元 迁移 关系 集 . P 对应 一个 有向图 ， V 中 的 状态 对应 着 结点 ， v , w ∈ V ， 如果 ( v , w ) ∈ E ， 则 在 有向图 中 从 v 到 w 存在 着 一条 弧 . 称 P 为 简单 状态 迁移 图 . 
 　 　 定义 2 .   设 q1 ,   q2 , … , qn 是 P 中 的 一个 状态 序列 ， 如果 i ≥ 1 ， ( qi , qi + 1 ) ∈ T ， 则 称 该 序列 为 一条 路径 . 
 　 　 定义 3 .   一个 时间 状态 迁移 图是 一个 8 元组 G = ( N , ninit , X , Σ , C , T , A , I ) . 其中 ： 
 　 　 ( 1 )   N 是 有 穷 结点 集合 ； 
 　 　 ( 2 )   ninit 是 初始 结点 ； 
 　 　 ( 3 )   X 是 有 穷 时钟 集合 ； 
 　 　 ( 4 )   Σ 是 有 穷 事件 集合 . τ ∈ Σ 是 一 特殊 事件 ， 表示 进程 的 阻塞 ； 
 　 　 ( 5 )   C = { y | y 是 形如 x ≤ r , x ≥ r 的 原子公式 ， 且 r ∈ R , x ∈ X } ； 
 　 　 ( 6 )   T 是 迁移 弧 集合 . TN × C × Σ × 2X × N ； 
 　 　 ( 7 )   AN × 2T . 一个 结点 对应 的 所有 可能 的 活动 集合 ； 
 　 　 ( 8 )   I ： N → C 是 在 每 一个 结点 上 的 时间 限制 . 
 　 　 函数 I 为 每 一个 结点 n ∈ N 赋 一个 时间 限制 ， 称之为 不 变量 . 只有 当前 的 时钟 满足 I ( n ) 时 ， 系统 的 控制 才能 停留 在 该 结点 ， 不 变量 都 是 形如 x ≤ r 这样 的 原子公式 的 并 . 对于 一个 迁移 tr = ( n1 , c , e , Y , n2 ) ∈ T ， 如果 当前 的 结点 n1 满足 时间 限制 c ， 那么 系统 能够 发生 该 迁移 . 作为 迁移 发生 的 结果 ， 系统 完成 事件 e ， 重设 Y 中 的 所有 时钟 值为 0 ， 并 立即 移到 下 一 结点 n2 . 
 　 　 定义 4 .   设 G1 , G2 , … , Gn 是 n 个 进程 的 时间 状态 迁移 图 . 其中 Gi = ( Ni , ninit , Xi , Σ i , Ci , Ti , Ai , Ii ) .   由 这 n 个 进程 构成 的 并发 系统 的 时间 状态 迁移 图为 G = G1 × G2 × … × Gn = ( N , ninit , X , Σ , C , T , A , I ) . 其中 ： 　 　 
 　 　 
 
 　 　 在 定义 语义 概念 前 ， 先 给出 一些 标记 . 对于 一个 迁移 tr = ( n1 , c , e , Y , n2 ) ， 让 source ( tr ) 代表 源 结点 n1 ， target ( tr ) 代表 目标 结点 n2 ,   cond ( tr ) 代表 发生 条件 c ， event ( tr ) 代表 事件 e ， 以及 reset ( tr ) 代表 时钟 集合 Y . 并且 让 v , v1 , … 代表 时钟 值 . 
 　 　 定义 5 .   一个 时间 状态 迁移 图 G = ( N , ninit , X , Σ , C , T , A , I ) ） ， 称 一个 有 穷 或 无穷 序列 为 一个 执行 ， 它 具有 如下 属性 ： 
 　 　 ( 1 )   n0 = ninit , v0 ( x ) = 0 ( x ∈ X ) ， t0 = 0 ； 
 　 　 ( 2 )   ( vi + r ) 满足 I ( ni ) ， i ≥ 0 并且 0 ≤ r ≤ ( ti + 1 - ti ) ； 
 　 　 ( 3 )   对 每 一个 i ≥ 1 ， 在 T 中 存在 着 从 ni - 1 到 ni 的 迁移 tri ， 使得 
 　 　 　 　 ( vi - 1 + ti - ti - 1 ) 满足 Cond ( tri ) 且 
 　 　 　 　 
 　 　 ( 4 )   ti ≤ ti + 1 ， i ≥ 0 . 
 　 　 定义 6 .   对于 一个 执行 ， 其 对应 的 行为 是 ： 〈 ( event ( tr1 ) ， t1 ) , ( event ( tr2 ) ， t2 ) , ( event ( tr3 ) ， t3 ) , … 〉 . 
 3 　 状态 爆炸 问题 
 　 　 尽管 单个 进程 的 时间 状态 迁移 图 模型 尺寸 并 不是 很大 ， 但是 由 多个 进程 构成 的 并发 系统 的 时间 状态 迁移 图 模型 的 尺寸 将 迅速 膨胀 . 例如 ， 由 n 个 包含 m 个 状态 的 进程 构成 的 并发 系统 的 时间 状态 迁移 图 模型 ， 其 包含 的 状态 数有 可能 高达 mn . 这种 系统 的 状态 空间 尺寸 随 进程 数 指数 增长 的 现象 称之为 状态 爆炸 . 这个 问题 在 实时 系统 中 变得 尤为 严重 ， 因为 实时 系统 的 无 限制 的 时间 值 甚至 会 引起 无穷的 状态 空间 . 为此 本 节 提出 了 两级 等价 折迭 技术 解决 该 问题 ， 从而 使 对 有 穷 状态 迁移 图 模型 的 组合分析 成为 可能 . 
 　 　 定义 7 .   一个 历史 是 指到 当前 结点 为止 系统 已经 执行 过 的 （ 迁移 ， 时刻 ） 对 的 序列 . 
 　 　 对于 一个 时间 状态 迁移 图 G ， 不妨 设 execs ( G ) 为 所有 执行 的 集合 ， steps ( G ) 为 执行 中 所有 步 的 集合 . 即 .   形式 地 ， 我们 给出 如下 定义 . 
 　 　 定义 8 .   已知 一个 时间 状态 迁移 图 G = ( N , ninit , X , Σ , C , T , A , I ) . 其 相应 的 历史 状态 迁移 图为 H = ( S , S0 , L , TR ) 其中 ： 
 
 　 　 对于 一个 历史 h = < ( tr0 , t0 ) , ( tr1 , t1 ) , ( tr2 , t2 ) , … ( trk , tk ) > . 令 untimed ( h ) = < tr0 , tr1 , tr2 , … trk > . 对于 状态 s = ( n , h ) 令 untimed ( s ) = < n , untimed ( h ) > . 形式 地 定义 历史 等价关系 如下 . 
 　 　 定义 9 .   一个 二元关系 ρ hS × S ， 如果 对 ( s1 , s2 ) ∈ ρ h ， 均 有 untimed ( s1 ) = untimed ( s2 ) . 则 称 ρ h 为 历史 等价关系 . 
 　 　 定义 10 .   设 H = ( S , S0 , L , TR ) , H ′ = ( S ′ , S ′ 0 ， L ′ , TR ′ ) ， f : H → H ′ 是 一个 映射 . 它 具有 如下 属性 ： 
 　 　 ( 1 )   ( n , h ) ∈ S , f ( n , h ) = ( n , untimed ( h ) ) ； 
 　 　 ( 2 )   对 ( ninit , < ( tr0 , 0 ) > ) ∈ S0 　 f ( ninit , < ( tr0 , 0 ) > ) = ( ninit , < tr0 > ) ; 
 　 　 ( 3 )   ( tr , t ) ∈ L , f ( tr , t ) = tr ; 
 　 　 ( 4 )   ( s1 , ( tr , t ) , s2 ) ∈ TR , f ( s1 , ( tr , t ) , s2 ) = ( untimed ( s1 ) , tr , untimed ( s2 ) ) , 称 f 是 历史 等价 映射 . 
 　 　 不难 验证 f 是 折迭 映射 . 经 历史 等价 折迭 后 的 状态 迁移 图 ， 其 状态 数已 大大减少 ， 但 状态 空间 还是 很大 ， 甚至 仍 有 可能 包含 无穷 状态 . 为此 ， 需要 对 其 进一步 化简 . 
 　 　 定义 11 .   将来 是 指 从 当前 状态 出发 ， 将要 执行 的 迁移 序列 . 
 　 　 定义 12 .   已知 H = ( S , S0 , L , TR ) ， 定义 一个 二元关系 ρ fS × S ， 如果 ( s1 , s2 ) ∈ ρ f 则 有 ： 
 　 　 ( 1 )   当 ( s1 , tr , s ′ 1 ) ∈ TR 时 ， 那么 存在 s ′ 2 ， 使 ( s2 , tr , s ′ 2 ) ∈ TR 并且 ( s ′ 1 , s ′ 2 ) ∈ ρ f ； 
 　 　 ( 2 )   当 ( s2 , tr , s ′ 2 ) ∈ TR 时 ， 那么 存在 s ′ 1 ， 使 ( s1 , tr , s ′ 1 ) ∈ TR 并且 ( s ′ 1 , s ′ 2 ) ∈ ρ f ， 称 二元关系 ρ f 为 将来 等价关系 . 
 　 　 可以 考虑 将 一个 将来 等价 类内 的 所有 满足 将来 等价关系 的 状态 合并 成 一个 状态 以 达到 化简 状态 空间 的 目的 . 形式 地 ， 给出 如下 定义 . 
 　 　 定义 13 .   设 H = ( S , S0 , L , TR ) 是 历史 等价 状态 迁移 图 ， F = ( Sf , S0f , Lf , TRf ) 是 一 状态 迁移 图 ， 定义 一个 映射 g : H → F . 它 具有 如下 属性 ： 
 　 　 ( 1 )   s ∈ S , g ( s ) = equiv ( s ) ∈ Sf . 其中 equiv ( s ) 表示 s 的 将来 等价 类 ； 
 　 　 ( 2 )   s ∈ S0 , g ( s ) = equiv ( s ) ∈ S0f ； 
 　 　 ( 3 )   tr ∈ L , g ( tr ) = tr ∈ Lf ； 
 　 　 ( 4 )   ( s1 , tr , s2 ) ∈ TR , g ( s1 , tr , s2 ) = ( g ( s1 ) , tr , g ( s2 ) ) ∈ TRf ， 则 称 g 为 将来 等价 映射 . 
 　 　 不难 验证 g 是 折迭 映射 . 经 将来 等价 折迭 后 的 状态 迁移 图 ， 其 状态 数 又 进一步 减少 ， 并且 形成 了 有 穷 状态 迁移 图 . 
 　 　 所以 ， 虽然 组合 时有 可能 产生 状态 爆炸 问题 ， 但是 先后 经过 历史 与 将来 两级 等价 折迭 映射 后 ， 在 保持 语义 信息 不变 的 前提 下 ， 可以 将 无穷 状态 迁移 图 转变 为 有 穷 状态 迁移 图 并且 使 状态 空间 尺寸 大大 化简 . 
 4 　 一个 应用 实例 
 　 　 实时 系统 是 能 及时 响应 外部 发生 的 随机 事件 ， 并 以 足够 快 的 速度 完成 对 事件 的 处理 的 计算机 应用 系统 ［ 3 ］ . 响应 时间 是 指 从 接收 到 外部 事件 到 完成 处理 后 输出 响应 之间 的 延迟时间 . 它 是 实时 系统 的 重要 性能指标 之一 . 利用 上述 定义 与 映射 可以 构造 出 实时 系统 的 有 穷 时间 状态 迁移 图 ， 为了 求解 响应 时间 ， 需要 进一步 构造 出 累加 状态 迁移 图 .   
 　 　 定义 14 .   设 GL = ( QL , IL , FL , W , TL ) 是 一有 穷 状态 迁移 图 . 其中 ： QL 为 状态 集合 ； ILQL 为 初始状态 集合 ； FLQL 为 终止 状态 集合 ； W 为 标号 集合 . 标号 代表 迁移 成本 （ 如 时间 ） ； TLQL × W × QL ， 称 GL 为 成本 状态 迁移 图 . 易知 ， 成本 状态 迁移 图 可以 方便 地 由 有 穷 时间 状态 迁移 图 转化 而成 . 根据 它 可以 进一步 构造 出 累加 状态 迁移 图 . 
 　 　 定义 15 .   设 Ga = ( Qa , I , F , Ta ) 是 一有 穷 状态 迁移 图 . 其中 ： Qa = QL × W 为 状态 集合 ； I = { ( q , 0 ) | q ∈ IL   } 为 初始状态 集合 ； F = { ( q , t ) | q ∈ FL , t ∈ W } 为 终止 状态 集合 ； TaQa × Qa ， ( ( q , t ) ,   ( q ′ , t ′ ) ) ∈ Ta 当且 仅 当   ( q , w , q ′ ) ∈ TL 且 t ′ = t + w ， 称 Ga 为 累加 状态 迁移 图 . 
 　 　 定义 16 .   设 RQa 是 Ga 中 的 一个 状态 子集 ， 称 N ( R ) = { r ′ |   ( r ,   r ′ ) ∈ Ta ,   r ∈ R } 为 R 的 后继 状态 集 . 称 NF = Qa - F 为 非 终止 状态 集 . 
 　 　 利用 上述 定义 构造 出 一个 实时 系统 的 累加 状态 迁移 图 Ga 后 ， 在 Ga 中 不妨 设 标号 代表 状态 迁移 的 流逝 时间 ， I 包含 代表 发出 需求 时 的 状态 ， F 包含 代表 应答 时 的 状态 . 显然 ， 最快 响应 时间 即 为 从 I 出发 到 F 终止 的 所有 路径 上 的 流逝 时间 的 最小值 . 下面 给出 求解 该 最小值 的 算法 . 
 　 　 求解 实时 系统 中 最快 响应 时间 的 基于 状态图 的 算法 如下 ： 
 　 　 输入 ： Ga ， I ， F ， NF 
 　 　 输出 ： 最快 响应 时间 Tmin 
 　 　 BEGIN 
 　 　 ( 1 )   Tmin = ∞ ; 
 　 　 ( 2 )   R = I ; 
 　 　 ( 3 )   LOOP 
 　 　 ( 4 )   RF = R ∩ F ; 
 　 　 ( 5 )   IF   RF ≠   THEN 
 　 　 ( 6 )   BEGIN 
 　 　 ( 7 )   M = min { t | ( q , t ) ( RF } ; 
 　 　 ( 8 )   IF   M < Tmin   THEN   Tmin = M ; 
 　 　 ( 9 )   END ; 
 　 　 ( 10 )   R ′ = R ∩ NF ; 
 　 　 ( 11 )   IF   R ′ =   THEN   RETURN   ( Tmin ) ; 
 　 　 ( 12 )   R = N ( R ′ ) ; 
 　 　 ( 13 )   ENDLOOP 
 　 　 END . 
 　 　 其中 LOOP 为 无限 循环 语句 . min 求 给定 集合 中 的 最小值 . 代表 空集 . R ， R ′ 均 为 状态 子集 . 下面 给出 该 算法 的 正确性 证明 . 
 　 　 引理 1 .   在 上述 算法 中 ， 第 i 次 循环 前 ， ( q ,   t ) ∈ R   当且 仅 当 （ q ,   t ） 是从 I 出发 的 一条 路径 上 的 第 i 个 状态 ， t 为 到达 该 状态 时所 花费 的 总 流逝 时间 ， 并且 该 路径 只有 最后 一个 状态 有 可能 是 终止 状态 . 
 　 　 证明 .   用 数学 归纳法 . 初始 时 ， 即 第 i = 1 次 循环 前 ， 由 算法 第 ( 2 ) 步 R = I 及 定义 15 易知 命题 成立 . 假设 第 i = k - 1 次 循环 前 命题 成立 . 当 第 i = k 次 循环 之前 ， 即 算法 进行 到 第 k - 1 次 循环 时 ， 由 算法 第 ( 10 ) 步 R ′ = R ∩ NF ， 定义 15 及 归纳 假设 可知 ： ( q ′ , t ′ ) ∈ R ′ ， ( q ′ , t ′ ) 是从 I 出发 的 一条 路径 上 的 第 k - 1 个 状态 ， t ′ 为 到达 该 状态 时所 花费 的 总 流逝 时间 ， 并且 该 路径 上 没有 终止 状态 . 当 执行 到 算法 第 ( 12 ) 步 R = N ( R ′ )   时 ， 根据 定义 15 及 定义 16 可知 ： R 是 R ′ 的 后继 状态 集 ， 所以 ( q , t ) ∈ R ， ( q , t ) 是从 I 出发 的 一条 路径 上 的 第 ( k - 1 ) + 1 = k 个 状态 ， t 为 到达 该 状态 时所 花费 的 总 流逝 时间 ， 并且 该 路径 上 只有 最后 一个 状态 有 可能 是 终止 状态 . 所以 命题 成立 . 综上所述 ， i ≥ 1 ， 命题 成立 . 
 证毕 . 
 　 　 引理 2 .   在 上述 算法 中 ， 第 i 次 循环 前 ， Tmin 是从 I 到 F 的 所有 不到 i 个 状态 的 路径 上 的 流逝 时间 的 最小值 . 如果 不 存在 这样 的 路径 的话 ， Tmin 为 无穷大 . 
 　 　 证明 .   算法 第 ( 1 ) 步 Tmin = ∞ . 命题 成立 . 第 i 次 循环 前 ， 即 第 i - 1 次 循环 时 ， 由 算法 第 ( 4 ) 步 RF = R ∩ F 可知 ： ( q , t ) ∈ RF ( q , t ) ∈ R 且 ( q , t ) ∈ F . 另外 ， 由 引理 1 的 证明 过程 可知 ： 第 i - 1 次 循环 时 ， 只有 执行 到 算法 第 ( 12 ) 步时 R 中 的 状态 才 是从 I 出发 的 一条 路径 上 的 第 i 个 状态 ， 所以 在 第 ( 4 ) 步时 R 中 的 状态 只是 从 I 出发 的 一条 路径 上 的 第 i - 1 个 状态 . 再 由 定义 15 可知 ： ( q , t ) 是从 I 出发 的 一条 路径 上 的 第 i - 1 个 状态 且 是 终止 状态 . 并且 t 为 到达 该 状态 时 的 总 流逝 时间 . 算法 第 ( 7 ) 步求 所有 这样 的 t 的 最小值 M . 算法 第 ( 8 ) 步 将 该 最小值 与 Tmin 比较 ， 如果 M < Tmin ， 则 令 Tmin = M . 这样 就 确保 了 Tmin 总是 保持 所有 从 I 到 F 的 不到 i 个 状态 的 路径 上 的 最小 流逝 时间 . 因此 ， 引理 2 成立 . 
 证毕 . 
 　 　 定理 1 .   上述 算法 是 正确 的 . 
 　 　 证明 .   第 i 次 循环 时 ， 根据 算法 第 ( 4 ) 步 RF = R ∩ F 及 引理 1 的 证明 过程 可知 ： RF 中 包含 了 起 始于 I 的 具有 i 个 状态 的 路径 上 的 终止 状态 . 如果 RF ≠ ， 那么 将 执行 算法 第 ( 6 ) ～ ( 9 ) 步 ， 根据 引理 2 ， Tmin 保存 了 当前 所有 已 到达 终止 状态 的 路径 上 流逝 时间 的 最小值 . 算法 第 ( 10 ) 步 R ′ = R ∩ NF 使 R ′ 中 包含 了 所有 起 始于 I 的 路径 上 的 第 i 个 非 终止 状态 . 如果 R ′ = ， 表示 所有 路径 均 已 到达 终止 状态 ， 那么 此时 Tmin 就 保存 了 所有 从 I 到 F 的 路径 上 的 流逝 时间 的 最小值 ， 根据 定义 ， 该 Tmin 即为 最快 响应 时间 . 算法 第 ( 11 ) 步 确保 将 该 Tmin 返回 . 
 　 　 另外 该 算法 是 可 终止 的 . 因为 对 任何 有穷 状态 迁移 图 来说 ， 从 I 到 F 的 所有 路径 均 可 认为 是 有 穷步 的 . 另外 由 算法 第 ( 10 ) 、 ( 11 ) 步 可知 ： 该 算法 只 考虑 到达 终止 状态 的 路径 一次 . 因此 ， 经过 有 穷步 之后 ， 算法 将 终止 . 　 　 
 证毕 . 
 　 　 不妨 设 系统 中有 N 个 状态 . 根据 加法 规则 和 乘法 规则 ［ 4 ］ ， 可以 计算 出 整个 算法 的 时间 复杂性 为 O （ N2 ） . 
 5 　 结论 
 　 　 针对 模拟 模型 与 队列 模型 的 不足 ， 本文 提出 了 一种 新 的 基于 状态 迁移 图 的 计算机系统 性能 评价 模型 ， 它 是 以图 论 和 自动机 理论 为 基础 ， 通过 形式化 符号计算 求解 计算机系统 的 各项 性能指标 ， 因此 ， 它 比 模拟 模型 具有 更 低 的 开销 与 成本 . 另外 ， 它 可以 跟踪 系统 的 真实 工作 轨迹 ， 准确 地 反映 状态 变化 对系统 性能 的 影响 ， 计算 时 不 强加 任何 限制 ， 因此 ， 能够 获得 比 队列 模型 更 准确 的 数据 . 基于 状态 迁移 图 模型 ， 文中 提出 了 一个 求解 实时 系统 最快 响应 时间 的 算法 . 经 证明 和 复杂性 分析 ， 该 算法 是 正确 而 有效 的 . ■ 
 作者简介 ： 刘晓冬 ， 男 ， 1971 年生 ， 博士 ， 主要 研究 领域 为 实时 微内核 分布式 操作系统 、 性能 　 　 　 　 　 　 评价 、 工程 数据库 . 
 　 　 　 　 　 李莲治 ， 女 ， 1935 年生 ， 教授 ， 主要 研究 领域 为 分布式 操作系统 、 软件 可 重用 . 
 　 　 　 　 　 郭福顺 ， 男 ， 1932 年生 ， 教授 ， 主要 研究 领域 为 实时操作系统 、 知识库 、 人工 智 　 　 　 　 　 　 能 、 软件 可 重用 . 
 作者 单位 ： 刘晓冬 （ 哈尔滨工业大学 计算机科学 与 工程系 　 哈尔滨 　 150001 ） 
 　 　 　 　 　 李莲治 （ 哈尔滨工业大学 计算机科学 与 工程系 　 哈尔滨 　 150001 ） 
 　 　 　 　 　 郭福顺 （ 哈尔滨工业大学 计算机科学 与 工程系 　 哈尔滨 　 150001 ） 
 参考文献 ： 
 ［ 1 ］ 吴 立德 等 .   计算机系统 性能 评价 .   上海 :   科学技术 出版社 , 1986 
 　 　 　 ( Wu   Lide   et   al .   Performance   Evaluation   for   Computer   Systems ( in   Chinese ) .   Shanghai :   Science   &   Technology   Press ,   1986 ) 
 ［ 2 ］ Stallings   W .   Operating   Systems :   Internals   and   Design   Principles .   Beijing :   Tsinghua   University   Press ,   1998 
 ［ 3 ］ 袁由光 .   实时 系统 中 的 可靠性 技术 .   北京 ：   清华大学出版社 ,   1995 
 　 　 　 ( Yuan   Youguang .   The   Reliability   Techniques   in   Real - Time   Systems ( in   Chinese ) .   Beijing :   Tsinghua   University   Press ,   1995 ) 
 ［ 4 ］ 郭福顺 ,   王晓芬 ,   李莲治 .   数据结构 .   大连 ：   大连理工大学 出版社 ,   1998 
 　 　 　 ( Guo   Fushun ,   Wang   Xiaofen ,   Li   Lianzhi .   Data   Structure ( in   Chinese ) .   Dalian :   Dalian   University   of   Science   &   Technology   Press ,   1998 ) 
 收稿 日期 ： 1998 - 11 - 10 
 修稿 日期 ： 1999 - 02 - 08 
