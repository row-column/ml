计算机 应用 研究 
 APPLICATION   RESEARCH   OF   COMPUTERS 
 2000   Vol.17   No.3   P.24 - 26 
 
 
 
 
 实现 IPv4 网络 向 下一代 IPv6 网络 迁移 的 通用 隧道 方法 
 陆魁军 
 摘 　 要 ： 隧道 技术 是 实现 IPv4 网络 向 IPv6 网络 平滑 迁移 的 有效 方法 ， 论述 了 在 配置 型 隧道 及 自动 型 隧道 中 所 使用 的 一般性 技术 思想 ， 提出 了 在 使用 IPv4 隧道 传输 IPv6 数据 报时 可能 遇到 的 问题 及 相应 解决 方法 。 
 关键词 ： IPv4 网络   IPv6   隧道   数据 报 
 　 　 自 90 年代 以来 ， Internet 的 网络 规模 以 爆炸性 的 速度 持续增长 ， 从而 造成 IPv4 的 地址 日益 短缺 。 在 这样 的 环境 下 ， IETF 在 90 年代 中期 推出 了 第 6 版 IP 协议 ? IPv6 。 IPv6 与 IPv4 并 不 兼容 ， 但 它 与 几乎 所有 的 Internet 协议 ( 包括 TCP 、 UDP 、 ICMP 、 OSPF 、 BGP 、 DNS 等 ) 兼容 或 基本 兼容 ， 同时 ， 地址 长度 由 IPv4 的 32bit 增加 到 128bit ( 即 16 字节 ) , 从而 一劳永逸 地 解决 了 IPv4 的 有限 地址 空间 问题 。 尽管 IPv6 与 IPv4 并 不 兼容 ， 我们 还是 可以 利用 适当 的 技术手段 来 建立 基于 IPv4 网络 基础设施 的 IPv6 传输 系统 ， 隧道 技术 就是 架构 这种 IPv6 传输 网络 的 一种 有效 方法 。 
 1 　 IPv6 数据 报 结构 
 　 　 IPv6 数据 报 的 格式 如图 1 所示 。 
 
 图 1 　 IPv6 数据 报 的 格式 
 　 　 在 图 1 中 ， Ver ( 版本 ) 字段 的 值 为 6 ， 表明 这是 IPv6 的 报头 ； Prio ( 优先级 ) 指示 传输 优先级 ， 取值 范围 为 0 ～ 15 ， IPv6 支持 视频 、 音频 等 实时性 较强 的 数据 报 的 传输 ， 这些 数据 报 被 授予 较大 的 值 ， 优先级 较 高 。 
 　 　 Flow   Label ( 流 标号 ) 用于 报源 主机 和 目标 主机 建立 一个 伪 连接 ， 从而 提供 类似 于 虚 电路 的 功能 。 
 　 　 Payload   Length 标明 数据 部分 长度 ( 不 包括 报头 ) ； Hop   Limit ( 路由 段数 上限 ) 字 段 类似 于 IPv4 的 Time   to   Live 字段 ， 每 经过 一个 路由器 本字 段 减 1 。 
 　 　 Next   Header ( 下 一 报头 类型 ) ： 当 存在 扩展 报头 时 ， 本字段 指示 下 一 扩展 报头 ( 而 不是 本报 头 ) 的 类型 ； 否则 指 数据 部分 中 运输 层 协议 的 报头 类型 。 
 　 　 与 IPv4 相比 ， IPv6 要求 所有 主机 或 路由器 支持 576 字节 的 数据 报 ， 对 过长 数据包 ， 中间 路由器 一般 不再 执行 计算 繁琐 且 效率 低下 的 数据 报 分段 工作 ， 而是 直接 丢弃 ， 并 向 报源 主机 发回 ICMP 错误报告 ， 由 报源 主机 分段 并重 发 。 此外 ， 由于 链路层 及 运输 层 往往 计算 校验 和 ， IPv6 省掉 了 IPv4 所 具有 的 校验 和 字 段 ， 省去 耗时 的 校验 和 计算 可 大大提高 路由器 的 转发 速度 。 
 　 　 然而 ， 有些 省掉 的 字 段 偶尔 还有 需要 的 时候 ， 因而 IPv6 引入 了 可选 “ 扩展 报头 ” 的 概念 ， 共有 6 种 扩展 报头 ： Hop - by - hop 选项 、 路由 选项 、 分段 选项 、 鉴别 验证 选项 、 数据 部分 加密传输 选项 、 目标 选项 。 
 　 　 花费 数年 甚至 数十年 时间 构建 起来 的 IPv4 网络 不 可能 一夜之间 全部 废弃 而 更新 为 IPv6 网络 ， 因此 ， 通常 的 做法 是 使用 隧道 技术 ， 利用 IPv4 网络 为 隧道 沟通 IPv6 主机 或 路由器 ， 并 建立 这 类 隧道 型 IPv6 孤岛 ， 图 2 示出 了 这种 基于 IPv4 隧道 的 IPv6 网络 的 一个 例子 ， 这里 大 的 云状 网络 是 IPv6 网络 ， 小 的 云状 网络 是 IPv4 网络 ， IPv4 网络 用作 隧道 连通 IPv6 / IPv4 双 协议 路由器 ， 实现 IPv6 主机 之间 的 数据通信 。 随着 IPv6 网络 的 发展 ， 一些 孤岛 相互连接 而 成为 较大 的 群岛 ， 并 在 最终 全部 互连 成为 IPv6 型 的 Internet 新大陆 。 
 
 图 2 　 利用 IPv4 网络 为 隧 互联 IPv6 主机 或 路由器 
 　 　 以下 几节 就 隧道 实现 的 通用 技术 思想 作 逐一 论述 。 
 2 　 网络 节点 、 地址 、 隧道 分类 
 　 　 IPv6 / IPv4 节点 ： 是 指 实现 了 IPv4 及 IPv6 两种 网络层 协议 的 主机 或 路由器 。 
 　 　 IPv6 节点 ： 指 IPv6 单 协议 节点 或 IPv6 / IPv4 双 协议 节点 。 
 　 　 IPv4 节点 ： 指 IPv4 单 协议 节点 或 IPv6 / IPv4 双 协议 节点 。 
 　 　 兼容 于 IPv4 的 IPv6 地址 ：   16 个 字节 的 IPv6 地址 中 ， 高位 6 个 字 ( 共 96 位 ) 为 全 0 ， 即 0 : 0 : 0 : 0 : 0 : 0 , 低位 32 位则 是 IPv4 地址 。 如下 所示 ： 
 
 　 　 拥有 这 类 地址 的 节点 通常 是 IPv6 / IPv4 节点 ， 反之 ， IPv4 / IPv6 节点 则 不 一定 使用 兼容 于 IPv4 的 IPv6 地址 ， 它 也 可以 使用 单一 IPv6 地址 。 
 　 　 单一 IPv6 地址 ： 高位 6 个 字 ( 96 位 ) 非全 0 的 IPv6 地址 。 
 　 　 基于 IPv4 网络 的 IPv6 隧道 ： 使用 IPv4 数据 报 格式 封装 IPv6 数据 报 ， 如图 3 所示 ， 以便 使用 IPv4 网络 基础设施 来 传送 IPv6 数据 报 。 共有 两种 不同 的 隧道 传送 方法 ： 
 
 图 3 　 IPv6 数据 报至 IPv4 数据 报 的 封装 与 解封 
 　 　 ( 1 ) 配置 型 隧道 传送 方法 ： 当 封装 节点 ( 即 隧道 首 节点 ) 通过 IPv4 隧道 转发 IPv6 数据 报时 ， 隧道 的 尾 节点 IPv4 地址 从 封装 节点 自身 存储 的 配置 信息 中 获取 ， 而 不是 从 数据 报 的 IPv6 目的 地址 中 提取 出来 。 
 　 　 ( 2 ) 自动 型 隧道 传送 方法 ： 当 数据 报 目的 地址 是 IPv4 兼容 的 IPv6 地址 时才 可以 使用 本 方法 。 隧道 首 节点 根据 IPv6 数据 报 头部 的 IPv6 目的 地址 ( 其中 包含 IPv4 地址 ) 决定 隧道 的 尾 节点 IPv4 地址 ， 即 ： IPv6 地址 去掉 其 高位 96 位后 剩下 的 IPv4 地址 。 
 3 　 IPv6 / IPv4 节点 地址 配置 
 　 　 IPv6 / IPv4 节点 既能 与 IPv4 节点 进行 IPv4 格式 数据 报 通信 ， 又 能 与 IPv6 节点 进行 IPv6 格式 的 数据 报 通信 。 同时 ， IPv6 / IPv4 节点 具有 IPv4 及 IPv6 双重 IP地址 。 这 两个 地址 可以 是 无关 的 ， 也 可以 是 相关 的 ( 即 兼容 于 IPv4 的 IPv6 地址 ) 。 使用 自动 型 地址 配置 方法 的 节点 必须 使用 兼容 于 IPv4 的 IPv6 地址 ( 相关 型 地址 ) ， 该 单个 IPv6 地址 具有 一址 两用 的 功能 。 
 　 　 IPv6 / IPv4 节点 可以 使用 下述 方法 来 获得 其 IPv6 地址 ： 
 　 　 ( 1 ) 无 状态 IPv6 地址 配置 机制 。 
 　 　 ( 2 ) 用于 IPv6 的 DHCP 协议 。 
 　 　 ( 3 ) 当 使用 自动 型 隧道 传送 方法 时 ， 可以 先 使用 IPv4 的 地址 获取 机制 ， 如 BOOTP 、 DHCP 、 RARP 等 协议 来 获得 其 IPv4 地址 ， 然后 通过 添加 高位 96 位 0 来 映射 为 IPv6 地址 。 本 方法 在 尚未 部署 IPv6 路由器 及 地址 配置 服务器 的 环境 下 显得 特别 有用 。 
 4 　 两种 隧道 传送 方法 共用 的 隧道 机制 
 　 　 用 IPv4 格式 封装 IPv6 数据 报时 ， 封装 节点 ( 即 隧道 首 节点 ) 首先 需要 加上 一个 IPv4 报头 ， 除此之外 ， 封装 节点 还 需 处理 一些 更 复杂 的 事情 ： 
 　 　 ( 1 ) 决定 在 什么 情况 下 进行 数据 报 分段 ， 什么 情况 下 报告 “ 数据 报太长 ” 的 “ ICMP 错误 ” 报文 给 数据 报 的 报源 节点 。 
 　 　 ( 2 ) 如何 把 隧道 中间 节点 返回 的 IPv4 “ ICMP 错误 ” 报文 转换 为 IPv6 的 “ ICMP 错误 ” 报文 ， 并 向 报源 IPv6 主机 报告 。 
 4.1 　 隧道 MTU 及 数据 报 分段 
 　 　 封装 节点 较 直观 而 简单 的 做法 是 ： 把 IPv6 数据 报 的 IPv4 封装 看作 IPv6 层 使用 了 具有 很大 MTU ( 65 , 535 - 20 ) 的 链路层 ， 这里 65 , 535 字节 是 IPv4 数据 报 的 最大 尺寸 ， 20 字节 是 IPv4 报头 的 大小 ， IPv4 的 MTU 是 指 包括 IPv4 报头 长度 的 允许 传输 的 最大 IPv4 数据 报 长度 ，   IPv6 的 MTU 是 指 包括 IPv6 报头 长度 的 允许 传输 的 最大 IPv6 数据 报 长度 。 对 不 大于 65 , 515 的 IPv6 数据 报 ， 封装 节点 直接 用 IPv4 封装 并 允许 分段 ， 随后 转发 至 隧道 中 ； 对 大于 65 , 515 的 数据 报 ， 隧道 封装 节点 则 丢弃 并 向 报源 主机 报告 “ 数据 报太长 的 IPv6 型 ICMP 错误 ” ， 此后 由 报源 主机 以 不 大于 65 , 515 的 长度 重发该 数据 报 。 然而 ， 重发 的 数据 报 仍然 很长 ， 在 穿越 IPv4 网络 构成 的 隧道 时 仍 可能 在 沿途 路由器 上 因 数据 报太长 而 分段 。 例如 ， 假设 隧道 首 节点 的 IPv4   MTU 为 1 , 500 字节 ， 隧道 中间 的 一个 路由器 的 IPv4   MTU 为 1 , 000 字节 ( 它 的 MTU 在 全 隧道 中 最小 ) 。 报源 主机 发送 了 一个 68K 字节 ( 包括 IPv6 报头 长度 ) 的 IPv6 数据 报后 ， 封装 节点 会 予以 丢弃 并 发回 IPv6 的 ICMP 数据 报 。 接着 ， 报源 主机 重发 较 小 的 总长 为 65 , 515 字节 的 IPv6 数据 报 ； 封装 节点 收到 后 把 此 数据 报 分段 成 多个 1 , 500 字节 的 IPv4 数据 报 ， 并 在 隧道 中 转发 ； 这些 数据 报在 隧道 中间 MTU 为 1 , 000 字节 的 路由器 上 会 进一步 分段 成 1 , 000 字节 的 IPv4 数据 报 。 
 　 　 所以 ， 这种 简单 做法 会 导致 效率 低下 ， 这 主要 体现 在 以下 两 方面 ： 
 　 　 ( 1 ) 会 导致 比所 需 更 多 的 分段 ， 而 IPv4 层 的 分段 会 引起 性能 下降 ， 因为 一个 分段 后 的 报片 丢失 ， 就 会 引起 包含 所有 报片 的 原始数据 报 的 重传 。 
 　 　 ( 2 ) 组成 一个 隧道 中 IPv4 数据 报 的 所有 分段 后 报片 ， 需要 在 隧道 尾 节点 处 重装 成为 原始数据 报 ， 对于 路由器 这类 尾 节点 ， 就 需要 附加 内存 存储 各报 片 ， 以便 全部 到达 后 重装 。 
 　 　 隧道 首 节点 较 好 的 做法 是 使用 IPv4 的 “ 隧道 全程 MTU 探寻 ” 协议 ， 把 探寻 结果 记为 MTU4 ， 并记 ： MTU6 = ( MTU4 - IPv4 的 报头 长度 ) 。 此后 ， 封装 节点 中 的 IPv6 协议 可 把 IPv4 隧道 看成 是 一个 能 承载 最大 数据 报长 为 MTU6 的 数据 链路层 ， 在 向 报源 主机 发送 “ 数据 报太长 ” 的 ICMP 报文 时 ， 附上 MTU6 的 信息 。 例如 ， 对 上面 提到 过 的 例子 ， 封装 节点 在 丢弃 该 68K 字节 的 数据 报后 ， 会 要求 报源 主机 重发 MTU6 = 980 字节 的 IPv6 数据 报 。 
 　 　 IPv6 要求 网络 的 最小 MTU 为 576 字节 ， 隧道 首 节点 中 的 IPv6 层 不能 发送 比 576 字节 更 小 的 数据 报 ， 但 IPv4 网络 的 隧道 全程 MTU 可能 小于 ( 576 + IPv4 报头 长度 ) 。 这时 数据 报 分段 在 隧道 中间 就 会 不可避免 地 发生 。 因此 ， 上面 的 “ 隧道 全程 MTU 探寻 ” 协议 并 不能 完全 去除 数据 报 的 分段 现象 。 
 　 　 对于 大于 上述 MTU6 的 IPv6 数据 报 ， 隧道 首 节点 可 使用 以下 算法 来 决定 ： 用 IPv4 转发 ( 根据 需要 分段 或 不 分段 ) ， 或 丢弃 并 发回 IPv6 的 “ ICMP 数据 报太长 ” 报文 ， 由 报源 节点 重发 更 小 的 数据 报 。 
 if ( MTU4 - 20 ) ≤   576   then   
 　 　 if 　 数据 报 长度   >   576   then 
 　 　 　 　 丢弃 ， 并 发回 IPv6   ICMP 报文 “ 数据 报太长 ” 
 　 　 　 　 ( 其中 期望 的 MTU = 576 ) 
 　 　 else   / *   数据 报 长度 ≤ 576   * / 
 　 　 　 　 用 IPv4 封装 并 允许 分段 ， 隧道 首 节点 或 中间 节点 根据 需要 会 进行 IPv4 分段 
 　 　 endif 
 else   / *   ( MTU4 - 20 ) >   576   * /   
 　 　 if 　 数据 报 长度   >   MTU4 - 20   then 
 　 　 　 　 丢弃 ， 并 发回 IPv6   ICMP 报文 “ 数据 报太长 ” 
 　 　 　 　 ( 其中 期望 的 MTU = MTU4 - 20 )   
 　 　 else   / *   数据 报 长度 ≤ MTU4 - 20   * / 
 　 　 　 　 　 发送 该 数据 报 并 置 “ 禁止 分段 ” 标志 。 
 　 　 endif 
 endif 
 4.2 　 路由 段数 限制 值 ( Hop   limit ) 
 　 　 整个 IPv4 隧道 的 IPv6 路由 段数 定为 1 ， IPv6 数据 报在 穿越 整个 隧道 时 ， 报头 中 的 Hop   limit 字段 减 1 ， 从而 对 IPv6 网络 用户 隐去 了 隧道 的 存在 。 
 4.3 　 IPv4 报头 的 构造 
 　 　 当 封装 节点 用 IPv4 数据 报 格式 封装 IPv6 数据 报时 ， 它 按 如下 方法 设置 IPv4 报头 的 各个 字 段 ： 
 　 　 · Version ( 版本 ) ： 4 。 
 　 　 · IP 报头 长度 ： 5 ( 4 字节 为 单位 ) 。 
 　 　 · Type   of   service ( 服务类型 ) ： 0 。 
 　 　 · Total   length ( IPv4 数据 报 总长度 ) ： 被 封装 IPv6 报头 的 “ Payload   Length " 字 段值 加上 IPv6 报头 ( 包括 扩展 报头 ) 及 IPv4 报头 长度 ， 后 两项 之 和 常常 是 60 字节 。 
 　 　 · Identification ( 标识 ) ： 封装 节点 为 每个 IPv4 数据 报 产生 一个 唯一 值 。 
 　 　 · Flags ( 标志 位 ) ： 按照 4.1 节 的 方法 ， 若 允许 分段 ， 则 置 DF ← 0 ,   MF 按 是否是 最后 一个 报文 段置 相应 值 ； 若 不 允许 分段 则 置 DF ← 1 ,   MF ← 0 。 
 　 　 · Fragment   offset ( 本报 文 段 数据 部分 在 原始 分段 前 报文 的 数据 部分 中 的 相对 偏移 值 ) ： 对 每个 报文 段 按 实际 偏移 值 设置 。 
 　 　 · Time   to   live ( 寿命 ) ： 按 具体 某一 实现 所 确定 的 值 填写 。 
 　 　 · Protocol ( 协议 ) ： 41 ， 即 IPv6 的 协议 类型 值 。 
 　 　 · Header   checksum ( 报头 校验 和 ) ： 按 IPv4 报头 校验 和 的 计算结果 填写 。 
 　 　 · 源地址 ： 封装 节点 发出 本 数据 报 所用 网络接口 的 IPv4 地址 。 
 　 　 · 目的 地址 ： 隧道 尾 节点 的 IPv4 地址 。 
 4.4 　 IPv4   ICMP 错误 的 处理 方法 
 　 　 隧道 封装 节点 可能 会 收到 隧道 中间 IPv4 路由器 的 IPv4   ICMP 出错 报文 ， 这些 报文 是 对 发到 隧道 中 的 数据 报 错误 的 响应 信息 。 
 　 　 隧道 首 节点 中 的 IPv6 协议 根据 隧道 全程 MTU 及 数据 报 长度 来 决定 是否 向 报源 主机 发回 一个 IPv6 的 ICMP “ 数据 报太长 ” 错误信息 。 
 　 　 IPv4 的 “ ICMP 错误 ” 报文 可以 附带 上 一定 长度 的 引起 错误 的 原始数据 报 的 一部分 ， 对 “ ICMP 错误 ” 报文 的 处理 依赖于 所 携带 的 原始数据 报有 多长 。 很多 以前 的 路由器 只 附上 出错 数据 报 IPv4 报头 以后 8   字节 的 内容 ； 这 8 个 字节 还 不足以 包含 IPv6 报头 ( 作为 IPv4 报头 后 的 数据 ) 的 地址 字 段 。 较 现代 的 路由器 可以 包括 在 IPv4 报头 以后 的 足够 的 数据 ， 足以 包括 整个 IPv6 报头 ， 甚至 其后 的 IPv6 数据 。 如果 “ ICMP 错 ” 报文 包括 足够 的 数据 ， 封装 节点 可 从中 提取 IPv6 数据 报 ， 并 据此 产生 IPv6 的 “ ICMP 错 ” 报文 ， 发 回到 IPv6 报源 节点 。 
 5 　 结束语 
 　 　 与 IPv4 相比 ， IPv6 具有 以下 技术 优势 ： 支持 约 3 × 1038 个 IP地址 ； 路由表 占用 更 小 的 存储空间 ； 路由器 可以 更 快速 地 处理 数据 报 ； 更好 的 网络 安全性 ； 更好 地 支持 实时 数据 ， 等等 。 隧道 技术 一方面 保护 现有 IPv4 网络 的 投资 ， 同时 又 使 IPv4 网络 向 IPv6 的 顺利 迁移 成为 可能 ； 目前 ， 使用 隧道 技术 创建 的 IPv6 主干网 6Bone 已经 开通 ， 它 是 一个 在 Internet 上 运行 的 IPv6 实验 网络 。 相信 在 不久 的 将来 ， 更 多 的 基于 隧道 技术 的 IPv6 网络 会 被 建立 并 融入 广袤 的 Internet 世界 中 。 
 陆魁军 ( 浙江大学 计算机系   杭州   310027 ) 
 参考文献 
 1   Gilligan   R . and   Nordmark   E . , Transition   Mechanism   for   IPv6   Hosts   and   Routers .   RFC1933   of   IETF ,   1996 
 2   Stevens   W .   and   Thomas   M . ,   Advanced   Sockets   API   for   IPv6 ,   RFC2292   of   IETF ， 1998 
 3   Tanenbaum ,   A .   Computer   Network ,   ( 3rd   Version ) ,   USA ,   Prentice   Hall   Inc .   1996 
 收稿 日期 ： 1999 年 10 月 19 日 
