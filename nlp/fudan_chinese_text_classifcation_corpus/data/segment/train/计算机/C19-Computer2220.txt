计算机 应用 研究 
 APPLICATION   RESEARCH   OF   COMPUTERS 
 2000   Vol.17   No.3   P.19 - 21 
 
 
 
 
 支持 产品 协同 设计 项目 管理系统 的 研究 与 实现 
 沈春龙 　 孔建寿 　 张友良 
 摘 　 要 ： 讨论 了 协同 设计 环境 下 ， 项目 管理系统 的 体系结构 的 设计 ， 同时 对系统 中 各 模块 的 功能 进行 了 描述 ， 并 对系统 设计 过程 中 关键问题 的 解决方案 进行 了 探讨 ， 保证 了 系统对 产品设计 过程 中 的 任务 流 进行 正确 地 管理 与 监控 ， 使 产品设计 收敛 于 需求 分析 。 
 关键词 ： 协同 设计   项目管理   任务 流 
 1 　 引言 
 　 　 90 年代 ， 在 产品设计 和 过程 集成 理念 的 指导 下 ， 人们 从 不同 的 角度 提出 各种 先进 制造 理论 和 技术 ， 如 敏捷 制造 ， 精良 生产 ， 虚拟 制造 等 。 它们 的 目的 均 在于 提高 企业 对 市场需求 的 响应 能力 和 对 市场 变化 的 反应 能力 ， 以 赢得 市场竞争 。 先进 制造 技术 强调 企业 以 并行 方式 来 组织 产品设计 ， 产品设计 行为 是 由 分布 在 不同 地点 、 不同 企业 内 的 多 学科 小组 在 同一 数字化 产品 模型 上 协同工作 完成 的 ， 计算机 支持 下 的 协同 设计 正是 在 该 背景 下 产生 的 一个 使能 技术 ， 其 能够 克服 时间 、 空间 、 计算机 软硬件 等 障碍 ， 并 形成 一个 便于 群体 相互 交流 和 合作 的 “ 虚拟 同 地 ” 的 共同 设计 空间 ， 传统 的 项目管理 方法 由于 缺乏 考虑 资源 变化 ， 任务 的 交互性 及 分布式 规划 ， 不能 适应 对 协同 设计 过程 中 任务 流程 的 管理 。 大型 产品设计 领域 的 协同 过程 通常 是 比较复杂 的 ， 为了 保证 项目 的 进度 ， 需要 项目 管理系统 对 设计 过程 进行 管理 。 
 　 　 目前 ， 真正 支持 分布式 环境 下 流程 工作 方式 的 项目 管理系统 是 比较 少 的 [ 1 ] 。 Microsoft   公司 的 Project   98 专用 项目管理 系统软件 依赖于 支持 流程 控制 的 Exchange   Server 系统 ， 以 Intranet 网络 为 依托 ， 实现 项目 任务 流 的 管理 ， 但 实际 使用 过程 中 ， 在 适用范围 ， 灵活性 ， 优化 调度 以及 意外 情况 处理 等 方面 存在 一定 问题 。 一些 大型 的 项目管理 软件 ， 如 Primavera 公司 的 P3 ， Gores 公司 的 Artemis 等 软件 适合 对 运行 模式 为 BOT ( Build - Operate - Transfer 建造 - 运行 - 移交 ) 、 MC ( Management   Contracting 管理 承包 ) 的 工程 进行 管理 ， 以 成本 、 合同 为 核心作用 ， 适当 考虑 进度 ， 并 不 适合 对 产品设计 进行 管理 。 产品设计 在 产品 全 生命周期 中 的 重要性 是 不言而喻 的 ， 产品设计 的 复杂性 和 协同 性 ， 需要 支持 分布 异构 环境 下 的 项目 管理系统 来 使 设计 产品 收敛 于 需求 分析 。 
 　 　 我们 认为 ， 支持 协同 设计 的 项目 管理系统 应 支持 设计 - 管理模式 ， 以 进度 管理 为 中心 ， 适当 考虑 资源 、 成本 对 进度 的 约束 。 该 系统 是 定义 、 管理 、 执行 、 监控 任务 流程 的 软件 。 任务 流是 由 计算机 描述 的 任务 逻辑 ， 在 一定 的 规则 下来 驱动 [ 2 ] ， 其 包括 项目 分解 及子 任务分配 、 组织 及 资源配置 、 建模 工具 、 任务 计划 、 调度 及 优化 、 任务 流 执行 引擎 、 任务 流 监控器 、 任务 列表 等 模块 。 
 2 　 项目管理 软件体系结构 设计 
 　 　 为了 支持 群体 协同 设计 ， 项目 管理系统 应 以 网络 为 依托 ， 整个 系统 由 项目 管理者 ， 设计 小组 在 一定 的 权限 支配 下 可 进行 资源 ( 数据 、 文档 、 设计 工具 ) 共享 。 其 体系结构 如图 1 所示 。 
 
 图 1 　 系统 体系结构 图 
 　 　 我们 以 面向对象 设计 方法 和 C / S 结构 来 设计 项目 管理系统 ， 系统 的 各 模块 功能 如下 。 
 　 　 项目管理 界面 ： 提供 给 项目 管理员 ( Project   Manager ) 管理工具 的 菜单 和 工具栏 。 
 　 　 项目 定义 、 分解 ： 按 项目 管理系统 应用 的 层次 和 范围 ， 按 粒度 分层 分解 一系列 在 时间 上串 / 并行 的 子 任务 树结构 ， 同时 设计 子 任务 属性 ， 如子 任务 ID 、 子 任务 名称 、 内容 描述 、 任务 持续时间 ( 生命周期 ) 、 资源分配 状况 、 费用 、 设计 小组 等 。 
 　 　 组织 、 资源配置 ： 以 视图 方式 给出 协同 设计 小组 分布 及 资源配置 信息 并 进行 统一 编码 ， 便于管理 与 调度 。 
 　 　 项目 建模 ： 生成 子 任务 间 的 关系 视图 ， 提供 图形 编辑 子 任务 间 逻辑关系 的 网络 计划 图 ， 形成 子 任务 的 动态 流程 ， 具有 添加 ， 删除 ， 修改 等 功能 ， 并 具有 网络 计划 图 的 有效性 检查 ， 同时 具有 查看 子 任务 间 的 逻辑关系 及其 属性 的 功能 。 
 　 　 项目 计划 、 调度 ： 依子 任务 间 的 逻辑关系 和 持续时间 确定 关键 路径 和 关键 任务 ， 得到 初始 的 计划 方案 ， 同时 生成 各子 任务 的 相互 时间 参数 报表 并 可 映射 到 工程 日历 。 
 　 　 子 任务 执行 引擎 ： 子 任务 执行 引擎 是 整个 项目 管理系统 的 核心 ， 它 提供 子 任务 网络 模型 的 定义 在 分布式 环境 下 实现 真正 的 业务 处理过程 ， 其 主要 功能 是 解释 模型 ， 类 任务 的 实例 化 ， 激活子 任务 ， 与 客户端 通讯 ， 挂 起 和 终止子 任务 的 控制 等 。 
 　 　 子 任务 监控器 ： 实时 监控 任务 流 的 运行 状态 ， 对 项目 进度 进行 监控 ， 超时 报警 ， 以及 及时发现 是否 有 对 共享 信息 的 越权 操作 及子 任务 的 运行 结果 是否 满足要求 等 ， 一旦 发现 问题 ， 立即 向 项目 管理者 和 客户端 通告 此 异常情况 。 
 　 　 历史记录 ： 记录 任务 流程 系统 的 运行 轨迹 。 历史记录 的 对象 主要 是 设计 过程 中 形成 的 决策 ， 其 目的 是 记录 项目 进行 到 一定 阶段 时 的 过程 特征 。 
 　 　 项目 进度 ： 查看 表示 任务 随 时间 进展 情况 的 GANTT 图 和 显示 子 任务 的 属性 列表 。 
 　 　 任务 描述 表 ： 项目 中 任务 的 运行 状态 和 各种 属性 的 列表 显示 。 
 　 　 应用 工具 ： 为了 提高 协同 设计 小组 的 效率 ， 系统集成 CAx / DFx 工具 ， CAx 保证 产品 信息 全 生命周期 的 数字化 描述 成为 可能 ， DFx 使得 在 产品设计 的 早期 阶段 就 能 把 后期 诸多 因素 ， 如可 装配 性 ， 可 制造 性 等 因素 反映 到 产品设计 中 。 另外 ， 在 协同 设计 过程 中 ， 产生 的 许多 非 结构化 数据 ( 如 图象 ， 文档 ， 声音 等 ) ， 利用 支持 分布式 环境 下 的 流程 软件 Lotus   Notes 来 进行 管理 。 为了 支持 协同 设计 协商 过程 ， 用 视频会议 和 电子白板 等 方式 来 进行 交流 与 决策 。 
 3 　 系统 实现 中 的 几个 关键问题 的 解决方案 
 3.1 　 面向对象 的 图形化 任务 流 建模 工具 
 　 　 任务 流 模型 实现 了 事物 处理过程 从 现实 世界 中 的 原型 向 计算机 可 处理 的 形式化 定义 的 转换 。 模型 建立 的 关键 是 如何 描述 子 任务 及其 之间 的 逻辑关系 ， 同时 还要 考虑 任务 流 的 重新 设计 及 可计算性 ， 这是 整个 系统 得以 自动化 运行 的 基础 。 通常 模型 采用 程序代码 ， 形式化 语言 ， 可视化 图形 工具 等 方面 来 描述 。 对 该 项目 系统 而言 ， 虽然 前 两种 方法 描述 子 任务 及其 之间 的 关系 较 简单 ， 但 必须 利用 矩阵 来 检测 和 消除 子 任务 间 循环 和 冗余 的 逻辑关系 ， 而且 不能 直观 地 反映 子 任务 间 的 逻辑关系 。 图形化 工具 提供 给 管理者 友好 的 用户界面 ， 子 任务 间 明确 的 逻辑关系 ， 避免 了 逻辑关系 的 冗余 检查 ， 同时 便于 用户 很 方便 地 动态 编辑 子 任务 间 的 逻辑关系 。 
 　 　 我们 采用 面向对象 的 图形化 方法 实现 项目 模型 的 建立 。 单个 子 任务模型 用 双 节点 和 单 箭头 支线 来 表示 ， 如图 2 所示 。 箭尾 节点 表示 任务 的 开始 事件 ， 箭头 节点 表示 任务 的 结束 事件 ， 箭头 支线 代表 一个 独立 的 子 任务 ， 其 上流 表示 了 设计所 需 的 时间 和 资源 等 参数 ， 子 任务 间 的 逻辑关系 是 通过 节点 间 的 耦合 来 实现 的 。 子 任务 间 除了 通常 的 顺序 ， 并行 关系 外 ， 我们 引进 虚拟 子 任务 形成 子 任务 间 的 搭接 关系 来 表达 不能 通过 节点 耦合 表示 的 逻辑关系 。 图 3 说明 了 子 任务 间 的 逻辑关系 描述 。 图 中子 任务 A 和 B 是 顺序 关系 ， B 和 C 是 并行 关系 ， D 子 任务 执行 的 前提条件 是 任务 B 和 C 的 结束 事件 均 已 发生 ， 而 B ， C 间 的 这种 逻辑关系 不能 通过 终止 节点 耦合 来 表示 ， 引入 虚 任务 a 来 连接 B 和 C 的 终 节点 来 说明 这种 逻辑关系 。 需要 说明 的 是 虚 任务 的 持续时间 和 其 上 所 耗费 的 资源 为 零 。 
 　 　 　 　 　 　 　 　 
 图 2 　 子 任务模型 　 　 　 　 　 　 　 　 图 3 　 子 任务 间 逻辑关系 图例 
 3.2 　 子 任务 网络图 规划 、 调度 、 优化 
 　 　 从 图论 的 角度看 ， 子 任务 网络图 是 由 节点 和 支线 构成 的 有 向 无 环图 ( DAG ) ， 一个 子 任务 类 可用 一个 五元 组 G ( N ， A ， S ， O ， D ) 来 表示 ， 其中 ： N 为 系统 全局 定义 的 子 任务 实例 标识 ； A 为子 任务 所 相关联 的 逻辑 集合 ( 元 数据 ) ， 包括 与 其它 子 任务 间 的 逻辑关系 描述 、 所 分配 的 设计 小组 、 资源 信息 ； S 为子 任务 实例 的 当前 状态 ， 如 准备就绪 ( R ) ， 执行 ( E ) ， 挂 起 ( H ) ， 完成 ( C ) ， 超时 ( L ) 等 ； O 为 可 对子 任务 实例 进行 的 操作 集 。 
 　 　 网络图 计划 的 基本 思想 就是 寻找 网络图 上 对应 作业 时间 最长 的 路径 ( 关键 路径 ) ， 其上 的 任务 称为 关键 设计 子 任务 ， 采用 PERT / CP 方法 找出 关键 路径 [ 3 ] ， 对 网络图 进行 正向 和 逆向 扫描 即可 计算 出子 任务 相关 时间 参数 ， 其中 局部 时差 和 全局 时差 是 系统 时间 优化 的 依据 。 应 说明 的 是 ： 在 项目 的 动态 进行 中 ， 可 重新 计算 网络图 的 关键 路径 和 关键 任务 。 对非 确定性 持续时间 ， 我们 引入 联系 数 t = m ± n 的 方式 来 描述 ， 其中 m 为 估计 时间 ， [ m - n ,   m + n ] 为 可 接收 的 子 任务 运行 时间 。 
 3.3 　 任务 流 协调 机制 的 实现 
 　 　 项目 管理系统 运行 在 支持 设计 小组 协同工作 的 分布式 环境 下 ， 欲 使 整个 系统 协调 运行 ， 协调 机制 的 设计 和 实现 是 其 关键 。 本 系统 的 协调 机制 是 由 任务 流 引擎 ， 子 任务 描述 表及 任务 流 监控器 相互之间 的 协同工作 来 实现 的 。 它们 之间 的 关系 如图 4 所示 。 
 
 图 4 　 系统 协调 机制 
 　 　 运行 于 服务器端 的 任务 流 引擎 是 由 两类 引擎 进程 组成 ： 一类 是 一组 管理 和 维护 各自 的 任务 实例 的 执行 ， 它们 伴随 子 任务 实例 的 启动 而 产生 ， 伴随 子 任务 实例 的 完成 而 消亡 ， 它 是 以 进程 的 方式 存在 的 ， 称为 子 任务 实例 引擎 ； 另一类 是 运行 于 服务器端 维护 子 任务 描述 表 的 消息 响应 引擎 ， 它 常驻 于子 任务 流 执行 服务 中 的 ， 接收 来自 任务 实例 引擎 的 通讯 及 与 客户端 的 交互 。 
 　 　 子 任务 表是 由 工作 流 引擎 对 任务 流 模型 的 解释 ， 以 消息 队列 形式 存在 的 过程 处理 模型 ， 子 任务 管理 引擎 对 任务 表 循环 处理 ， 设计 任务 实例 的 、 运行 状态 ， 当 任务 表中 某个 任务 运行 条件 满足 时 ， 子 任务 管理 引擎 设置 其 状态 为 运行 ， 同时 产生 子 任务 实例 引擎 ， 通过 子 任务 实例 引擎 将 此 消息 通知 给 客户端 ( 设计 小组 ) ， 并且 同时 提交 给 客户端 相应 的 文档 和 数据 ， 然后 实现 与 客户端 应用程序 的 连接 ， 相互间 进行 消息 发送 和 查询 请求 ， 子 任务 管理 引擎 通过 子 任务 实例 引擎 获得 来自 客户端 的 任务 执行 情况 并 修改 任务 表中 的 任务 实例 的 属性 ， 当 任务 完成 之后 ， 接收 子 任务 提交 的 文档 和 数据 ， 并 启动 下 一个 子 任务 。 
 　 　 任务 控制器 是 运行 于 服务器端 的 后台 进程 ， 该 进程 的 作用 是 每隔 一定 的 时间 扫描 状态 为 执行 态 的 各子 任务 ， 并 对 其 执行 的 时间 进行 累加 ， 若该 时间 大于 子 任务 的 生存 周期 ， 则 项目管理 报警 ， 同时 向 客户端 报警 。 对 共享 信息 的 越权 操作 及 异常情况 也 会 向 管理员 和 客户端 报警 。 
 4 　 结论 
 　 　 本文 讨论 了 并行工程 环境 下 ， 面向 产品设计 过程 的 项目 管理系统 体系结构 和 关键问题 的 设计 方法 。 目前 ， 我们 已 实现 了 系统 的 大部分 功能 ， 该 系统 保证 了 项目 管理系统 的 任务 流 的 运行 、 控制 和 管理 以及 协同工作 的 特点 ， 但 系统 中 引擎 的 通讯 和 互操作 ， 以及 设计 过程 中 产生 的 约束 和 冲突消解 仍 需 进一步 研究 。 
 本 项目 获 国防 预研 资助 ( 18.4 . 2 . l ) 
 沈春龙 ( 南京 理工大学 CIMS 研究所   南京   210094 ) 
 孔建寿 ( 南京 理工大学 CIMS 研究所   南京   210094 ) 
 张友良 ( 南京 理工大学 CIMS 研究所   南京   210094 ) 
 参考文献 
 1   Cha   J   Z ,   Guo   W .   The   Methodogy   and   Environment   for   Modeling   and   Implementation   in   Concurrent   Engineering .   Proceedings   of   ASME   19th   Design   Automation   Conference ,   U . S . A ,   1993 
 2   胡   华 ,   任午 令 .   面向对象 的 分布式 智能 生产流程 管理系统 .   计算机 工程 ,   1998 ,   24 ( 7 ) ,   46 ～ 49 
 3   江景 波等 .   网络 技术 原理 及 应用 .   上海 ： 同济大学 出版社 .   1997 
 收稿 日期 ： 1999 年 10 月 25 日 
