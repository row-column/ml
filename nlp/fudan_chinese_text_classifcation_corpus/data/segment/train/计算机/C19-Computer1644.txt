软件 学报 
 Journal   of   Software 
 2000   Vol.11   No.1   P.91 - 94 
 
 
 
 多 模式 下 的 反 合一 算法 
 许锡春 　 胡运发 　 施 伯乐 
 摘 　 要 　 证明 了 多 模式 环境 下 存在 最小 反 合一 , 提出 了 一种 反 合一 算法 , 并 介绍 了 多 模式 下反 合一 的 应用 . 
 关键词 　 合一 , 反 合一 , 多 模式 , 算法 , 相似 . 
 中图法 分类号 　 TP301 
 Anti - Unification   Algorithm   Based   on   Multi - Pattern 
 XU   Xi - chun 　 HU   Yun - fa 　 SHI   Bai - le 
 ( Department   of   Computer   Science 　 Fudan   University 　 Shanghai 　 200433 ) 
 XU   Xi - chun 
 ( Computing   Center 　 Shanghai   Maritime   University 　 Shanghai 　 200135 ) 
 Abstract 　 In   this   paper ,   the   existence   of   the   least   anti - unification   in   multi - pattern   is   proved   and   an   algorithm   for   the   anti - unification   is   proposed .   In   addition ,   the   application   of   the   anti - unification   in   multi - pattern   is   also   introduced . 
 Key   words 　 Unification ,   anti - unification ,   multi - pattern ,   algorithm ,   similarity . 
 　 　 合一 操作 计算 的 是 最大 下界 , 而 与 合一 对应 的 反 合一 操作 计算 的 是 最小 上界 . 合一 操作 在 定理 证明 、 自动 推理 等 方面 起到 重要 的 作用 , 反 合一 同样 也 是 一种 非常 有用 的 操作 , 可以 应用 于 类似 推理 、 程序 重写 、 机器 学习 等 方面 . 这些年来 , 对 反 合一 的 研究 正在 加强 . 反 合一 最早 是 由 Plotkin ［ 1 ］ 和 Reynolds ［ 2 ］ 分别 提出 来 的 . 与 合一 一样 , 反 合一 也 存在 各种 形式 . 最近 , 许多 学者 对 各种 形式 的 反 合一 进行 了 研究 . Page ［ 3 ］ 研究 了 基于 各种 约束 形式 的 反 合一 , 基于 约束 的 反 合一 可以 避免 过分 抽象 ( overgeneralization ) . Hasker ［ 4 ］ 研究 了 二阶 反 合一 , 提出 二阶 反 合一 可以 包含 更 多 的 信息 , 但 不 存在 二阶 最小 反 合一 , 并 通过 增加 限制 来 保证 得到 明确 的 反 合一 . Pfenning ［ 5 ］ 研究 了 基于 类型 的 、 以 λ 演算 为 基础 的 反 合一 , 并 提出 类型 也 是 一种 约束 , 同样 可以 避免 过分 抽象 . 这些 研究 都 有 一个 共同 的 特点 ： 逻辑 结构 都 是 在 单 模式 下 , 即 对于 谓词 P , 其 模式 P ( a1 , a2 , ... ) 是 唯一 的 . 但是 ， 在 不同 的 应用 中 可以 有 多种 模式 , 例如 , 在 面向对象 的 系统 中 允许 操作 重载 ； 在 类似 推理 中 , 有时 一个 问题 可以 有 多种 描述 形式 . 当然 , 也 可以 用 不同 的 谓词 来 表示 , 但是 这样 做 , 一方面 , 其 共性 不能 表示 ； 另一方面 , 必使 谓词 数目 成倍增加 . 
 　 　 本文 对 多 模式 下 的 反 合一 进行 了 研究 , 证明 了 在 多 模式 下 存在 着 最小 反 合一 , 并 提出 了 计算 最小 反 合一 的 算法 . 
 1 　 基本概念 
 　 　 我们 把 所有 变量 的 集合 记为 V , 常量 的 集合 记为 C , 类型 的 集合 记为 T . 在 此基础 上 , 我们 定义 有关 概念 . 
 　 　 定义 1 .   模式 . 谓词 P 的 模式 为 P （ x1 : t1 , x2 : t2 , ... , xn : tn ) , 其中 xi 为 变量 , ti 为 类型 . 
 　 　 我们 采用 表达式 即 类型 的 思想 , 把 每 一 谓词 也 看作 类型 , 即 谓词 P 也 称为 类型 P , 并且 模式 也 可以 表示 为 P ( t1 ( x1 ) , t2 ( x2 ) , ... , tn ( xn ) ) , 因此 , 模式 中 的 参数 也 可以 是 另 一 模式 , 类似 于 关系数据库 中 的 非 第一 范式 . 我们 可以 把 （ ） 看作 是 一种 操作 . 
 　 　 定义 2 .   多 模式 . 谓词 P 存在 多个 模式 , 其 表示 可以 有 以下 两种 形式 ： 
 P ( t1 ( x1 ) , t2 ( x2 ) , ... , tn ( xn ) ) ; 
 P ( t1 ( x1 ) , t2 ( x2 ) , ... , ［ ti ( xi ) ］ , ... , tn ( xn ) ) , 
 其中 ［   ］ 表示 可选 . 
 　 　 定义 3 .   导出 模式 . 假设 P 的 模式 为 P ( t1 ( x1 ) , t2 ( x2 ) , ... , ［ ti ( xi ) ］ , ... , tn ( xn ) ) , 则 P ( t1 ( x1 ) , t2 ( x2 ) , ... , ti ( xi ) , ... , tn ( xn ) ) 和 P ( t1 ( x1 ) , t2 ( x2 ) , ... , ti - 1 ( xi - 1 ) , ti + 1 ( xi + 1 ) , ... , tn ( xn ) ) 都 是 模式 P ( t1 ( x1 ) , t2 ( x2 ) , ... , ［ ti ( xi ) ］ , ... , tn ( xn ) ) 的 导出 模式 . 
 　 　 定义 4 .   模式 包含 . 对于 模式 P1 ( x1 , x2 , ... , xn ) , P2 ( y1 , y2 , ... , ym ) , 若 P1 , P2 相同 , 对 任何 i ∈ ( 1 , n ) , 存在 j ∈ ( 1 , m ) , xi = yi , 且 对于 i1 < i2 , 有 j1 < j2 . 
 　 　 定义 5 .   模式 的 合并 . 若 模式 P1 ( x1 , x2 , ... , xn ) , P2 ( y1 , y2 , ... , ym ) 为 P 的 导出 模式 , 则 P1 , P2 的 合并 模式 P0 ( z1 , z2 , ... , zn ) 为 P 的 导出 模式 中 包含 模式 P1 , P2 的 最小 模式 . 
 　 　 定理 1 .   模式 的 合并 是 唯一 的 . 
 　 　 定义 6 .   实例 . 对于 模式 P 中 各 参数 , 用 相同 类型 的 项 代入 , 即为 P 的 实例 . 表示 空 , 只能 代入 可选 的 参数 . 
 　 　 定义 7 .   项 . 项 可以 有 以下 几种 形式 ： ( 1 ) 为项 ； ( 2 )   常量 为项 ； ( 3 )   变量 为项 ； ( 4 )   模式 P 的 实例 为项 .   
 2 　 反 合一 问题 
 　 　 反 合一 计算 的 是 两个 实例 的 最小 上界 . 为了 比较 大小 , 类似 于 合一 运算 , 可以 利用 替换 来 定义 一个 实例 序 . 
 　 　 定义 8 .   实例 序 . 对于 两个 项 t , s , 若 存在 替换 σ , 使得 σ t = s , 则 定义 实例 序为 t 大于 s , 记为 t ≥ s . 
 　 　 合一 采用 项来 替换 变量 , 得到 共同 的 实例 . 而 与 之 相反 , 我们 也 可以 用 变量 来 代替 项 , 得到 共同 的 抽象 , 这 就是 反 合一 . 
 　 　 定义 9 .   反 合一 . 对于 两个 项 t , s , 若 存在 替换 σ , θ 及项 g , 使得 σ g = t , θ g = s , 则 g 为 t , s 的 反 合一 . 
 　 　 合一 操作 一般 计算 最大 的 共同 实例 ( 基于 实例 序 ) , 同样 地 , 反 合一 操作 一般 计算 最小 反 合一 . 
 　 　 定义 10 .   最小 反 合一 . 若 g 为 t , s 的 反 合一 , 对于 任何 t , s 的 反 合一 q , 有 g ≤ q , 则 称 g 为 t , s 的 最小 反 合一 . 
 　 　 定义 11 .   多 模式 下 的 反 合一 . 对于 谓词 P 的 模式 的 两个 实例 t , s , 若 存在 替换 σ , θ 及 P 的 模式 的 实例 g , 使得 σ g = t , θ g = s , 则 g 为 t , s 在 多 模式 下 的 反 合一 . 
 　 　 由于 P 也 是 一种 类型 , 允许 g 为 P ( x ) , 其中 x 为 变量 . 替换 可以 有 以下 几种 形式 ： ( 1 )   x →  , ( 2 )   x → Q ( ... ) , ( 3 )   x → ( t1 , t2 , ... , tn ) . 
 但 在 最后 一种 情况 下 , 要求 P ( t1 , t2 , ... , tn ) 为 P 的 实例 . 
 　 　 根据 文献 ［ 1 , 4 ］ 的 研究 , 在 单 模式 下 , 有 下面 的 结论 . 
 　 　 定理 2 .   存在 最小 的 一阶反 合一 . 
 　 　 定理 3 .   不 存在 最小 的 二阶 反 合一 . 
 　 　 在 多 模式 下 , 我们 可以 得出 定理 4 . 
 　 　 定理 4 .   多 模式 下 存在 最小 反 合一 . 
 　 　 证明 ： 对于 模式 P 的 实例 A , B , 可以 有 下列 3 种 情况 ： 
 　 　 ( 1 )   A , B 为 P 的 同一 模式 的 实例 . 
 　 　 ( 2 )   A , B 分别 为 P 的 两个 导出 模式 的 实例 . 
 　 　 ( 3 )   A , B 为 P 的 两个 模式 的 实例 ( 即 除了 ( 1 ) , ( 2 ) 之外 的 情况 ) 
 　 　 我们 分别 对 这 3 种 情况 进行 证明 . 
 　 　 对于 情况 ( 1 ) , 根据 定理 2 , 存在 最小 反 合一 . 
 　 　 对于 情况 ( 2 ) , 假设 P 的 两个 导出 模式 为 P1 , P2 . 首先 可以 得到 P1 , P2 的 并 集 P0 , 根据 定理 1 , P0 是 唯一 的 . 然后 , 把 A , B 映射 为 P0 的 实例 A0 , B0 . 根据 定理 2 , 只要 证明 A 到 A0 的 映射 是 唯一 的 即可 . 由于 P0 是 P1 , P2 的 合并 , 因此 , P0 包含 P1 , 对于 P0 的 属性 i , 若 其 存在 于 P1 中 , A0i ＝ Ai ； 若 其 不 存在 于 P1 中 , 取 A0i ＝ . 显然 , 这样 构造 的 A0i 是 唯一 的 . 
 　 　 对于 情况 ( 3 ) , 假设 A , B 的 形式 为 P ( a1 , a2 , ... , an ) , P ( b1 , b2 , ... , bm ) , n 和 m 可以 不同 . 根据 定义 11 , P ( x ) 是 A , B 的 反 合一 . 下面 只要 证明 P ( x ) 为 最小 反 合一 即可 . 
 　 　 设 P ( x ) 不是 最小 反 合一 , 则 必定 存在 另 一反 合一 P ( y1 , y2 , ... , yk ) , 且 k 一定 大于 1 . 由于 A , B 为 不同 模式 的 实例 , 因此 A , B 中必 存在 i , 使得 ai , bi 的 类型 不 一致 , 在 替换 中 , yi 不能 是 yi → ai , yi → bi , 只能 是 yi → , yi → bi （ 或 yi → ai , yi → ） . 如果 剩余 部分 能 匹配 ( 类型 一致 ) , 则 B 的 模式 必 包含 A 的 模式 , 这 与 条件 不符 . 如果 剩余 部分 还是 不能 匹配 , 那么 同样 地 , 若 存在 反 合一 P ( y1 , y2 , ... , yk ) , 则 A 的 模式 与 B 的 模式 必为 另 一 模式 的 导出 模式 . 因此 不 存在 形为 P ( y1 , y2 , ... , yk ) 的 反 合一 , 即 P ( x ) 为 最小 反 合一 . 
 □ 
 3 　 反 合一 算法 
 　 　 根据 上节 的 介绍 , 在 多 模式 下 , 存在 最小 反 合一 , 其 求解 算法 如下 . 
 　 　 算法 1 .   反 合一 算法 AU 
 　 　 输入 ： 谓词 P 的 模式 及 P 的 模式 的 两个 实例 α 1 , α 2 
 　 　 输出 ： α 1 , α 2 的 最小 反 合一 α 
 　 　 ( 1 )   若 α 1 , α 2 为 谓词 P 的 同一 模式 的 实例 ， 则 
 AU ( α 1 , α 2 ) ＝ P ( ... AU ( xi , yi ) ... ) ； 
 　 　 ( 2 )   若 α 1 , α 2 为 谓词 P 的 一个 模式 的 不同 导出 模式 P1 , P2 的 实例 ， 
 　 　 计算 P1 , P2 的 合并 模式 P0 ， 
 　 　 把 α 1 , α 2 转化 为 P0 的 实例 α 11 , α 12 ， 则 
 AU ( α 1 , α 2 ) ＝ AU ( α 11 , α 12 ) ＝ P ( ... AU ( x1i , y1i ) ... ) ； 
 　 　 ( 3 )   若 α 1 , α 2 为 谓词 P 的 不同 模式 P1 , P2 的 实例 ， 则 
 AU ( α 1 , α 2 ) ＝ P ( x ) , 
 其中 x 为 一个 新 变量 . 
 　 　 定理 5 .   算法 AU 是 正确 的 . 
 　 　 证明 ： 可以 从 定理 4 的 证明 直接 导出 . 
 4 　 应 　 用 
 　 　 多 模式 下 的 反 合一 可 应用 于 许多 方面 . 下面 介绍 利用 多 模式 下 的 反 合一 来 计算 两个 英文 句子 的 相似性 . 
 　 　 对于 t , s 的 反 合一 g , 也 就是 t , s 的 概括 ( 抽象 ) , g 与 t , s 越 接近 , 说明 t , s 越 相似 , t 与 s 的 相似性 可以 用 替换 δ , θ 来 刻画 ： 
 
 　 　 我们 采用 文献 ［ 6 ］ 介绍 的 衍生 句法 中 的 深层 结构 来 表示 英文 句子 , 采用 模式 描述 短语 规则 . 例如 , 句子 S 的 一个 模式 为 
 
 　 　 例 1 ： “ You   and   John   are   happy ” 与 “ I   studied   English   yesterday ” 这 两个 句子 可 表示 为 
 　 　 
 　 　 反 合一 的 结果 为 
 　 　 
 相似 度为 
 
 　 　 例 2 ： “ They   wrote   letters   yesterday ” 与 “ I   studied   English   yesterday ” 这 两个 句子 可以 表示 为 
 
 反 合一 的 结果 为 ： 
 
 相似 度 
 
 　 　 从 直觉 上 看 , 第 1 组是 完全 不 相似 的 , 而 第 2 组是 很 相似 的 , 计算结果 与 我们 的 直觉 是 一致 的 . 
 5 　 结 　 论 
 　 　 反 合一 与 合一 一样 , 是 一种 非常 有用 的 操作 . 本文 针对 多 模式 , 对 反 合一 问题 进行 了 研究 , 证明 了 在 多 模式 下 存在 最小 反 合一 , 并 提出 计算 最小 反 合一 的 算法 . 本文 还 介绍 了 用 多 模式 下 的 反 合一 算法 作为 案例 的 相似性 计算 的 方法 , 这一 方法 正 应用 于 目前 正 处于 实现 阶段 的 基于 案例 的 英汉翻译 系统 中 . 
 许锡春 （ 复旦大学 计算机科学 系 　 上海 　 200433 ； 上海 海运 学院 计算中心 　 上海 　 200135 ） 
 胡运发 （ 复旦大学 计算机科学 系 　 上海 　 200433 ) 
 施 伯乐 （ 复旦大学 计算机科学 系 　 上海 　 200433 ) 
 E - mail :   xcxu @ shmtu . edu . cn 
 参考文献 
 1 ． Plotkin   G   D .   A   note   on   inductive   generalization .   In :   Meltzer   B ,   Michie   D   eds .   Machine   Intelligence   5 .   Edinburgh :   Edinburgh   University   Press ,   1970 .   153 ～ 163 
 2 ． Reynolds   J   C .   Transformational   systems   and   the   algebraic   structure   of   atomic   formulas .   In :   Meltzer   B ,   Michie   D   eds .   Machine   Intelligence   5 .   Edinburgh :   Edinburgh   University   Press ,   1970 .   135 ～ 151 
 3 ． Page   C   D .   Anti - Unification   in   constraint   logics :   foundations   and   applications   to   learn   ability   in   first - order   logic ,   to   speed - up   learning ,   and   to   deduction   ［ Ph . D .   Thesis ］ .   Urbana - Champaign ,   Illinois :   University   of   Illinois   at   Urbana - Champaign , 1993 
 4 ． Hasker   R   W .   The   replay   of   program   derivations   ［ Ph . D .   Thesis ］ .   Urbana - Champaign ,   Illinois :   University   of   Illinois   at   Urbana - Champaign ,   1995 
 5 ． Pfenning   F .   Unification   and   anti - unification   in   the   calculus   of   constructions .   In :   Kahu   G   ed .   Proceedings   of   the   6th   Annual   IEEE   Symposium   on   Logic   in   Computer   Science .   Los   Alamitos ,   CA :   IEEE   Computer   Society   Press ,   1991 .   74 ～ 85 
 6 ． Lin   Tian - ming ,   Li   Gui - wan .   Generative   grammar   of   English .   Guangzhou :   Guangdong   People ' s   Press ,   1983 
 ( 林 天明 ， 李桂婉 . 英语 衍生 句法 . 广州 ： 广东 人民出版社 ， 1983 ) 
 1998 - 09 - 25 收稿 
 1999 - 02 - 01 修稿 
