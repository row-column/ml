计算机 应用 
 COMPUTER   APPLICATIONS 
 1999 年   第 19 卷   第 9 期   Vol.19   No.9   1999 
 
 
 
 触发器 的 几种 应用 
 李 振华 　 李贵龙 　 刘涯 
 　 　 摘 　 要 　 列举 了 触发器 的 几种 代表性 应用 ： 数据 分散 — 集中式 模型 的 设计 ， 历史数据 的 导出 ， 应用 系统 间 的 数据 接口 。 并 对 如何 设计 这些 触发器 进行 了 探讨 。 
 　 　 关键词 　 触发器 ， 数据 分散 — 集中 模型 ， 历史数据 导出 ， 数据 接口 
 1 　 引言 
 　 　 在 大型 数据库 设计 中 ， 会 经常 用到 触发器 。 它 的 特点 是 ： 一旦 被 定义 ， 就 存在 于 后台 数据库系统 （ server ， 服务器 方 ） 中 ， 并会 在 相应 条件 下 自动 地隐式 执行 ， 从而 使得 它 的 设计 既 与 前台 （ client ， 客户机 方 ） 的 平台 无关 ， 又 免除 了 前台 相关 的 数据 操作 设计 。 
 　 　 在 文献 ［ 1 ］ 中 ， 列举 了 触发器 的 几种 应用 ： 审计 ; 复杂 的 完整性 约束 ; 复杂 的 安全性 授权 ; 事件 登录 ; 列值 导出 ; 分布式 数据库 中 表 复制 。 
 2 　 触发器 的 另外 几种 应用 
 2.1 　 数据 分散 — — 集中式 模型 设计 
 　 　 在 实际 开发 过程 中 ， 经常 遇到 这样 的 数据 维护 要求 ： 单位 由 多个 部门 组成 ， 要求 各 部门 只能 维护 本 部门 的 数据 ， 但 另一方面 ， 又 需要 将 分散 到 各 部门 的 数据 集中 起来 进行 汇总 ， 得到 本 单位 的 汇总 数据 。 如 一个 学校 有 多个 系 ， 学校 需要 各系 的 成绩 汇总 ； 一个 工厂 有 多个 生产 车间 ， 工厂 需要 各 车间 的 产量 汇总 ； 一个 公司 有 多个 销售 部门 ， 公司 需要 各 部门 的 销量 汇总 等等 。 
 　 　 在 这种 情况 下 ， 如果 不 使用 触发器 的话 ， 数据库 设计 就 存在 困难 ： 
 　 　 .   如果 为 每个 部门 都 建立 一个 表 ， 显然 难以 得到 汇总 的 数据 （ 在 这种 情况 下 ， 无法 利用 视图 机制 ） ； 
 　 　 .   如果 所有 的 部门 都 共享 一个 表 的话 （ 这时 ， 这 张表中 的 数据 实际 就是 汇总 的 数据 ） ， 因为 每个 部门 需要 维护 数据 ， 所以 都 对 这个 表有 修改权 ， 因此 在 数据安全 上 难以 控制 。 
 　 　 使用 触发器 的话 ， 上述 问题 便 可 迎刃而解 ： 为 每个 部门 建立 一个 表 （ 该 部门 的 所有 权限 只 限于 对此 表有 修改权 ） ， 再 为 汇总 数据 也 建立 一个 表 ， 然后 在 每个 部门 表上 建立 触发器 ， 使得 部门 表上 有 数据 更新 时 ， 便会 对应 地 更改 汇总表 中 的 相关 数据 （ 见图 1 ） 。 
 
 图 1 　 触发器 应用 于 数据 分散 — — 集中式 模型 
 　 　 在 这种 模型 中 ， 要 注意 设计 好 部门 表 相关 字段 的 完整性 约束 ， 使 各 部门 表内 的 数据 是 唯一 的 ， 以 防止 不同 部门 表 出现 相同 的 数据 记录 ， 从而 导致 在 汇总表 中 出现 混乱 。 
 2.2 　 历史数据 导出 
 　 　 数据库 中 的 表只 记载 最新 的 数据 ， 而 不 记载 历史数据 。 但 在 很多 情况 下 ， 历史数据 的 记载 与 分析 反而 比 现实 数据 更有意义 （ 这 也 正是 数据仓库 与 数据库 的 区别 之一 ） ， 比如 学校 中学 号 的 变动 ， 工厂 定额 的 更改 ， 公司 产品 和 原材料 价格 的 变化 、 股票 的 升跌 等等 ， 它们 都 需要 记录 历史数据 。 
 　 　 如何 使 数据库 也 能 记载 历史数据 呢 ？ 使用 触发器 可以 解决 这 类 问题 。 
 　 　 建立 这 类 触发器 的 步骤 是 ： 建立 数据表 后 ， 再 建立 对应 的 历史 表 （ 一般而言 ， 历史 表在 字 段 组成 上 是 数据表 的 超集 ， 即 在 原 数据 表字 段 上 再 增加 有关 时间 的 字 段 ） ， 然后 在 两者之间 设立 触发器 （ 见图 2 ） 。 这样 ， 每当 数据表 有 数据 变动 ， 触发器 便 将 变动 的 数据 记入 历史 数据表 中 ， 从而 达到 自动记录 历史数据 的 目的 。 
 
 图 2 　 历史数据 的 导出 模式 
 2.3 　 应用 系统 间 的 数据 接口 
 　 　 一个 完整 的 信息系统 的 建设 一般 不是 一步到位 的 ， 往往 是 分期分批 完成 ， 而 不 同期 次 的 系统 往往 又会有 数据 传递 ， 然而 由于 需求 发生变化 或是 其他 原因 ， 不 同期 次 系统 的 数据库 设计 在 表 结构 甚至 字段 上 的 设计 都 可能 会 互不 一致 （ 即使 是 在 同 一期 的 开发 过程 中 ， 由于 总体设计 或 数据 字典 方面 的 偏差 或 不足 ， 或者 需要 集成 多家 系统 ， 这种 现象 也 会 经常出现 ） 。 在 不 可能 重建 这些 系统 的 情况 下 ， 它们 之间 的 数据 能 无缝 传递 吗 ？ 换言之 ， 它们 之间 能够 做到 无缝 连接 吗 ？ 
 　 　 在 这种 情况 下 ， 触发器 可以 是 一种 较 好 的 解决 方式 ： 建立 中间 表 ， 中间 表 的 设计 符合 需方 应用 系统 的 设计 格式 ， 而 它 的 数据 又 与 供方 应用 系统 的 数据 保持一致 。 （ 见图 3 ） 
 
 图 3 　 中间 作为 不同 应用 系统 间 的 数据 接口 
 　 　 要 注意 的 一点 是 ： 图示 应用 系统 间 的 数据 是 单向 流动 的 （ 即 数据 传递 ） ； 如果 数据 需要 双向 流动 （ 即 数据交换 ） ， 那么 在 触发器 设计 中 应有 退出 机制 ， 以 避免 发生 触发器 的 递归 。 
 3 　 结语 
 　 　 触发器 对 数据库 开发 过程 中 遇到 的 问题 ， 往往 会 有 独到 的 解决 方法 。 触发器 能 使 数据库 的 设计 变得 简洁 和 高效 。 文中 的 3 个 例子 ， 代表 了 触发器 3 个 方面 的 典型 应用 。 
 作者简介 ： 李 振华 　 硕士 ， 讲师 。 现 从事 计算机网络 及 数据库 的 教学 与 科研工作 。 
 作者 单位 ： 中国地质大学 网络 中心 　 湖北 . 武汉 （ 430074 ) 
 参考文献 
 ［ 1 ］ 　 沈佩娟 ， 汤荷 美 , 编著 .   数据库 管理 及 应用 开发 ( 第 1 版 ) . 北京 ： 清华大学出版社 ， 1995 , 6 
 收稿 日期 : 1999 - 03 - 15 
