信息 与 控制 
 INFORMATION   AND   CONTROL 
 1999 年   第 28 卷   第 2 期   Vol.28   No.2   1999 
 
 
 
 用 约束 满足 自 适应 神经网络 和 有效 的 启发式 
 算法 解 Job - shop 调度 问题 * 
 杨圣祥 　 汪定伟 
 　 　 摘要 　 提出 一种 用 约束 满足 自 适应 神经网络 结合 有效 的 启发式 算法 求解 Job - shop 调度 问题 ． 在 混合 算法 中 ， 自 适应 神经网络 具有 在 网络 运行 过程 中 神经元 的 偏置 和 连接 权值 自 适应 取值 的 特性 ， 被 用来 求得 调度 问题 的 可行 解 ， 启发式 算法 分别 被 用来 增强 神经网络 的 性能 、 获得 确定 排序 下 最优 解 和 提高 可行 解 的 质量 ． 仿真 表明 了 本文 提出 的 混合 算法 的 快速 有效性 ． 
 　 　 关键词 　 约束 满足 自 适应 神经网络 ， 启发式 算法 ， Job - shop 调度 ， 整数 线性规划 
 USING   CONSTRAINT   SATISFACTION   ADAPTIVE   NEURAL   NETWORK 
 AND   EFFICENT   HEURISITICS   FOR   JOB - SHOP   SCHEDULING 
 YANG   Shengxiamg 　 WANG   Dingwei 
 ( Department   of   Systems   Engineering , Northeastern   University , Shenyang 　 110006 ) 
 　 　 Abstract 　 Based   on   constraint   satisfaction   this   paper   proposes   a   new   adaptive   neural   network , and   an   efficient   heuristics   hybrid   algorithm   for   Job - shop   scheduling .   The   neural   network   has   the   property   of   adapting   its   connection   weights   and   biases   of   neural   units   while   solving   feasible   solution .   Heuristics   are   used   to   improve   he   property   of   neural   network   and   to   obtain   local   optimal   solution   from   solved   feasible   solution   by   neural   network   with   orders   of   operations   determined   and   unchanged .   Computer   simulations   have   shown   that   the   proposed   hybrid   algorithm   is   of   high   speed   and   excellent   efficiency .   
 　 　 Key   words 　 constraint   satisfaction   adaptive   neural   network , heuristics , Job - shop   scheduling , integer   linear   programming 
 　 　 1 　 引言 
 　 　 生产 调度 问题 就是 按 时间 分配资源 来 完成 任务 的 问题 ［ 1 ］ ， Job - shop 调度 问题 是 一类 复杂 且 极具 代表性 的 生产 调度 问题 ： 给定 m 台 机器 加工 n 个 工件 ， 每个 工件 有 其 特定 的 加工 顺序 或 路线 ， 调度 目标 就是 确定 每台 机器 上 各 工件 工序 的 加工 顺序 及 开工 时间 ， 使 某个 性能指标 （ 如 制造 周期 ） 最小 ［ 2 ］ ． Foo   S . Y . 最早 提出 用 神经网络 求解 Job - shop 调度 问题 ［ 3 ］ ， 其后 又 有 一些 人用 神经网络 对此 问题 进行 了 研究 ［ 4 , 5 , 6 ］ ， 但 所有 这些 网络 基本上 都 是非 自 适应 的 ， 必须 在 网络 运行 前先 确定 神经元 自身 的 偏置 和 神经元 之间 的 连接 权值 ． 本文 采用 基于 约束 满足 基础 上 的 自 适应 神经网络 （ CSANN ） ， 结合 相关 的 启发式 算法 来 求解 Job - shop 调度 问题 ． CSANN 具有 神经元 的 偏置 和 连接 权值 在 网络 运行 过程 中自 适应 取值 的 特性 ， 用来 求得 调度 问题 的 可行 解 ， 而 启发式 算法 被 分别 用来 增强 神经网络 的 性能 、 获得 确定 排序 下 最优 解 和 提高 可行 解 的 质量 ． 仿真 实验 表明 了 混合 算法 的 快速 有效性 ． 
 　 　 2 　 Job - shop 调度 问题 的 数学模型 
 　 　 设 N = { 1 , … , n } ， M = { 1 , … m } ， ni 是 工件 i 的 工序 数 ， 用 Oikq 表示 工件 i 第 k 道 在 第 q 台 机器 上 加工 的 工序 ， 其 开始 加工 时间 和 加工 时间 （ 工序 加工 时间 已知 ） 记为 Sikq 和 Tikq , Sieiq 和 Tieiq 分别 是 工件 i 最后 一道 工序 的 开始 加工 时间 和 加工 时间 ， ri 和 di 分别 是 工件 i 的 投料 时间 和 交货 期限 ， Pi 是 工件 的 有序 工序 对 \ 集合 ， 其中 Oikp 优先 于 Oikq ， Rq 是 使用 机器 q 的 所有 工序 Oikq 的 集合 ， 以 最小化 最大 完工 时间 为 性能指标 ， 则 Job - shop 调度 问题 数学模型 可 采用 整数 线性规划 描述 如下 
 
 s . t . 
 　 　 　 　 　 　 　 　 　 　 　 ( 1 ) 
 　 　 　 　 　 　 　 　 　 ( 2 ) 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 3 ) 
 其中 ， 目标 函数 E 是 取 所有 工件 最后 一道 工序 完工 时间 的 最大值 ， 即 制造 周期 ； 式 （ 1 ） 表示 同一 工件 的 不同 工序 不能 同时 加工 ， 且 必须 满足 工序 顺序 约束 ； 式 ( 2 ) 表示 每台 机器 同一 时刻 只能 加工 一个 工件 ， 即 资源 约束 ． 式 （ 3 ） 表示 投料 时间 和 交货 期限 约束 ． 
 　 　 3 　 约束 满足 自 适应 神经网络 
 　 　 CSANN 是 由 在 通用 神经元 （ 见图 1 ） 基础 上 ， 分别 定义 的 表示 工序 开工 时间 的 ST 类 （ Starting   Time ） 神经元 、 工序 顺序 约束 是否 满足 的 SC （ Sequence   Constraint ） 类 神经元 和 资源 约束 是否 满足 的 RC （ Resource   Constraint ） 类 神经元 组成 ， 这三类 神经元 通过 相互连接 组成 工序 顺序 约束 — — SC 模块 和 资源 约束 — — RC 模块 ． SC 模块 的 每个 单元 由 一个 SC 类 和 两个 ST 类 神经元 组成 （ 见图 2 ） ， 用来 判断 同一 工件 的 工序 顺序 约束 是否 得到 满足 ， RC 模块 的 每个 单元 由 一个 RC 类 和 两个 ST 类 神经元 组成 （ 见图 3 ） ， 用来 判断 资源 约束 是否 得到 满足 ， 当 工序 顺序 约束 或 资源 约束条件 不 满足 时 ， 通过 适当 的 反馈 调节 来 消除 约束 冲突 ． 
 
 
 图 1 　 通用 神经元 模型 
 
 图 2 　 SC 模块 单元 
 
 图 3 　 RC 模块 单元 
 　 　 通用 神经元 由 对 输入 信号 的 线性 加权 求和 函数 与 非线性 函数 f ( . ) 级联 而成 ， 见图 1 ． 图 1 中 ， ST 类 神经元 用于 约束 各 工件 的 工序 加工 活动 开始 时间 ， 定义 如下 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 4 ) 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 5 ) 
 其中 ， （ 4 ） 式 右边 的 第一 和 第二项 分别 是 相关 的 SC 类 和 RC 类 神经元 的 反馈 调节作用 ， 第三项 是 ST 类 神经元 STi 上 一 时刻 的 输出 ， （ 5 ） 式 中 TSTi 是 STi 所 对应 工序 的 加工 时间 ． 
 　 　 SC 类 、 RC 类 神经元 采集 ST 类 神经元 的 输出 ， 分别 用来 判断 （ 1 ） 式 表示 的 工序 顺序 约束 、 （ 2 ） 式 表示 的 机器 资源 约束 是否 满足 ， 定义 形式 相同 ， 如下 所示 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 6 ) 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 7 ) 
 其中 ， Ci = SCi 或 RCi ， BCi 是 神经元 SCi 或 RCi 的 偏置 设定 （ 见图 2 和 图 3 ） ． 图 2 中 \ ∈ Pi ， 各权值 与 偏置 取值 如 （ 8 ） 式 所示 ． 图 3 中 Oikq 和 Ojlq ∈ Rq ， 各权值 与 偏置 取值 视 网络 运行 t 时刻 具体情况 而定 ， 若 Sikq ( t ) ≤ Sjlq ( t ) ， 由 （ 9 ） 式 确定 ， 若 Sikq ( t ) ≥ Sjlq ( t ) ， 由 （ 10 ） 式 确定 ． 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 8 ) 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 9 ) 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 10 ) 
 上述 各式 中 ， W 是 正 的 可调 参数 ． 
 　 　 针对 Job - shop 调度 问题 ， CSANN 的 建模 步骤 ： 确定 工件 数 n 和 机器 数 m ， 工件 i 的 工序 数 ni ； 确定 ST 类 神经元 的 数目 ， 并 为 每个 ST 类 神经元 对应 工序 Oikq 编号 为 STikq ； 根据 工艺 要求 ， 确定 Pi 和 Rq 集合 ， 构造 SC 模块 和 RC 模块 ． 
 　 　 4 　 算法 描述 
 　 　 求解 Job - shop 调度 问题 的 混合 算法 由 CSANN 和 启发式 算法 组成 ， CSANN 用来 消解 约束 冲突 ， 得到 可行 调度 解 ， 启发式 算法 被 分别 用来 增强 神经网络 的 性能 、 获得 确定 排序 下 最优 解以 提高 可行 解 的 质量 ． 
 　 　 4.1 　 启发式 算法 描述 
 　 　 算法 1 （ 相邻 工序 互换 排序 算法 ） ： 在 神经网络 运行 过程 中 t 时刻 ， 对 同一 工件 的 相邻 工序 　 ∈ Pi ( i ∈ N ) ， 当 Sikp ( t ) ≥ Silq 时 ， 互换 Oikp 和 Oilq 的 开工 时间 以 互换 其 加工 顺序 ， 以 减少 因 工序 顺序 冲突 造成 的 反馈 调节 次数 ， 加速 神经网络 的 运行 ， 算法 如下 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 11 ) 
 另一方面 ， 在 神经网络 运行 过程 中 ， 由于 工序 顺序 约束 冲突 的 反馈 调节 和 资源 约束 冲突 的 反馈 调节 之间 可能 存在 矛盾 ， 从而 造成 “ 死锁 ” 现象 ， 即 神经网络 陷入 死循环 而 不能 收敛 到 对应 问题 可行 解 的 稳定 状态 ， 此时 可 通过 对 同一 机器 上 的 相邻 工序 ， 满足 一定 条件 时 ， 互换 开工 时间 以 互换 其 加工 顺序 ， 从而 消除 网络 求解 过程 中 可能 出现 的 “ 死锁 ” 现象 ， 以 确保 得到 可行 解 ， 算法 如下 ： Oikp 和 Ojlq ∈ Rq ( q ∈ M ) , 当 Tqikjl ( t ) ≥ T 时 ， 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 12 ) 
 其中 ， Tqikjl ( t ) 是 网络 运行 t 时刻 ， 机器 q 上 加工 的 工序 Oikq 和 Ojlq 对 已经 连续 需要 调整 的 次数 ， T 是 设定 的 常数 （ 例如 5 ） ． 
 　 　 算法 2 （ 确定 排序 下 最优 算法 ） ： 对 CSANN 得到 的 可行 调度 解 ， 在 不 改变 各 机器 上 工序 排序 的 情况 下 ， 对 所有 机器 压缩 空闲 等待 同时 有 工件 可 加工 的 时间 ， 以 缩短 可行 解 的 制造 周期 ， 得到 确定 排序 下 最优 的 可行 调度 解 ． 具体 算法 是 按 时间 从小到大 顺序 ， 将 遇到 的 所有 工序 的 开工 时间 作 如下 修改 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ( 13 ) 
 其中 ， Sjlp 是 算法 运行 前 工序 Ojlp 的 开工 时间 ， S ′ ikp 是 算法 运行 后 得到 的 确定 排序 下 最优 解中 Oikp 的 开工 时间 ， Oik - lq 是 Oikp 同一 工件 i 的 紧前 工序 ， Ojlp 是 机器 p 上 Oikp 的 紧前 工序 ． （ 13 ） 式 表示 将 Oikp 的 开工 时间 提前 到 Oik - lq 的 完工 时间 或 Sjlp 的 完工 时间 ． 
 　 　 4.2 　 混合 算法 描述 
 　 　 混合 算法 求解 Job - shop 调度 问题 基本 步骤 为 ： 
 　 　 ( 1 ）   建立 CSANN 模型 ， 设定 参数 T 和 W 的 值 ， 设定 最大 运行 次数 ； 
 　 　 ( 2 ）   随机 或 统一 给定 各 工序 开始 加工 时间 ISTikp ， 作为 相应 的 ST 神经元 的 初始 输出 ； 
 　 　 ( 3 ）   运行 SC 模块 各 单元 ， 按 （ 6 、 7 和 8 ） 式 计算 OSCikp ( t ) ， 若 OSCikp ( t ) ≠ 0 ， 表示 （ 1 ） 式 对应 的 工序 顺序 约束 不 满足 ， 则 按 （ 14 ） 式 或 （ 11 ） 式 （ 若 启用 算法 ( 1 ） 和 （ 5 ） 式 修改 Sikp ( t + 1 ) 和 Silq ( t + 1 ) 
 　 　 　 　 　 　 　 　 　 ( 14 ) 
 　 　 ( 4 ）   运行 RC 模块 各 单元 ， 按 （ 6 、 7 、 9 或 10 ） 式 计算 ORCqikjl ( t ) ， 若 ORCqikjl ( t ) ≠ 0 ， 表示 （ 2 ） 式 对应 的 资源 约束 不 满足 ， 则 按 （ 15 ） 式 或 （ 12 ） 式 （ 若 启用 算法 1 ） 和 （ 5 ） 修改 Sik1 ( t + 1 ) 和 Sjlq ( t + 1 ) ． 重复 步骤 3 和 步骤 4 ， 直至 得到 可行 解 ． 若 不 启用 算法 2 ， 则 结束 本次 运行 
 　 　 　 　 　 　 　 ( 15 ) 
 　 　 ( 5 ）   若 算法 2 启用 ， 则 运用 算法 2 ， 得到 确定 排序 下 最优 解 ； 
 　 　 ( 6 ）   若 运行 次数 未 达到 设定 最大 运行 次数 ， 返回 步骤 2 ； 否则 停止 运行 ， 并 输出 最好 解 ． 
 　 　 5 　 仿真 实验 结果 
 　 　 表 1 给出 一个 6 × 6   Job - shop 调度 问题 的 原始数据 [ 5 ] ， （ s , m , t ） 表示 工件 的 第 s 道工序 在 第 m 台 机器 上 加工 ， 加工 时间 为 t ； “ → ” 表示 工序 间 先后顺序 ， 问题 最优 值 （ 最小 制造 周期 ） 是 55 ． 
 表 1 　 6 × 6Job - shop 调度 问题 原始数据 
 
 工件 1 （ 1 , 3 , 1 ） → （ 2 , 1 , 3 ） → ( 3 , 2 , 6 ） → （ 4 , 4 , 7 ） → ( 5 , 6 , 3 ） → （ 6 , 5 , 6 ） 
 工件 2 （ 1 , 2 , 8 ） → （ 2 , 3 , 5 ） → （ 3 , 5 , 10 ) → （ 4 , 6 , 10 ) → ( 5 , 1 , 10 ) → （ 6 , 4 , 4 ） 
 工件 3 （ 1 , 3 , 5 ） → （ 2 , 4 , 4 ） → （ 3 , 6 , 8 ） → （ 4 , 1 , 9 ） → （ 5 , 2 , 1 ） → （ 6 , 5 , 7 ） 
 工件 4 （ 1 , 2 , 5 ） → （ 2 , 1 , 5 ） → ( 3 , 3 , 5 ） → （ 4 , 4 , 3 ） → （ 5 , 5 , 8 ） → （ 6 , 6 , 9 ） 
 工件 5 （ 1 , 3 , 9 ） → （ 2 , 2 , 3 ） → （ 3 , 5 , 5 ） → （ 4 , 6 , 4 ） → （ 5 , 1 , 3 ） → （ 6 , 4 , 1 ） 
 工件 6 （ 1 , 2 , 3 ） → （ 2 , 4 , 3 ） → （ 3 , 6 , 9 ） → （ 4 , 1 , 10 ) → （ 5 , 5 , 4 ） → （ 6 , 3 , 1 ） 
 
 　 　 对 上述 调度 问题 ， 采用 两种 方法 进行 仿真 实验 ： 方法 1 = CSANN + 算法 1 ， 方法 2 = CSANN + 算法 1 + 算法 2 ， 实验 中 各 参数设置 为 ： T = 5 和 W = 0.5 ． 仿真 中 各 工件 投料 时间 设为 0 ， 即 在 0 时刻 所有 工件 都 已 释放 或 可 加工 ， 完工 时间 约束 是 事先 设定 的 期望 制造 周期 ， 用作 所有 工件 的 交货期 约束 ． 在 每种 方法 下 和 不同 的 完工 时间 约束 ， 进行 100 个 实验 ， 其中 ， 第一个 实验 是 在 零 初始条件 下 进行 的 ， 即 所有 的 工序 初始 开工 时间 都 设为 零 ， 而 其他 99 个 实验 中 ， 所有 初始 解中 各 工序 初始 开工 时间 取 [ 0 ， 100 ] 之间 的 均匀分布 ． 仿真 得到 其 统计 平均值 结果 见表 2 （ 运行 时间 为 0 秒 表示 不到 1 秒 ） ． 图 4 和 图 5 分别 是 采用 方法 1 和 方法 2 ， 在 完工 时间 约束 设为 100 时和用 同一个 随机 产生 的 初始 解 进行 运算 的 结果 甘特图 （ 方框 中 [ i , j ] 表示 第 i 个 工件 的 第 j 道工序 ） ． 
 
 图 4 　 方法 1 求解 结果 
 
 图 5 　 方法 2 求解 结果 
 　 　 由图 4 和 图 5 可见 ， 由于 算法 2 的 启用 ， 运算 的 结果 性能指标 得到 明显 的 提高 （ 制造 周期 由 100 缩减 为 66 ） ． 图 6 是 采用 方法 2 在 完工 时间 约束 设为 58 （ 近 优值 ） 时 ， 随机 产生 初始 解 进行 运算 的 结果 ． 
 
 图 6 　 方法 2 求得 的 最优 解 
 表 2 　 6 × 6 调度 问题 的 实验 结果 
 
 求解 方法 完工 时间 约束 各 工序 初始 开 
 工 时间 设定 调度 指标 E 
 平均 / 最小 / 最大 运行 时间 （ 秒 ） 
 平均 / 最小 / 最大 
 方法 12000711 
 方法 1200 随机 产生 106.56 / 99 / 1210.10 / 0 / 1 
 方法 22000691 
 方法 2200 随机 产生 76 / 61 / 940.17 / 0 / 1 
 方法 11000711 
 方法 1100 随机 产生 99.50 / 99 / 1000.18 / 0 / 1 
 方法 21000691 
 方法 2100 随机 产生 75 / 60 / 930.21 / 0 / 1 
 方法 158 （ 近 优值 ） 05820 
 方法 158 （ 近 优值 ） 随机 产生 58 / 58 / 585.53 / 0 / 43 
 方法 258 （ 近 优值 ） 05625 
 方法 258 （ 近 优值 ） 随机 产生 57 / 55 / 586.6 / 0 / 44 
 
 　 　 6 　 结束语 
 　 　 仿真 实验 表明 ： ( 1 ） 以 最大 完工 时间 为 性能指标 时 ， 从 零 初始 加工 时间 开始 搜索 ， 对于 各种 完工 时间 约束 ， 采用 方法 1 和 方法 2 一般 都 能 快速 得到 较 好 的 可行 解 ； ( 2 ） 配以 适当 的 完工 时间 约束 ， 采用 方法 1 能够 快速 得到 较 好 的 可行 调度 解 ， 但解 的 性能指标 好坏 依赖于 期望 制造 周期 的 设定 ； ( 3 ） 采用 方法 2 ， 对 不同 的 完工 时间 约束 和 各 工序 初始 开工 时间 ， 都 能 得到 较 好 的 可行 调度 解 、 近 优解 或 最优 解 ． 仿真 实验 表明 本文 提出 的 求解 Job - shop 调度 问题 的 混合 算法 是 快速 有效 的 ． 
 * 国家自然科学基金 ( No.69684005 ) 和 国家 863 计划 CIMS 主题 ( No.863 - 511 - 9069 - 003 ) 共同 资助 课题 . 
 作者简介 ： 杨圣祥 ， 男 ， 26 岁 ， 博士生 ． 研究 领域 为 神经网络 ， 智能 优化 方法 ， 智能 调度 等 ． 
 　 　 　 　 　 汪定伟 ， 男 ， 50 岁 ， 教授 ， 博士生 导师 ． 研究 领域 为 生产 计划 与 调度 理论 ， 建模 与 决策 ， 智能 优化 方法 ． 
 作者 单位 ： 东北大学 信息科学 与 工程学院 系统工程 系 　 沈阳 　 110006 
 参考文献 
 　 1 　 Baker , K .   R . , Introduction   to   Sequence   and   Scheduling , John   Wiley   &   Sons , New   York , 1974 
 　 2 　 Conway , R .   W . , Theory   of   Scheduling , Reading   Mass :   Addison - Wesley   , 1967 
 　 3 　 Foo , S .   Y .   and   Takefuji , Y . , Integer - linear   Programming   Neural   Networks   for   Job - shop   Scheduling , Proc .   IEEE   IJCNN ' 88 , San   Diago , 1988 , 341 ～ 348 
 　 4 　 Zhou   D .   N . , Charkassky , V . , Baldwin , T .   R .   and   Hong , D .   W . , Scaling   Neural   Network   for   Job - shop   Scheduling , Proceedings   IEEE   Int .   Joint   Conference   on   Neural   Networks , 1989 , 889 ～ 894 
 　 5 　 于海斌 ， 智能 生产 调度 方法 及 应用 研究 ， 东北大学 博士论文 ， 1997 
 　 6 　 Willems , T .   M .   and   Brandts , L .   E .   M .   W . , Implementing   Heuristics   as   an   Optimization   Criterion   in   Neural   Networks   for   Job - shop   Scheduling .   Journal   of   Intelligent   Manufacturing , 1995 , 6 , 377 ～ 387 
 1998 - 03 - 23 收稿 
