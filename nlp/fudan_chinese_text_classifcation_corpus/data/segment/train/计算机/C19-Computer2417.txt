计算机 研究 与 发展 
 JOURNAL   OF   COMPUTER   RESEARCH   AND   DEVELOPMENT 
 1999 年 　 第 36 卷 　 第 11 期 　 Vol.36 　 No.11 　 1999 
 
 
 
 一种 基于 轮廓 多边形 的 图像 变形 算法 
 王 　 进 　 潘志庚 　 叶 澄清 
 摘 　 要 ： 文中 利用 两条 任意 折线 构成 两个 控制 多边形 , 得到 两条 Beizer 曲线 ， 利用 两 曲线 作为 控制线 对 图像 轮廓 多边形 内 的 网格 控制点 进行 映射 ， 最后 利用 一个 快速 有效 的 插值 算法 进行 目标 - 源 映射 ， 描绘 各个 像素点 实现 变形 效果 . 实验 证明 ， 该 算法 快速 有效 ， 结果 形象 逼真 ， 具有 一定 的 实用价值 . 
 关键词 ： 变形 ， Bezier   曲线 ， 区域 映射 ， 插值 
 中图法 分类号 ： TP391 
 AN   IMAGE   DEFORMATION   ALGORITHM   BASED   ON 
 POLYGON   OF   OUTLINE 
 WANG   Jin ,   PAN   Zhi - Geng ,   and   YE   Cheng - Qing 
 （ State   Key   Laboratory   of   CAD   &   CG ， Zhejiang   University ， Hangzhou   310027 ） 
  （ Department   of   Computer   Science ， Zhejiang   University ， Hangzhou   310027 ） 
 Abstract 　 Two   Beizer   curves   from   two   random   control   ploygons   are   obtained   firstly   in   the   present   paper ， which   are   constituted   of   two   discount   lines ；   then   these   curves   are   taken   as   control   lines   to   map   those   web   control   points   within   a   ploygon   of   outline ； Finally ,   an   intuitive   and   expeditious   interpolation   algorithm   realizing   object - source   mapping   is   used   to   paint   every   pixel .   Experimental   results   of   image   deformation   using   the   algorithm   prove   that   this   algorithm   is   intuitive ,   expeditious ,   and   practical . 
 Key   words 　 image   deformtion ,   Bezier   curves ,   region   mapping ,   interpolation 
 1 　 引 　 言 
 　 　 图像 变形 技术 在 影视 、 广告 、 娱乐 、 轻工 CAD 等 领域 已有 了 广泛 的 应用 . 电视广告 中 文字 、 图片 各种各样 的 形状 变换 ， 都 是 图像 变形 的 有效 应用 . 图像 变形 分为 二维 变形 、 三维 变形 两种 ， 其中 二维 变形 是 对 二维 平面 的 图形 、 图像 进行 变形 处理 . 本文 讨论 目前 应用 较 多 的 二维 变形 . 
 2 　 利用 两个 控制 多边形 对 图像 轮廓 多边形 进行 坐标 变化 
 2.1 　 由 两个 控制 多边形 生成 两条 Bezier 曲线 
 　 　 该 算法 以 两条 任意 折线 L1 ， L2 作为 输入 . 设 L1 由 n + 1 个点 p0 , p1 , p2 , p3 , … , pn   组成 ， L2 由 m + 1 个点 q0 , q1 , q2 , q3 , … , qm   组成 ， 则 可 得到 ： 
 n 次 的 Bezier 曲线 L1 ′ ： 　 
 m 次 的 Bezier 曲线 L2 ′ ： 　 　 
 其 情形 如图 1 所示 . 
 
 
 图 1 
 2.2 　 利用 两条 Bezier 曲线 对 轮廓 多边形 进行 变化 
 　 　 设 轮廓 多边形 Polygon 由 s + 1 个 顶点 u0 , u1 , u2 , u3 ， … ， us 组成 ， 则 对 任一 顶点 ui ( x , y ) 的 坐标 进行 如下 变化 （ 图 2 ） . 
 
 
 图 2 
 2.2 . 1 　 对 轮廓 多边形 的 各个 顶点 进行 映射 
 　 　 假设 已知 图像 的 轮廓 多边形 上 任意 一点 ui （ x ， y ） ， 定义 图像 的 主轴 方向 为 竖直 方向 （ 即 外接 矩形 横向 边 的 方向 与 X 轴 夹角 θ 为 0 ） ， 如图 2 所示 . 
 　 　 过点 ui （ x ， y ） 分别 作 X 轴 、 Y 轴 的 平行线 ， 与 矩形 4 条边 的 交点 设为 t （ xt ， yt ） ， b （ xb ， yb ） ， l （ xl ， yl ） ， r （ xr ， yr ） . 令 ： 
 
 以点 的 个数 表示 Bezier 曲线 段 的 长度 ， 在 图 2 中有 ： 
 
 故   
 
 同理 可 得 
 
 这样 就 得到 了 与 点 ui ( x , y ) 相对 应 的 直线 段 ： 
 同样 ， 在 图 （ 2 ） 中有 
 
 即可 得到 ： 
 
 　 　 至此 ， 与 ui ( x , y ) 相对 应 的 点 u ′ i ( x , y ) 已经 求 出 ； 应用 该 算法 依次 求出 与 轮廓 多边形 各个 顶点 相对 应 的 点 . 　 　 
 2.2 . 2 　 对 轮廓 多边形 的 各个 顶点 进行 映射 
 　 　 算法 再次 调用 2.1 节 的 思想 对 映射 后 的 轮廓 多边形 进行 平滑 处理 . 
 　 　 如果 图像 轮廓 由 多个 多边形 组成 ， 则 依次 对 各个 多边形 进行 上述 变换 ； 这样 就 可 得到 对 图像 轮廓 平滑 自由 的 扭曲 变形 . 图 3 即 是 其中 的 一个 应用 . 
 
 
 图 3 
 2.3 　 利用 两条 Bezier 曲线 对 网格 控制点 进行 坐标 变换 
 　 　 应用 2.2 节中 的 算法 ， 对 处于 轮廓 多边形 内部 的 所有 网格 控制点 进行 坐标 变换 ， 为 利用 第 3 节 算法 进行 各个 像素点 插值 做好 准备 ， 如图 4 所示 . 
 
 
 图 4 
 2.4 　 图像 主轴 为 任意 方向 的 情况 
 　 　 上述 各种 处理 的 前提 均 为 图像 的 主轴 方向 为 竖直 方向 （ 即 外接 矩形 横向 边 的 方向 与 X 轴 夹角 θ 为 0 ） ， 现在 将 该 算法 推广 到 θ 为 任意 角度 的 情况 . 
 　 　 利用 冒泡 替换法 易求 出 主轴 方向 为 θ 度 的 外接 矩形 的 位置 ， 不妨 设 4 个 顶点 为 LeftTop （ xlt ， ylt ）   ， LeftBottom （ xlb ， ylb ） ， RightTop （ xrt ， yrt ）   ， RightBottom （ xrb ， yrb ） ， 如图 5 所示 . 
 
 
 图 5 
 　 　 对于 点 lp ( x1 , y1 ) 易知 有 关系式 ： 
 
 即可 求得 x1 ， y1 的 值 ； 进而 可知 ： 
 
 同样 可求 出 t2 ； 接着 的 计算 完全 同 2.2 节 、 2.3 节 . 
 3 　 一种 快速 的 插值 算法 
 　 　 这里 利用 双 线性插值 的 思想 ， 推导 一种 便于 编程 、 速度 快 的 插值 方法 . 
 　 　 我们 可 假想 在 源 图像 中有 许多 网格 , 在 源 图像 中 拖动 任 一点 , 将 产生 如图 6 的 4 个 区域 的 源 区域 和 目标 区域 . 对于 这 4 个 区域 分别 进行 目标 - 源 映射 , 即可 完成 图像 变形 . 
 　 　 如图 6 所示 ， 假设 用户 在 原 图像 中 的 down 点 拖动 到 了 up 点 , 运用 目标 - 源 变形 可知 ， 只 要求 出 目标 四边形 的 各点 在 原来 的 四边形 的 相应 位置 , 把 目标 四边形 的 灰度 值置 为 原来 四边形 的 相应 位置 的 周围 四点 灰度 值 的 平均值 , 即 完成 了 图像 变形 . 这个 方法 同时 完成 了 映射 和 插值 操作 ， 不管 目标 四边形 比 原来 的 四边形 大 多少 ( 即 不管 图像 变形 扭曲 得 多么 厉害 ) , 都 可以 求出 在 原来 的 四边形 的 相应 点 . 具体 的 映射 算法 如图 7 所示 . 　 
 
 
 图 6 　 欲 变换 的 4 个 区域 
 
 
 图 7 　 目标 区域 映射 为源 区域 的 映射 图 
 　 　 如上图 , 假设 ( a , b , c , d ) 是 目标 四边形 , 我们 必须 求 出 ( a , b , c , d ) 中 所有 的 点 P ( x , y ) 在 ( aa , bb , cc , dd ) 中 的 对应点 P ′ ( xx , yy ) , 我们 这里 所说 的 点 即 像素点 . 
 　 　 我们 知道 , 直线 ab 上 的 任 一点 A 可 表示 为 a × ( 1 - α ) + b × α ,   0 ≤ α ≤ 1 ; 即 : 
 Ax = ax × ( 1 - α ) + bx × α   ,   Ay = ay × ( 1 - α ) + by × α . 
 这里 ， Ax 表示 A 点 的 横坐标 , Ay 表示 A 点 的 纵坐标 . ax 表示 a 点 的 横坐标 ,   ay 表示 a 点 的 纵坐标 ， 下同 . 
 　 　 同理 , 直线 bc 上 的 任 一点 B 可以 表示 为 
 Bx = bx × ( 1 - β ) + cx × β ;   By = by × ( 1 - β ) + cy × β   0 ≤ β ≤ 1 ; 
 由此 得到 启发 : 四边形 ( a , b , c , d ) 中 的 任 一点 P ( x , y ) 可以 表示 为 
 x = ( 1 - β ) × ( 1 - α ) × ax + ( 1 - β ) × α × dx + ( 1 - α ) × β × bx + α × β × cx 　 　 ( 1 ) 
 y = ( 1 - β ) × ( 1 - α ) × ay + ( 1 - β ) × α × dy + ( 1 - α ) × β × by + α × β × cy 　 　 ( 2 ) 
 其中   0 ≤ α ≤ 1 ,   0 ≤ β ≤ 1 . 
 　 　 我们 要求 出 P 点 在 ( aa , bb , cc , dd ) 中 的 相应 点 P ′ ( xx , yy ) , 即由式 ( 1 ) 和 式 ( 2 ) 解 出 α 和 β , 代入 下 式 ： 
 x0 = ( 1 - β ) × ( 1 - α ) × aax + ( 1 - β ) × α × ddx + ( 1 - α ) × β × bbx + α × β × ccx 　 　 ( 3 ) 
 y0 = ( 1 - β ) × ( 1 - α ) × aay + ( 1 - β ) × α × ddy + ( 1 - α ) × β × bby + α × β × ccy 　 　 ( 4 ) 
 　 　 将 x0 , y0 的 值 取整 即 为 所求 的 xx 和 yy .   这样 , 就 得到 了 P ′ 点 的 坐标 . 
 　 　 解 P ′ 点 的 具体 计算 过程 如下 : 
 　 　 假设 ( 1 - α ) × ( 1 - β ) 为 u ; 设 α × ( 1 - β ) 为 v ; 设 β × ( 1 - α ) 为 w ; 设 α × β 为 t . 则 
 u + v + w + t = 1 . 　 　 ( 5 ) 
 　 　 由此 假设 , 经 计算 得到 ： 
 ( u + w ) × ( u + v ) = u 　 　 ( 6 ) 
 ( v + t ) × ( v + u ) = v 　 　 ( 7 ) 
 ( w + t ) × ( w + u ) = w 　 　 ( 8 ) 
 ( v + t ) × ( w + t ) = t 　 　 ( 9 ) 
 　 　 计算 式 ( 6 ) / ( 7 ) 可 得 ： u / v = ( u + w ) / ( v + t ) = ( 1 - α ) / α ； 
 　 　 计算 式 ( 8 ) / ( 9 ) 可 得 ： w / t = ( w + u ) / ( v + t ) = ( 1 - α ) / α . 
 　 　 由此 , 我们 得到 u / v = w / t . 假设 u / v = 1 / k ， 则 v = u × k , t = w × k 
 　 　 从而 式 （ 1 ） 和 式 ( 2 ) 可 写成 ： 
 u × ax + k × u × dx + w × bx + k × w × cx = x ， 　 　 ( 10 ) 
 u × ay + k × u × dy + w × by + k × w × cy = y . 　 　 ( 11 ) 
 由式 ( 10 ) 和 式 ( 11 ) 可 得 ： 
 u × ( ax + k × dx ) + w × ( bx + k × cx ) = x ， 
 u × ( ay + k × dy ) + w × ( by + k × cy ) = y . 
 所以 , 我们 得到 ： 
 　 　 ( 12 ) 
 　 　 ( 13 ) 
 由式 ( 5 ) 和 v = u × k , t = w × k 可 得到 : 
 ( u + w ) × ( 1 + k ) = 1 　 　 ( 14 ) 
 把 式 ( 12 ) 和 式 ( 13 ) 代入 式 ( 14 ) 得到 一个 关于 k 的 一元二次方程 : 
 　 　 ( 15 ) 
 　 　 从式 ( 15 ) 解出 k 代入 式 ( 12 ) 和 式 ( 13 ) 解出 u 和 w , 而 v 和 t 由 v = u × k , t = w × k 得到 . 
 　 　 至此 , u , v , w , t 全部 求 出 , 从而 由 α = v + t 和 β = w + t 解出 了 α 和 β . 把 解出 的 α 和 β 代入 式 ( 3 ) 和 式 ( 4 ) 并 进行 取整 后 即 解出 了 P 点 在 源 矩形 对应点 P ′ . 当然 , 我们 并 不是 简单 地 把 P 点 的 灰度 值置 为 P ′ 点 的 灰度 值 . 而是 把 P 点 的 灰度 值置 为 P ′ 点 周围 4 个点 的 灰度 平均值 . 
 　 　 这样 , 图像 变形 算法 可以 描述 如下 : 
 　 　 　 步骤 1 .   对于 目标 区域 中 任一 像素点 P ( x , y ) 作 步骤 2 . 
 　 　 　 步骤 2 .   用 方程 ( 1 ) 和 ( 2 ) 解出 P 点 的 α 和 β , 将 解得 的 α 和 β 代入 式 ( 3 ) 和 式 （ 4 ） 求出 x0 和 y0 ， 将 x0 和 y0 取整 为 xx 和 yy ,   P ′ ( xx , yy ) 即 为 所求 的 P 点 在 源 矩形 中 的 对应点 . 
 　 　 　 步骤 3 .   将 目标 区域 中 的 像素点 P 的 灰度 值置 为 步骤 2 求得 的 P ′ 点 的 周围 4 个点 的 灰度 平均值 .   若 目标 区域 中 所有 的 像素点 都 执行 了 步骤 2 , 算法 结束 , 否则 对 没 执行 过 映射 的 一个点 转 步骤 2 . 
 4 　 对 整幅 图像 变形 的 算法 
 　 　 现在 ， 变形 有以 2.3 节 的 结果 作为 前提 ， 然后 逐行 、 逐列 依次 对 各个 网格 控制点 进行 迭代 映射 ， 应用 第 3 节 的 插值 算法 进行 各个 像素点 的 绘制 ， 即可 实现 对 整幅 图像 的 变形 . 
 　 　 该 变形 算法 的 整个 流程 描述 如下 ： 
 　 　 　 步骤 1 ．   手工 勾勒 或 系统 检测 图像 边缘 ， 得到 图像 轮廓 的 各个 多边形 ； 
 　 　 　 步骤 2 ．   给出 任意 两条 用于 控制 变形 的 折线 ， 进而 求 出 两条 相应 的 Bezier 曲线 ； 
 　 　 　 步骤 3 ．   从 第一个 轮廓 多边形 开始 依次 处理 ， 直至 各个 轮廓 多边形 全部 处理完毕 ； 
 　 　 　 步骤 4 ．   从 当前 轮廓 多边形 区域 内 的 第一行 开始 依次 处理 ， 直至 各行 全部 处理完毕 ； 
 　 　 　 步骤 5 ．   从 当前 行 的 第一列 的 网格 控制点 开始 依次 处理 ， 直至 各列 全部 处理完毕 ； 
 　 　 　 步骤 6 ．   应用 2.3 节 的 算法 变换 当前 控制点 的 坐标值 ； 应用 第 3 节 的 插值 算法 依次 逐行 、 逐列 进行 相邻 4 个 网格 内 各 像素点 的 插值 绘制 ； 
 　 　 　 步骤 7 ．   将 步骤 5 的 结果 记录下来 ， 替换 源 图像 的 原 像素 ； 
 　 　 　 步骤 8 ．   转 步骤 3 . 
 　 　 图 8   是 两个 应用 结果 . 
 
 ( a ) 由 一张 严肃 的 脸 变成 一张 微笑 的 脸 
 
 图 8 　 各种 变形 效果 
 5 　 结束语 
 　 　 本 节 提出 的 变形 算法 ， 由 两条 Bezier 曲线 间接 控制 ， 使得 变形 过程 更 容易 控制 、 更 灵活 ， 结果 也 很 逼真 ； 文中 给出 的 插值 算法 效率高 、 简单易行 . 有 兴趣 的 读者 可以 很快 地用 C 或 C++ 语言 实现 此 算法 . 文中 控制 折线 的 根据 目的 效果 需要 交互 地 近似 画出 ， 如 不 满意 ， 可 比较 容易 地 进一步 对 控制 折线 局部 调整 . 
 作者简介 ： 王进 ， 博士 研究生 ， 主要 研究 方向 为 轻工 CAD 、 计算机 图形学 ． 
 　 　 　 　 　 潘志庚 ， 博士生 导师 ， 主要 研究 方向 为 虚拟现实 、 计算机 图形学 ． 
 　 　 　 　 　 叶 澄清 ， 博士生 导师 ， 主要 研究 方向 为 智能 计算机系统 . 
 作者 单位 ： 王 　 进 　 潘志庚 　 浙江大学 CAD   &   CG 国家 重点 实验室 　 杭州 　 310027 
 　 　 　 　 　 叶 澄清 　 浙江大学 计算机科学 系 　 杭州 　 310027 
 参考文献 ： 
 1 　 Hu   Xiaoxue .   The   algorithms   for   region   mapping   and   their   applications .   Chinese   Journal   of   Advanced   Software   Research ,   1992 ,   5 ( 2 ) :   87 ～ 95 
 2 　 劳 志强 , 潘云鹤 .   一个 基于 特征 的 图像 变形 算法 .   计算机辅助 设计 与 图形学 学报 ,   1998 ,   10 ( 1 ) :   1 ～ 6 
 　 　 ( Lao   Zhiqiang ,   Pan   Yunhe .   A   feature - based   image   deformation   algorithm .   Journal   of   Computer - Aided   Design   &   Computer   Graphics ( in   Chinese ) ,   1998 ,   10 ( 1 ) :   1 ～ 6 ) 
 3 　 冯结青 ,   马利庄 ,   彭 群生 .   一种 应用 参数 曲面 的 动态 自由 变形 方法 .   计算机 学报 ,   1997 ,   20 ( 7 ) :   600 ～ 606 
 　 　 ( Feng   Jieqing ,   Ma   Lizhuang ,   Peng   Qunsheng .   Animated   free - form   deformation   following   the   shape   of   parametric   surface .   Chinese   Journal   of   Computers ( in   Chinese ) ,   1997 ,   20 ( 7 ) :   600 ～ 606 )   
 原稿 收到 日期 ： 1998 - 10 - 27 ； 修改稿 收到 日期 ： 1999 - 07 - 06 . 
