微型机 与 应用 
 MICROCOMPUTER   &   ITS   APPLICATIONS 
 2000   Vol.19   No.2   P.31 - 33 
 
 
 
 
 Internet 服务器 簇 技术 
 何丽天 
 摘   要 ：   对 当前 在 Internet 网络 上 实现 的 各种 服务器 簇 技术 进行 了 概述 和 一定 剖析 ， 并 根据 其 各自 的 特点 进行 了 比较 ， 为 以后 的 研究 和 应用 工作 提供 了 依据 。 
 关键词 ：   容错   服务器 簇   流量 分配   负载平衡 
 　 　 随着 网络 使用 的 日益 广泛 和 Internet 技术 的 日益 成熟 ， 通过 Internet 获取信息 已经 成为 人们 的 日常 工作 和 生活 中 的 一部分 ， 许多 站点 都 需要 负载 沉重 的 客户 访问量 ， 某些 热门 的 Web 站点 甚至 可以 达到 每秒 上 千次 的 点击 次数 。 单 网络 服务器 已 远远 不能 满足 客户 的 需求 ， 经常 的 网络 断线 和 服务器 崩溃 造成 不能容忍 的 等待时间 和 数据 重传 ， 占据 了 大量 的 网络带宽 。 因此 ， 网络 服务器 的 存取速度 和 容错性 能 越来越 受到 人们 的 关注 。 为了 解决 上述 的 问题 ， 人们 开始 采用 多 Internet 服务器 ， 通过 服务器 簇 技术 使 它们 对外 采用 同一个 服务器 名字 和 IP地址 ， 从而 保持 对 客户端 应用 的 统一 。 
 　 　 本文 概述 了 当前 在 Internet 上 采用 的 各种 服务器 簇 技术 的 特点 ， 并 对 其 优缺点 进行 了 分析 。 
 1   Internet 服务器 簇 
 　 　 从 本质 上 说 ， 服务器 簇是 1 组 通过 网络连接 起来 的 服务器 ， 每 1 台 服务器 都 存储 相同 的 信息 用于 客户 访问 ， 所有 的 服务器 对 簇内 使用 不同 的 IP地址 和 服务器 名 ， 对 外界 的 客户 则 采用 单一 的 IP地址 和 服务器 名 。 簇内 的 服务器 可以 位于 同一个 局域网 内 ， 也 可以 位于 物理 上 分布 于 不同 地区 的 广域网 中 。 服务器 簇中 包含 1 个 负载平衡 器 ， 即 1 台 专用 的 计算机 或 1 个 专用 的 软件 ， 用于 将 外界 客户 对 服务器 提出 的 服务 请求 均衡 地 分配 到 每 1 台 有效 的 服务器 上 。 如果 发现 某 1 台 服务器 失效 ， 将会 自动 从 服务器 簇中 切除 。 这样 ， 就 可以 屏蔽 服务器 簇 的 内部结构 和 簇 中 的 服务器 故障 ， 保持 对 外界 客户 的 一致性 和 稳定性 ， 从而 达到 快速反应 和 容错 的 目的 。 
 　 　 服务器 簇 的 特点 ：   
 　 　 （ 1 ） 服务器 负载 平均分配 在 不同 的 多台 机器 上 ； 
 　 　 （ 2 ） 如果 任意 1 台 服务器 失效 ， 服务器 簇 将 屏蔽其 错误 ， 并 将 客户 请求 分配 到 另 1 台 有效 的 服务器 上 完成 ； 
 　 　 （ 3 ） 服务器 簇 能够 在 不 影响 网络服务 的 情况 下 增加 或 减少 服务器 的 个数 ；   
 　 　 （ 4 ） 除了 Web 访问 之外 ， 服务器 簇 应该 能够 提供 其它 的 应用 级 服务 。 根据 系统结构 和 负载 分配 方式 的 不同 ， 服务器 簇有 多种 解决方案 。 
 　 　 根据 其 负载平衡 器 的 位置 不同 ， 可以 将 它们 分为 二大类 ， 一类 是 服务器端 的 负载平衡 ， 另一类 是 客户端 的 流量 分配 。 
 1 ． 1   服务器端 的 负载平衡 
 　 　 服务器端 的 负载平衡 是 使用 专用 的 服务器端 的 负载平衡 器 ， 通过 一定 的 规则 ， 将 客户 请求 均衡 地 分配 到 服务器 簇中 ， 并 通过 某些 手段 保持 对 客户端 的 透明 和 统一 。 
 　 　 1 ． 采用 Round － Robin   DNS 算法 
 　 　 服务器 可以 通过 DNS 方式 完成 从 域名 到 IP地址 的 转换 。 采用 Round － Robin   DNS ， 是 按照 Round － Robin   DNS 算法 ， 动态 地 将 各个 服务器 与 不同 的 客户 相匹配 。 当 1 个 DNS 服务器 接收 到 某个 客户 的 域名服务 请求 时 ， 它 将 从 簇内 选择 1 个 相匹配 的 服务器 IP 来 响应 。 这样 ， 所有 的 客户机 就 可以 通过 同 1 个 服务器 名来 访问 簇中 的 所有 服务器 ， 从而 将 负载 均衡 地 分配 到 服务器 中 。 但是 ， 由于 DNS 服务器 的 层次结构 ， 并且 域名 到 IP 的 映射 缓存 在 中间 DNS 服务器 上 ， 因此 这种 方法 很 容易 导致 流量 分配 的 不 平衡 。 其中 ， 最 难 选择 的 是 动态 匹配 的 生存 时间 。 如果 生存 时间 太 长 ， 则 分配 的 不 平衡 现象 将会 加剧 ， 如果 太短 ， 则 R － R   DNS 将 可能 成为 瓶颈 。 另外 ， 由于 各类 客户 的 访问 方式 不同 ， 一部分 客户 可能 需要 下载 大量 的 页面 ， 而 另 一部分 客户 仅 需 浏览 少量 页面 ， 也 会 造成 分配 的 不 平衡 。 当 某个 服务器 失效 时 ， 还 将 造成 客户 反复 访问 它 ， 不仅 占据 了 大量 网络带宽 ， 而且 最终 将 导致 连接 失败 。 
 　 　 2 ． 采用 IP 层 调度 算法 
 　 　 IP 层 调度 是 通过 在 IP 层 修改 数据包 的 IP地址 来 实现 客户机 与 服务器 簇 之间 的 通信 。 由于 采用 此 方法 的 系统结构 简单 、 易于 实现 ， 且 对 服务器 簇 外部 网络 的 影响 较 小 ， 所以 人们 在 此 领域 进行 了 大量 、 细致 的 研究 。 
 
 　 　 图 1   网络地址 转换 
 　 　 网络地址 转换 （ NAT ） 就是 一种 IP 层 的 调度 方法 ， 见图 1 。 它 通过 对 数据包 IP地址 的 转换 来 实现 对 不同 服务器 的 并行 访问 ， 并 使 它们 对外 表现 为 使用 同 1 个 IP地址 的 虚拟 设备 。 其中 ， 由 负载平衡 器 负责 将 发向 虚拟 服务器 的 请求 包 的 目的 地址 改为 适当 的 服务器 地址 ， 并 转发给 此 服务器 ， 之后 ， 再 将 该 服务器返回 的 应答 包 的 源地址 改为 原先 的 虚拟 服务器 的 地址 。 
 　 　 加州大学 伯 克立 分校 开发 了 “ 魔法 路由器 ” 。 它 使用 专用 的 协议 进行 流量 分配 ， 能为 1 组 等同 的 服务器 提供 1 个 容错 的 前端 平台 ， 不仅 使 服务器 对外 成为 1 个 单机 ， 而且 可以 屏蔽 服务器 簇 内部 的 故障 。 当 客户 请求 建立 TCP 连接 时 ， “ 魔法 路由器 ” 采用 3 种 算法 选择 服务器 ： Round － Robin 、 随机 选择 、 增量 负载 。 其中 ， 前 2 种 算法 可以 支持 自行 扩展 ， 第 3 种 算法 则 要求 额外 的 服务器 信息 ， 包括 对 服务器 当前 负载 的 估计值 和 每 1 个 TCP 连接 的 负载 调度 。 一旦 为 当前 的 客户 请求 选定 了 服务器 ， “ 魔法 路由器 ” 将 在 地址 转换 表中 增加 此 匹配 方式 ， 直至 客户 的 TCP 连接 终止 才 删除 匹配 。 对 服务器 的 故障 检测 有 2 种 方法 ： 一种 方法 是 由 “ 魔法 路由器 ” 定时 向 所有 的 服务器 发出 ARP 请求 ， 看 服务器 的 响应 是否 超时 ； 另 一种 方法 是 当 发现 服务器 使用 服务 端口 返回 了 TCP 复位 信息 时 ， 认为 该 服务器 失效 。 “ 魔法 路由器 ” 将 自动 屏蔽 簇内 的 服务器 故障 并 保持 对 客户 的 透明 。   
 　 　 Cisco 公司 则 使用 自行 开发 的 “ 本地 导向 器 ” 来 进行 服务器 间 的 流量 平衡 分配 。 “ 本地 导向 器 ” 基于 TCP ／ IP 协议 ， 选择 服务器 簇中 的 合适 服务器 响应 客户 请求 ， 可以 屏蔽 服务器 的 数量 增减 和 服务器 的 故障 。 另外 ， “ 本地 导向 器 ” 在 物理 上 实现 冗余 ， 从而 保证 了 整个 服务器端 的 容错 。 
 　 　 IBM 公司 开发 的 “ TCP 路由器 ” 是 一种 改进 的 NAT 。 客户 是 通过 对 服务器 簇 端的 路由器 的 地址 的 访问 来 实现 对 簇内 服务器 的 访问 。 当 客户 数据包 到达 路由器 时 ， 它 在 考虑 负载平衡 的 基础 上将 客户 请求 分配 给 1 台 合适 的 服务器 ， 并 将 客户 数据包 的 目的 地址 改为 该 服务器 的 地址 ， 然后 ， 为了 实现 无缝 的 TCP 连接 ， 选中 的 服务器 将 使用 路由器 的 地址 进行 应答 。 “ TCP 路由器 ” 的 缺点 是 ， 必须 修改 每台 服务器 上 TCP ／ IP 层 的 核心 代码 ， 以 使 它们 使用 路由器 地址 而 不是 本 机 地址 应答 。 
 　 　 得克萨斯大学 的 研究者 们 在 NAT 的 基础 上 使用 了 另一类 IP 调度 算法 ， 统称 为 “ 单 IP 簇 技术 ” 。 服务器 簇 通过 1 台 路由器 连接 到 Internet 上 ， 簇内 所有 的 服务器 都 拥有 自己 的 IP地址 ， 并 通过 Unix 操作系统 的 别名 机制 共享 1 个 IP地址 作为 它们 的 第 2 地址 ， 称为 簇 地址 ， 并 作为 公共 的 DNS 地址 。 所有 的 外部 客户 的 访问 都 将 发送到 簇 地址 上 ， 并 由 所 选定 的 1 台 服务器 通过 它 的 第 2 地址 来 处理 。 对于 每 1 个 TCP 连接 ， 都 通过 一定 的 hash 算法 将 客户 IP 映射 到 某 1 台 服务器 上 ， 以使 它 处理 本次 客户 连接 的 所有 服务 。 当 客户 发送 的 服务 请求 到达 路由器 时 ， 将 采用 2 种 机制 进行 流量 分配 。 一种 方法 是 基于 路由 的 ， 即 服务器 簇 使用 1 个 “ 虚幻   IP ” 作为 簇 地址 ， 路由器 上 的 路由表 将 “ 虚幻   IP ” 与 分配器 相匹配 ， 则 路由器 根据 路由表 将 接收 到 的 数据包 发送到 分配器 ， 分配器 通过 hash 算法 选定 1 台 服务器 ， 之后 该 服务器 将 使用 自己 的 第 2 地址 ， 即 簇 地址 进行 应答 。 另 一种 方法 是 基于 广播 的 ， 路由器 将 到达 的 数据包 广播 给 每 1 台 服务器 ， 同时 ， 每 1 台 服务器 都 拥有 1 个 唯一 的 ID 号 ， 并 运行 1 个 小 的 过滤 程序 。 所有 服务器 都 将 接收 到 的 广播 包中 的 客户 源地址 提取 出来 ， 对 它 进行 过滤 后 将 结果 与 本机 的 ID 号 相 比较 ， 如果 相同 则 交由 上层 处理 并 使用 “ 虚幻   IP ” 应答 客户 ， 否则 丢弃 ， 从而 保证 了 只有 1 台 服务器 处理 了 该 数据包 。 簇中 的 服务器 将 由 1 个 后台 运行 的 监测器 进行 监测 ， 发现 故障 时 监测器 将 修改 位于 路由器 上 的 分配器 的 hash 算法 或 位于 每 1 台 服务器 上 的 过滤 算法 ， 以 屏蔽 故障 。 “ 单 IP 簇 技术 ” 的 1 个 优点 是 它 不 需要 修改 应答 数据包 的 源地址 ， 从而 简化 了 占据 大量 网络带宽 的 应答 包 的 处理过程 ， 不 影响 系统 的 效率 。 
 　 　 我国 国防科 大 的 并行 与 分布式 国家 实验室 也 在 此 领域 进行 了 自己 的 研究 与 探索 ， 提出 了 基于 NAT 的 虚拟 服务器 和 基于 IP 隧道 的 虚拟 服务器 2 种 方案 。 这 2 种 方案 都 是 在 客户 与 服务器 簇 之间 增加 1 台 机器 作为 负载平衡 器 ， 再 通过 交换机 或 路由器 与 服务器 簇 相连 。 其中 ， 基于 IP 隧道 的 技术 是 负载平衡 器 将 接收 到 的 客户 数据包 重新 封装 在 1 个 新 的 IP 包中 ， 并 以 选中 的 服务器 地址 作为 新 IP 包 的 目的 地址 发出 。 选中 的 服务器 接收 后 进行 解包 ， 去除 新 IP 包头 和 原 IP 包头 ， 并 直接 应答 客户 ， 见图 2 。 负载平衡 器 可以 使用 4 种 方法 选择 服务器 ： Round － Robin 算法 、 加权 Round － Robin 算法 、 最小 连接数 和 加权 最小 连接数 。 系统 的 高效性 由 对 节点 和 后台程序 的 鼓掌 检测 来 完成 。 其中 ， 运行 于 负载平衡 器上 的 后台 “ mon ” 程序 用于 监视系统 资源 的 有效性 ， 如 fping ． monitor 每隔 t 秒钟 检测 1 次 服务器 节点 是否 正常 ， http ． monitor 检测 http 服务 是否 正常 。 另外 ， 为了 不 使 负载平衡 器 成为 单点 ， 可以 使用 1 台 服务器 作为 它 的 备份 ， 由 “ mon ” 监视 负载平衡 器 的 状态 ， 并 在 它 失效 时 ， 由 “ fake ” 程序 通过 IP 欺诈 的 方法 ， 完成 备份 负载平衡 器 对 原 IP地址 的 接管 。 采用 IP 隧道 技术 的 好处 是 负载平衡 器 只 处理 客户 请求 ， 因此 不会 成为 瓶颈 ， 而 具体 的 响应 由 服务器 完成 ， 并不需要 修改 服务器 的 核心 代码 。 其 缺点 是 服务器端 的 软件系统 必须 支持 IP 隧道 技术 ， 如 Linux 可以 支持 ， 而 NT 则 不 支持 。 
 
 图 2   IP 隧道 技术 
 　 　 3 ． 采用 应用层 调度 算法 
 　 　 应用层 位于 网络结构 的 最高层 ， 基于 应用层 的 调度 算法 一般 是 对 客户 的 HTTP 请求 进行 分配 ， 交由 合适 的 服务器 处理 。 当 1 台 被 请求 的 服务器 忙 时 ， 它 将 通过 HTTP 协议 的 重定向 信息 交由 另 1 台 服务器 完成 。 
 　 　 瑞典 爱立信公司 的 Eddies 系列产品 中 包括 负责 负载平衡 的 DNS 服务器 、 通用 服务器 结构 、 IP地址 转向 机制 和 内容 复制 机制 。 其中 ， DNS 服务器 通过 一定 的 方法 获取 每 1 个 与 之 相连 的 LAN 的 当前 状态 ， 如 是否 正常 工作 、 负载 情况 如何 等等 ， 在 将 请求 服务 的 客户 与 1 台 服务器 相匹配 之前 ， DNS 服务器 使用 这些 信息 进行 衡量 ， 并 选择 1 台 响应 时间 最小 的 服务器 。 
 　 　 SWEB 是 一种 多处理器 Web 服务器 。 它 是 基于 Web 的 网络 信息 ， 通过 采样 和 预测 等 方法 获取 相关 节点 的 效率 ， 以 最好 地 满足 客户 请求 。 另 一种 改进 是 采用 2 层 的 主 ／ 从 调度 结构 来 构建 Web 服务器 簇 ， 通过 将 静态 和 动态 内容 的 处理过程 分 离开 （ 如 将 一些 低 负载 的 请求 送到 远程 服务器 执行 ） ， 来 保证 客户 请求 的 实时性 ， 并 实现 动态 资源配置 和 失效节点 的 管理 。 同时 ， 为了 更好 地 提高 系统 效率 ， SWEB ＋ ＋ 软件工具 还 对 Web 应用 的 内容 进行 分类 ， 在 考虑 客户机 能力 的 基础 上 进行 适当 的 调度 和 负载平衡 ， 从而 优化 了 客户 和 服务器 两端 的 资源 。 另外 ， 通过 缓存 动态 内容 的 访问 结果 ， 还 可以 大大 优化 Web 服务器 的 平均 响应 时间 。 
 1 ． 2   客户端 流量 分配 
 　 　 客户端 流量 分配 要求 每 1 台 客户机 清楚 地 知道 服务器 簇 的 系统结构 ， 并 能够 以 1 种 负载平衡 的 方式 将 服务 请求 发送到 不同 的 服务器 上 。   
 　 　 Netscape 浏览器 就 使用 了 客户端 分配 技术 ， 在 访问 其 公司 主页 时 ， 能够 随机 地 选取 1 个 从 1 ～ 32 的 整数 N ， 并 将 服务 请求 发送到 wwwN ． netscape ． com 。 但是 ， 大多数 公司 是 不能 采用 这种 方式 的 ， 因为 他们 不 可能 专门 为本 公司 站点 的 负载平衡 而 修改 通用 的 浏览器 。 
 　 　 加州大学 伯 克立 分校 在 内部网 中 开发 了 1 种 称为 “ 智能 终端 ” 的 技术 。 当 用户 访问 服务器时 ， 他们 的 终端 将 自动 发送 出 2 个 相互合作 的 Java 小 程序 ， 1 个 是 用于 提供 用户 接口 的 客户端 接口 程序 ， 另 1 个 是 导向 程序 ， 用于 屏蔽 具体 完成 响应 任务 的 服务器 的 细节 。 客户端 接口 程序 包括 用户 的 输入 信息 和 发向 导向 程序 的 任务 请求 ， 导向 程序 中 包含 服务器 簇 的 详细信息 ， 它 将 根据 簇内 的 各个 服务器 的 当前 状态 和 负载 情况 自行 选择 1 个 负载 最小 的 服务器 来 响应 请求 。 导向 程序 中 的 信息 随着 用户 应用程序 的 不同 而 变化 ， 例如 ， 当 用户 发出 FTP 请求 时 ， 从 FTP 服务器 镜像 站点 中 选择 1 个 提供 FTP 服务 。 这种 “ 智能 终端 ” 的 实现 关键 是 用户 终端 上 的 导向 程序 必须 清楚 地 知道 可以 提供 相应 服务 的 服务器 簇 的 内部结构 。 
 　 　 波士顿大学 也 开发 了 1 种 运行 于 客户端 的 通过 探测 带宽 来 动态 地 选择 服务器 的 技术 。 实现 这种 技术 的 前提 是 客户端 预先 知道 可以 提供 所 需 服务 的 所有 服务器 的 地址 列表 ， 而 不 需要 预先 知道 服务器 的 位置 或 网络连接 方式 。 客户机 通过 “ 跳 ” 数 或 回环 延迟时间 的 比较 ， 来 选择 最 适合 的 服务器 响应 服务 。 
 2   总   结 
 　 　 当前 ， 在 Internet 上 为了 给 用户 提供 更 多 、 更 可靠 的 资源 ， 增加 网络带宽 ， 提高 访问 的 效率 ， 减小 响应 时间 ， 已 大量 采用 了 服务器 簇 技术 。 其中 ， 由于 客户端 的 流量 分配 方案 需要 预先 知道 包含 相同 资源 的 站点 镜像 ， 并 必须 修改 客户机 上 的 浏览器 ， 所以 应用 得 不 太 广泛 。 大多数 服务器 簇是 在 服务器端 进行 负载平衡 ， 其中 ， 由于 采用 IP 层 调度 的 软件系统 结构 清晰 ， 实现 较为 方便 ， 且 能够 直接 被 如 Unix 、 Linux 这样 的 操作系统 所 支持 ， 以 广泛 地 成为 各种 服务器 簇 技术 的 应用 趋势 。 
 何丽天 （ 武汉 数字 工程 研究所  430074 ） 
 参考文献 
 1 ， Anderson   E ， Patterson   D ， Brewer   E ． The   Magicrouter ： an   Application   of   Fast   Packet   Interposing ． http  ／ ／ www ． cs ．   berkeley ． edu ／ eanders ／ magicrouter ／ ， 1996 ； （ 5 ） 
 2 ， Damani   Om   P ， Emerald   Chung   P ， Huang   Y ． ONE － IP ：   Techniques   for   Hosting   a   Service   on   a   Cluster   of   Machines ． http  ／ ／ www ． cs ． utexas ． edu ／ users ／ damani ／ ， 1997 ； （ 8 ） 
 3 ， Zhang   Wensong ， Jin   Shiyao ， Wu   Quanyuan ． Creating   Linux   Virtual   Servers ． http  ／ ／ proxy ． iichina ． net ／  wensong ／ ， 1999 ； （ 2 ） 
 4 ， Yoshikawa   C ， Chun   B ， Eastharn   P ， Vahdat   A ， Anderson   T ． Culler   D ． Using   Smart   Clients   to   Build   Scalable   Services ． USENIX ＇ 97 ， http  ／ ／ now ． cs ． berkeley ． edu ／ ， 1997 
 收稿 日期 ： 1999 － 10 － 25 
