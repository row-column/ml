计算机 应用 
 Computer   Applications 
 1999 年   第 19 卷   第 7 期     Vol.19   No.7   1999 
 
 
 
 高效 灵活 的 站点 维护 的 实现 
 杨 建武 　 方曲祥 
 
 　 　 摘 　 要 　 随着 Internet 应用 的 深入 ， 站点 的 更新 更加 频繁 和 重要 ， 使 站点 维护 工作 的 难度 迅速 增大 。 本文 作者 采用 了 “ 逐步求精 ” 、 “ 分层 细化 ” 的 思想 ， 并 引入 “ 宏 ” 的 概念 ， 采用 了 “ 模版 ” 、 “ 向导 ” 、 “ 组件 ” 等 技术 ， 开发 出一 高效 、 灵活 的 Internet 站点 维护 系统 。 
 　 　 关键词 　 Internet ， 逐步求精 ， “ 宏 ” ， COM ， IIS 
 　 　 
 THE   IMPLEMENTATION   
 OF   MAINTENANCE   SYSTEM   OF   INTERNET   SITE 
 
 Yang   Jianwu 　 Fang   Quxiang 
 National   Engineering   Research   Center   for   New   Technology   in   Electronic   Publishing ， 
 Institute   of   Computer   Science   &   Technology ,   Peking   University ,   Beijing   100871 
 
 　 　 Abstract 　 With   applying   Internet   more   deeply ,   Internet   sites   update   more   frequently ,   as   a   result   the   maintenance   of   web   sites ′   content   becomes   more   difficult .   Adopting   the   idea   of   " Step   by   step   to   fine " ,   importing   the   concept   of   " micro " ,   and   using   the   methods   of   " template " ,   the   authors   developed   an   efficient   and   convenient   Web   sites ′   maintenance   system .   
 　 　 Keywords 　 Internet ,   Step   by   step   to   fine ,   Micro ,   COM ,   IIS 
 
 1 　 引言 
 　 　 随着 计算机网络 技术 的 发展 和 Internet 的 日益 普及 ， 许多 企事业 单位 已经 建成 或者 正在 建立 自己 的 Internet 站点 。 越来越 多 的 站点 建设 的 目的 也 不再 是 简单 的 发布 信息 、 形象 宣传 ， 而是 向 加强 信息 交流 和 电子商务 的 方向 发展 。 出版社 Internet 站点 在 这方面 的 应用 需求 也 是 如此 ， 希望 通过 Internet 站点 不仅仅 是 进行 形象 宣传 ， 而 更 侧重于 实现 同 读者 、 书店 的 迅速 便捷 的 信息 交流 与 直接 交易 ， 继而 达到 迅速 了解 市场 ， 占领市场 ， 多 出书 、 出 好书 的 目的 。 随着 这些 应用 需求 的 加强 与 深入 ， 站点 的 及时 更新 （ 形式 上 的 和 内容 上 的 ） 变得 必不可少 ， 以致 站点 维护 量 迅速 增加 ， 维护 难度 迅速 提高 。 
 　 　 如何 高效 灵活 地 进行 站点 的 维护 与 管理 ， 可以 说 是 站点 建设 和 持续 发展 中 最 重要 的 问题 。 对于 一个 Internet 站点 ， 一方面 需要 灵活 的 网页 制作 和 更新 ， 另一方面 需要 组织 和 管理 大量 数据 ， 更 重要 的 是 需要 将 这 两者 有机 的 结合 起来 并 体现 相应 的 商业 规则 ， 使 整个 站点 既 从 形式 上 吸引 用户 ， 又 从 内容 上 吸引 用户 ， 并 与 用户 进行 有效 方便 的 交流 （ 信息 交换 与 网上 电子 交易 ） ， 同时 整个 站点 管理 维护 工作量 少且 难度 小 。 
 　 　 本文 作者 在 开发 “ 北大方正 出版社 Internet 站点 系统 ” 中 ， 在 这方面 进行 了 一些 深入细致 的 工作 。 通过 该 维护 系统 提供 的 工具 与 方法 ， 出版社 站点 维护 人员 可 高效 灵活 方便 地 进行 站点 维护 。 本 系统 已 在 某 出版社 站点 中 得以 成功 应用 。 本文 将 结合 作者 的 实际 经验 对 整个 系统 实现 中 的 关键 部分 进行 扼要 的 叙述 。 
 　 　 
 2 　 整体 系统 概述 
 2 ． 1 　 硬件平台 （ 网络结构 ） 
 　 　 整个 系统 的 总体目标 是 出版社 Internet 站点 建设 和 出版社 局域网 建设 ， 系统 的 网络结构 拓扑图 如图 1 所示 。 
 
 
 图 1 　 系统 网络结构 拓扑图 
 2 ． 2 　 软件平台 
 　 　 本 系统 选用 的 是 微软 的 BackOffice 系列产品 作为 Internet 软件平台 。 系统 中以 Windows   NT   4.0 为 操作系统 平台 ， 以 IIS4.0 为   WEB 服务器 ， 数据库系统 采用 的 是 MS   SQL   Server   6.5 。 　 2 ． 3 　 应用 系统 
 　 　 除 普通 Internet 站点 要求 的 主页 及 宣传 信息 、 聊天室 、 论坛 等 之外 ， 本 站点 的 重点 是 结合 出版社 的 业务 ， 进行 出版物 （ 图书 、 杂志 、 电子 音像 ） 的 宣传 、 交易 及 信息反馈 。 由于 国内 还 未 建立 完善 的 信任 系统 ， 本 系统 在 电子 交易 方面 采用 的 会员 方式 ， 并 为 完整 的 电子商务 做 了 充分 的 准备 。 
 3 　 维护 工具 的 设计 
 　 　 站点 形式 和 内容 的 维护 是 站点 建设 和 持续 发展 中 最 重要 的 问题 。 站点 维护 可 具体 归纳 为 四个 方面 的 需求 ： 大 数据量 的 组织 与 管理 、 方便 灵活 的 网页 制作 、 页 面对 数据 的 操作 和 商业 规则 的 体现 。 如 将 各 方面 单独 考虑 ， 对前 三个 方面 ， 当前 市场 都 有 成熟 的 工具 和 技术 。 但 如何 将 这 三个 方面 进行 有机 的 结合 ， 并 实现 相应 的 商业 规则 ， 最终 为 站点 维护 人员 提供 一 高效 、 灵活 、 方便 的 站点 维护 工具 ， 以 减少 站点 的 维护 工作量 与 维护 难度 ？ 
 
 
 图 2 　 网页 制作 流程图 
 
 
 　 　 为 实现 这一 目标 ， 系统 设计 时 借用 了 “ 逐步求精 ” 、 “ 分层 细化 ” 的 概念 和 思想 ， 将 复杂 的 页面 制作 与 维护 工作 分为 相对 独立 的 三个 层次 ： “ 页面 层 ” ，   指 页面 的 整体 风格 与 布局 ； “ 应用 模块 层 ” ， 指 一个 独立 的 应用 概念 或 应用 操作 所 包含 的 代码 （ 如 ： 新书 信息 列表 、 提交 订单 ） ； “ 显示 细节 层 ” ， 各 信息 项 的 显示 细节 （ 如 ： 是否 显示 、 显示 顺序 、 显示 宽度 ） 。 这 三个 层次 的 逐层 深入 即 是 一个 “ 逐步求精 ” 的 过程 。 通过 这样 的 层次 划分 ， 将 站点 维护 的 复杂性 和 工作量 分解 到 各 步骤 中 ， 使 站点 维护 的 整体 复杂性 大大降低 。 
 　 　 对于 各层次 中 的 复杂性 和 工作量 ， 笔者 针对 各层 的 特性 ， 采取 了 不同 的 处理 方法 。 对于 页面 层 ， 使用 了 “ 模版 （ template ） ” 方法 和 “ 向导 （ wizard ） ” 方法 ； 对于 应用 模块 层 采用 “ 宏 （ macro ） ” 封装 和 “ 组件 COM ” 封装 的 方法 ； 而 将 “ 显示 细节 层 ” 完全 向 维护 人员 开放 。 
 　 　 对 站点 维护 人员 来说 ， 以上 的 层次 划分 分别 对应 为 相对 独立 逐步 细化 的 三个 步骤 。 
 4 　 维护 工具 的 实现 
 4 ． 1 　 ASP （ Active   Service   Page ) 
 　 　 本 系统 的 实现 基础 是 ASP ， 本文 先对 ASP 进行 简要 介绍 。 
 　 　 站点 系统 采用 的 是 IIS4.0 中 的 ASP （ Active   Service   Page ) 技术 。 其 工作 原理 是 ， 对 用户 （ 浏览器 ） 请求 的 ASP 页面 ， 在 服务器端 先 进行 解释 ， 生成 标准 HTML 页面 （ 数据流 ） ， 然后 送到 浏览器 端 。 这些 ASP 页面 是 用 VBScript 或 JScript 语言 描述 的 ， 同时 ， 页面 中 通过 描述语言 可 创建 COM 对象 ， 其中 包括 数据库 对象 ADO （ Active   Data   Object ) ， ADO 通过 ODBC 来 对 数据库 进行 操作 。 
 < % @   LANGUAGE = " VBSCRIPT "   % > 
 < % 
 ′ Script   to   connect   database 
 Set   Database   =   Server . CreateObject ( " ADODB . Connection " ) 
 Set   cmdLookBook   =   Server . CreateObject ( " ADODB . Command " ) 
 Set   BookList   =   Server . CreateObject ( " ADODB . Recordset " ) 
 … … 
 ′ 查询 预出 新书 
 cmdLookBook . CommandText 
 　 　 　 　 =   " Select   BookID , BookName , Author , Price , ISBN   
 From   Book — Information   where   IsPublished = 0 " 
 BookList . Open   cmdLookBook , , 0 , 1 
 % > 
 < html > < head > … … < / head > 
 < body > 
 … … 
 < %   if   BookList . bof   and   BookList . eof   then   % > 
 < center > < i > 对不起 , 近期 没有 预出 新书 . 
 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 　 ＜ / i > < / center > 
 < %   else   % > 
 < %   Do   While ( Not   ( BookList . eof   or   BookList . bof ) )   % > 
 ′ 显示 预出 图书 信息 
 　 … … 
 … … 
 　 　 由于 已有 较 多 的 资料 介绍 ASP ， 本文 在 此 不 做 详细 讨论 。 
 4 ． 2 　 页面 层 
 　 　 因为 页面 层 处理 的 目的 是 页面 的 整体 风格 与 布局 ， 可 不用 考虑 具体 的 商业 规则 与 数据库 操作 。 系统维护 人员 可以 充分利用 现有 成熟 的 页面 制作 工具 进行 页面 的 创作 ， 将 主要 精力 集中 在 网页 的 创意 上 。 
 　 　 为了 进一步 减少 维护 人员 的 工作量 ， 系统 提供 了 常用 页面 的 模版 ( 如 企业 介绍 页面 模板 ) ， 站点 维护 人员 只 需 稍作 修改 ， 即可 直接 发布 或 进入 下 一步 （ 下 一 层次 ） 的 工作 。 。 通过 这种 模版 方式 ， 对 减少 站点 建设 初期 的 工作量 特别 有效 。 
 　 　 对于 某些 工作 流程 与 形式 相对 固定 的 商业 规则 ， 系统 提供 一些 向导 （ wizard ） 工具 。 如 ： 对于 网上 读者 信息 调查 这一 应用 ， 系统 提供 一 向导 工具 ， 制作人员 只 需 添入 相应 的 需 调查 的 信息 ， 向导 工具 将 自动 生成 相应 的 数据库 表 和 调查 页面 ， 并 在 调查 结束 后 ， 向导 工具 自动 从 数据库 中 提取 信息 ， 形成 统计分析 页面 。 站点 维护 人员 将 不 涉及 技术 问题 ， 而 可 将 精力 集中 在 其 应用 上 ， 减少 了 工作量 与 维护 难度 。 
 4 ． 3 　 应用 模块 层 
 　 　 应用 模块 层 是 系统 中 体现 应用 需求 的 核心内容 ， 通常 数据库 的 操作 与 商业 规则 的 体现 都 在 该层 实现 。 
 　 　 为了 有效 的 降低 该层 的 维护 难度 并 减少 维护 工作量 ， 本 系统 引入 了 “ 宏 ” 的 概念 ， 对 应用 模块 层 采用 了 “ 宏 ” 封装 和 COM 组件 封装 的 方法 。 将 复杂 的 数据库 操作 和 商业 规则 先 进行 COM 组件 封装 ， 后 进行 宏 封装 。 每个 应用 模块 被 封装 为 一个 宏 ， 系统 提供 给 维护 人员 的 是 一个个 体现 具体 应用 需求 的 “ 宏 ” ， 系统维护 人员 只要 根据 应用 需要 将 “ 宏 ” 嵌入 页面 中 。 
 　 　 例如 ， 系统维护 人员 要 在 某 网页 中 显示 新书 列表 ， 则 只 需 在 该 页面 的 相应 位置 插入 宏 “ 新书 列表 ” （ 这一 插入 工作 可 在 系统 的 编辑 工具 中 ， 通过 右键 选择 的 方式 进行 ） ： 
 　 　 < *   新书 列表 ( 每页行数 = 20 ; 显示 列 = 书名 , 
 　 　 著 译者 , 定价 , 标准 书 号 )   * > 
 　 　 其中 标记 < * 和 * > 是 系统 引入 的 “ 宏 ” 定界符 ， 以便 宏 替换 工具 对宏 进行 识别 ； “ 新书 列表 ” 是 “ 宏 ” 的 名称 ， 其后 紧接 的 括号 中 可 指定 相应 的 参数 。 
 　 　 当 维护 人员 将 “ 宏 ” 页面 制作 完后 ， 利用 系统 的 “ 宏 替换 ” 工具 进行 宏 替换 。 
 　 　 “ 宏 替换 ” 的 实现 方法 如下 ： 
 　 　 1 )   搜索 “ 宏 页面 ” 中 的 “ 宏 ” 定界符 ， 确定 页面 的 “ 宏 ” 引用 位置 ， 并 提取 “ 宏 ” 引用 段 （ 提取 定界符 之间 的 内容 ） 。 
 　 　 2 )   分析 “ 宏 ” 引用 段 ， 提取 宏 名称 和 引用 参数 。 
 　 　 3 )   在 “ 宏 定义 ” 库中 ， 根据 宏 名称 搜索 对应 的 “ 宏 定义 ” 内容 。 每个 “ 宏 定义 ” 保存 在 一个 . tlp 文件 （ 文本文件 ） 中 ， 所有 的 “ 宏 名称 ” 与 “ 宏 定义 ” 文件名 的 对应 关系 采用 . ini 文件 形式 保存 。 先 根据 “ 宏 名称 ” 在 . ini 文件 中 找到 对应 的 “ 宏 定义 ” 文件名 ， 然后 在 “ 宏 定义 ” 文件 中 提取 该 “ 宏 定义 ” 内容 。 通过 将 “ 宏 定义 ” 库 采用 独立 的 . ini 文件 形式 和 . tlp 文件 形式 ， 从而 使得 “ 宏 ” 与 程序 分开 ， 保证 了 “ 宏 定义 ” 的 独立性 ， 并 可 根据 应用 需求 不断 增加 与 更新 “ 宏 定义 ” 。 
 　 　 4 )   根据 引用 参数 对 “ 宏 定义 ” 进行 解释 替换 ， 形成 “ 宏 解释 ” 。 在 “ 宏 定义 ” 内容 中 ， 采用 参数 形式 （ 以 < $   参数 $   > 形式 ） 进行 “ 宏 ” 定义 。 在 进行 “ 宏 ” 解释 时 ， 将 参数 取值 替换 “ 宏 定义 ” 中 的 参数 ， 形成 “ 宏 解释 ” 。 
 　 　 5 )   将 “ 宏 解释 ” 按照 一定 的 规则 替换 到 “ 宏 ” 页面 中 ， 形成 ASP 文件 。 
 　 　 本文 4.1 中 的 ASP 例子 ， 便是 宏 “ 新书 列表 ” 替换 后 形成 的 ASP 语句 （ 简化 了 ） 。 
 　 　 通过 这样 的 宏 封装 ， 网页 中 复杂 的 数据库 调用 、 COM 组件 调用 、 JavaApplet 调用 、 页面 控制 语句 （ 如 循环 控制 、 条件 选择 ） 等 ， 都 被 “ 宏 ” 封装 屏蔽 了 。 系统维护 的 工作量 与 复杂性 大大降低 。 
 　 　 对 一些 规则 更 复杂 的 应用 ， 如 ： 订单 总价 计算 （ 其中 涉及 到 价格 合计 、 图书 优惠 、 会员 优惠 、 大户 优惠 等 复杂 的 规则 ） ， 系统 则 进一步 采用 了 COM 组件 的 封装 方法 ， （ “ 宏 ” 语句 中 调用 这些 COM 组件 ， 维护 人员 也 可 在 页面 中 直接 使用 这些 COM 组件 ） 。 如 ： 将 订单 抽象 为 一个 对象 ， 并 将 该 对象 封装 为 一 COM 组件 OrderForm ， 订单 总价 则 为 该 订单 的 一个 属性 SumPrice （ 其 具体 计算 规则 也 就 被 封装 在 组件 中 了 ） 。 进行 这种 COM 组件 封装 后 ， 既 提高 了 系统 效率 与 安全性 ， 又 可 使 这些 商业 规则 从 维护 人员 面前 屏蔽 ， 降低 其 复杂性 。 
 　 　 如 ： 在 某 订单 的 最后 列出 其 合计 总价 ， 则 只须 在 需要 显示 的 位置 上 插入 “ 宏 ” ： 
 < *   订单 总价   * > 
 进行 宏 替换 后 ， 形成 对 COM 组件 调用 的 ASP : 
 < % Dim   OrderForm 
 Set   OrderForm = Server . CreateObject ( " OrderForm .   OrderForm " ) 
 … … 
 OrderForm . no   =   nnnnn   ′ 指定 订单号 
 % > 
 … … 
 < %   =   OrderForm . SumPrice   % > 
 … …   
 4 ． 4 　 显示 细节 层 
 　 　 通过 “ 宏 替换 ” 后 ， 网页 已 是 符合 应用 需求 的 ASP 页面 ， 站点 维护 人员 所 需 做 的 仅 是 一些 显示 细节 问题 （ 如 ： 书名 的 显示 宽度 ， 书名 、 著 译者 、 定价 等 的 显示 顺序 ） ， 而 对 这些 内容 进行 修改 ， 只须 了解 基本 的 HTML 知识 即可 。 系统对 ASP 页面 进行 了 必要 的 注释 ， 并 向 系统维护 人员 完全 公开 ， 为 系统维护 提供 了 很大 的 灵活性 。 
 5 　 体会 
 　 　 对 站点 维护 这个 看似 烦琐 复杂 的 问题 ， 笔者 通过 采用 “ 逐步求精 ” ， “ 分层 细化 ” 的 思想 ， 将 问题 先 按层 进行 划分 ， 针对 各层 的 特性 ， 分别 总结 规律 。 对于 有 规律 的 各层 ， 根据 其 特性 ， 分别 采用 不同 的 方法 与 技术 进行 处理 。 笔者 实现 的 这 一 高效 、 灵活 的 站点 管理工具 与 方法 已 在 人民邮电出版社 Internet 站点 （ www . pptph . com . cn ） 中 得以 成功 应用 。 虽然 这一 工具 本身 仅 适用 于 出版社 Internet 站点 系统 的 建设 与 维护 ， 但 这些 思想 与 方法 在 其它 行业 领域 的 Internet 站点 建设 与 维护 工具 的 开发 中 值得 借鉴 。 
 　 　 
 　 　 杨 建武 　 硕士 研究生 。 研究 方向 ： 计算机网络 。 
 　 　 方曲祥 　 博士 研究生 。 研究 方向 ： 信息系统 与 决策 支持 。 
 　 　 作者 单位 ： 杨 建武 　 方曲祥 （ 北京大学 计算机 研究所 电子出版 新 技术 国家 工程 研究 中心 　 北京 100871 ） 
 参考文献 
 ［ 1 ］ 　 Microsoft , 著 .   MSDN   Library , 1998 ， 7 
 ［ 2 ］ 　 Microsoft , 著 .   Windows   NT   4.0   Option   Pack   Documentation .   Microsoft ,   1998 
 收稿 日期 : 1999 - 04 - 02 ( 修改稿 ) 
