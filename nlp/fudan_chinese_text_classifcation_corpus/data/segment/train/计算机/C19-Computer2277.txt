计算机 应用 研究 
 APPLICATION   RESEARCH   OF   COMPUTERS 
 2000 　 Vol.17 　 No.5 　 P.67 - 69 
 
 
 
 基于 三层 C / S 计算 模式 的 OPAC 的 设计 和 实现 
 王晔 　 张福炎 　 黄伟红 　 闵峰 
 摘     要     该文 详细 讨论 了 客户机 / 服务器 的 多层 计算 模式 ， 阐述 了 基于 三层 客户机 / 服务器 模式 的 Oracle   Application   Server   的 结构 和 实现 机理 ， 并 给出 了 设计 和 实现 联机 公共 查询 ( OPAC ) 的 方法 和 实例 。 
 关键词     客户机     服务器     Web     数据库 
 1     引言 
 　 　 计算机技术 和 网络 技术 的 迅猛发展 和 普及 正在 改变 着 传统 图书馆 的 服务 模式 ， 同时 也 对 图书馆 自动化 系统 提出 了 更 高 的 要求 。 图书馆 的 信息 服务 正向 着 电子化 、 数字化 、 远程 化 、 资源共享 化 的 方向 发展 ， 支持 Internet 服务 已经 成为 新一代 图书馆 自动化 系统 的 重要 标志 。 
 　 　 江苏省 教委 资助 开发 的 汇文 文献 信息 服务 系统 是 江苏 文献 保障系统 ( JALIS ) 的 一个 重要 组成部分 ， 是 基于 多种 平台 ( Windows   NT 、 UNIX 等 ) 和 大型 数据库 ( Oracle ) ， 采用 客户 / 服务器 体系结构 的 新一代 图书馆 管理系统 。 该 系统 已 在 全国 范围 内 数十家 高校 及 公共 图书馆 安装 使用 ， 推动 了 图书馆 业务 的 标准化 、 电子化 ， 取得 了 巨大 的 社会效益 。 从 功能 上 , 该 系统 包括 采访 、 编目 、 典藏 、 流通 、 期刊 、 统计 、 Z39.50 和 OPAC 等 多个 子系统 。 
 　 　 在 OPAC ( Online   Public   Access   Catalog ) 系统 中 ， 我们 采用 Oracle   Application   Server 构建 了 三层 C / S 体系结构 ， 以 提供 面向 Internet 的 高效 的 交互式 的 查询 访问 , 实现 了 书目 查询 、 读者 信息 服务 、 新书 通报 、 书刊 订购 征询 和 书刊 续借 预约 等 服务 。 
 2     客户 / 服务器 体系 
 　 　 客户 / 服务器 计算 体系 ， 通常 被 描述 为 两层 或 多层模式 ， 这 取决于 应用逻辑 层 在 客户端 和 服务端 如何 分布 。 最小 的 客户 / 服务器 体系 只有 客户端 和 服务端 。 应用逻辑 层 分散 于 客户端 和 服务端 。 如图 1 所示 。 
 
 图 1 普通 两层 C / S 模式 
 　 　 这种 C / S 模式 提高 了 数据处理系统 的 开放性 , 在 数据 资源 与 应用软件 之间 实现 了 较 好 的 独立 和 数据 应用 的 分离 。 现在 的 许多 应用 系统 中 ， 这种 两层 的 C / S 模式 是 比较 成熟 的 技术 ， 在 大部分 的 应用 中 也 获得 了 优越 的 性能 。 但是 这种 模式 有 许多 不足之处 ， 客户端 同时 包括 表示 逻辑 和 部分 应用逻辑 , 是 一种 肥 客户 方式 。 随着 应用 的 复杂 , 对 分布 在 客户端 的 应用 系统 的 维护 代价 相当 大 。 同时 由于 应用逻辑 被 分散 在 客户 和 服务端 ， 对系统 的 设计 和 实现 增加 了 复杂度 和 维护 的 难度 。 
 　 　 针对 两层 C / S 模式 的 不足 ， 将 两层 结构 拓展 为 三层 结构 ， 把 客户端 和 服务端 中 的 应用逻辑 剥离 出来 ， 单独 驻留 在 中间层 ， 即 应用逻辑 层 ， 使得 服务端 只 负责 数据服务 ， 客户端 只 负责 表示 逻辑 和 应用 程序界面 。 对 客户端 的 设计 和 开发 也 因此 变得 简单 ， 同时 也 减轻 了 客户端 应用 的 负担 ， 这种 模式 下 的 客户端 称为 瘦 客户端 。 在 实际 的 应用 中 ， 作为 应用逻辑 一部分 的 存储 过程 和 触发器 等 还是 驻 存在 数据库 服务器 中 ， 以 获得 数据库 全面 的 支持 和 优化 的 性能 。 本 系统 的 OPAC 子系统 就是 三层 C / S 结构 的 成功 范例 。 
 3     OAS 结构 
 　 　 Oracle 的 网络 计算 模式 ( NCA ) 是 一个三层 计算 模式 ， 其中 Oracle   Application   Server ( OAS ) 作为 三层 模式 的 中间层 ， 即 应用逻辑 层 ， 其 结构 如图 2 。 
 
 图 2 基于 OAS 的 三层 C / S 模式 
 　 　 在 这个 瘦 客户端 的 3 层 结构 中 ， 客户端 软件 是 轻量级 的 ， 可以 按 需求 下载 ， 主要 用于 表示 服务端 应用 的 用户 接口 。 应用逻辑 层 的 主体 在 中间层 实现 或 以 PL / SQL 存储 过程 和 JAVA 过程 的 形式 存储 在 数据库 中 。 
 　 　 作为 3 层 结构 的 中间层 ， OAS 提供 了 与 客户端 和 数据库 之间 的 优化 接口 。 OAS 支持 以下 多种 应用 : 
 　 　 ． 通用 网关 接口 ( CGI ) 应用 
 　 　 ． 插件 服务器 
 　 　 ． JCORBA 应用 
 　 　 ． 企业 JAVABeans 应用 
 　 　 在 OPAC 的 实现 中 , 我们 只 需 支持 HTTP 的 访问 , 为了 动态 地 存取 Oracle 数据库 中 的 信息 , 选用 了 OAS 的 插件 ( Cartridge ) 服务 和 静态 HTML 文档 服务 。 下面 详细 介绍 OPAC 系统 中 所 使用 的 OAS 关键 组件 和 技术 ： 
 　 　 监听器 
 　 　 OAS 提供 自己 的 Web 监听器 ， 也 支持 其它 多种 监听器 。 并 能够 使 它们 共同 工作 ， 并 和 分配器 紧密 集成 在 一起 ， 获得 优化 的 性能 。 
 　 　 分配器 
 　 　 分配器 管理 一组 运行 在 一个 或 多个 节点 上 的 插件 实例 ， 每个 插件 服务器 运行 一个 或 多个 插件 实例 ( 如图 2 ) 。 每个 节点 只有 一个 分配器 。 在 分配器 中 维持 一个 缓冲 表 ， 记录 着 当前 可用 的 插件 。   当 一个 请求 某个 插件 的 访问 到达 时 , 分配器 把 它 传递 给 缓冲 表中 适当 类型 的 插件 。 如果 在 缓冲 表中 没有 可用 的 插件 , 分配器 请求 OAS 在 现存 的 插件 服务器 中 生成 一个 新 插件 。 如果 现存 的 插件 服务器 已经 不能 再 处理 更 多 的 插件 ， OAS 就 生成 一个 新 的 插件 服务器 ， 并且 在 这个 新 的 插件 服务器 中 生成 一个 新 的 插件 。 然后 分配器 把 这个 新 的 插件 加入 它 的 缓冲 ， 并 把 将 到 的 访问 请求 分配 给 这个 插件 。 当 请求 完成 后 ， 这个 新 的 插件 可以 继续 为 新 的 请求 所 使用 。 
 　 　 插件 和 插件 服务器 
 　 　 OAS 提供 了 一种 功能 更 强大 、 更 有效 的 服务端 应用 ， 称为 插件 服务器 。 一个 插件 是 一个 共享 库 ， 实现 了 程序逻辑 或 提供 了 对 存储 在 其它 地方 ， 如 数据库 中 的 程序逻辑 访问 。 插件 服务器 是 一个 进程 ， 其中 运行 一个 或 多个 插件 实例 。 插件 实例 是 在 插件 服务 进程 中 执行 插件 代码 的 CORBA 对象 。 
 　 　 不像 CGI 程序 ， 插件 服务器 不必 为 每 一个 请求 重新启动 。 OAS 监听器 和 分配器 组件 根据 当前 的 服务 配置 对 进来 的 请求 分配 并 运行 插件 服务器 。 处理 请求 的 插件 服务器 不必 在 接收 访问 的 同一 机器 上 运行 ， 而 允许 在 多台 机器 上 分配 。 这种 特性 插件 服务器 很 容易 扩展 ， 能够 自动 适应 高 负载 需求 。 
 　 　 在 OAS 中 支持 多种 插件 服务 , 如 PL / SQL 插件 、 JWEB 插件 、 C 插件 、 LiveHTML 插件 和 Perl 插件 ， 根据 不同 的 插件 可以 构建 不同 的 应用 。 
 　 　 应用 和 插件 是 在 应用服务器 环境 中 构建 应用 的 两个 主要 的 对象 。 一个 插件 包括 了 执行 应用逻辑 的 代码 和 定位 应用逻辑 的 配置 数据 。 比如 PL / SQL 插件 包含 了 使 之 能 连接 Oracle 数据库 和 执行 PL / SQL 存储 过程 的 执行 代码 。 插件 的 配置 数据 说明 连接 到 哪个 Oracle 数据库 及 连接 所用 的 用户 和 密码 。 同时 ， 插件 也 能 与 应用服务器 的 其它 组件 通信 。 插件 包含 在 应用 内 。 一个 应用 包含 一个 或 多个 插件 ， 但 这些 插件 必须 属于 同 一种 插件 类型 。 每个 应用 和 插件 运行 在 一个 插件 服务器 进程 内 。 每个 插件 服务器 进程 只能 运行 一个 应用 。 
 　 　 当 一个 应用 运行 时 ， 其 插件 服务器 进程 使用 进程 的 插件 工厂 对象 初始化 插件 。 一旦 初始化 后 ， 就 由 插件 处理 来自 客户端 的 请求 。 例如 ， 在 图 3 所示 的 应用 中 ， A 运行 了 三个 插件 服务器 ， 两个 属于 应用 1 ， 一个 属于 应用 2 。 在 插件 服务器 1 ， 即 应用 1 的 一个 实例 中 ， 运行 着 插件 C1 的 两个 实例 和 插件 C2 的 两个 实例 。 插件 服务器 中 的 插件 工厂 对象 负责 初始化 插件 C1 和 C2 。 
 
 图 3 插件 和 插件 服务器 
 　 　 在 OPAC 的 实现 中 我们 使用 了 PL / SQL 插件 ， 最大 限度 的 利用 数据库 服务器 优异 的 性能 。 PL / SQL 插件 允许 用户 使用 在 Oracle 数据库 中 的 存储 过程 来 构建 应用 。 每个 PL / SQL 插件 都 伴随 着 一个 DAD ， 用来 记录 访问 数据库 的 配置 数据 。 在 DAD 中 指定 数据库 的 DSN 和 用户 来 确定 一个 数据源 及其 对 该 数据源 的 访问 权限 。 一个 PL / SQL 插件 也 伴随 着 一个 虚拟 路径 。 通过 这个 虚拟 路径 来 调用 相关 的 PL / SQL 插件 。 可以 把 一个 或 多个 PL / SQL 插件 及 它们 的 配置 数据 组成 一个 应用 。 应用 的 概念 使得 一组 插件 可以 作为 一个 整体 来 管理 ， 因为 所有 的 插件 都 在 同一个 插件 服务器 进程 中 运行 。 
 　 　 当 OAS 接收 到 一个 请求 时 ： 
 　 　 1 ) 监听器 接收 到 客户端 的 一个 请求 ， 决定 谁 应该 处理 它 。 在 OPAC 系统 中 ， 它 把 请求 传递 给 WRB ( Web   Request   Broker ) ， 因为 这个 请求 是 关于 插件 的 。 
 　 　 2 ) 根据 虚拟 路径 ， WRB 决定 PL / SQL 插件 应该 处理 这个 请求 ， 然后 把 这个 请求 传递 给 运行 这个 应用 的 插件 服务器 进程 。 
 　 　 3 ) 在 插件 服务器 内 ， PL / SQL 插件 根据 DAD 的 配置 数据 确定 要 连接 的 数据库 、 设置 PL / SQL 客户 。 
 　 　 4 ) PL / SQL 插件 连接 数据库 ， 准备 调用 参数 ， 然后 调用 数据库 中 的 存储 过程 。 
 　 　 5 ) 存储 过程 生成 HTML 页面 ， 其中 可能 包括 从 数据库 中 动态 获得 的 数据 和 静态数据 。 
 　 　 6 ) 存储 过程 的 输出 返回 到 PL / SQL 插件 和 客户端 。 
 　 　 插件 调用 的 存储 过程 必须 返回 HTML 格式 的 数据 到 客户端 。 为 简化 操作 ， PL / SQL 插件 提供 了 一个 Web 开发工具 集 ( the   PL / SQL   Web   Toolkit ) 。 可以 在 存储 过程 使用 ， 以 获得 请求 信息 、 生成 HTML 标记 、 返回 头 信息 等等 。 
 　 　 使用 PL / SQL 插件 的 优点 ： 
 　 　 ． 应用逻辑 层以 存储 过程 的 形式 存储 在 数据库 中 
 　 　 ． 最大 限度 地 重用 已有 的 存储 过程 
 　 　 ． 可 伸缩 的 安全 解决方案 
 　 　 ． 具有 方便使用 动态 生成 HTML 页面 的 工具集 
 4     OPAC 设计 与 实现 
 　 　 图书馆 的 OPAC ( Online   Public   Access   Catalog ) 主要 面向 读者 ， 提供 综合信息 查询 ， 其 结构 如图 4 。 
 
 图 4OPAC 结构 
 　 　 下面 以 书目 查询 为例 说明 如何 运用 PL / SQL 插件 实现 数据库 与 客户端 的 连接 ， 响应 客户端 的 请求 ， 获取 数据库 中 相关 数据 ， 动态 生成 HTML 页面 返回 给 客户端 的 过程 。 读者 通过 浏览器 进入 OPAC 中 的 书目 查询 画面 ， 假设 URL 为 ： http : / / libsys2000 . nju . edu . cn /   opac / opac . complex _ search ， OAS 响应 这个 请求 ， 根据 请求 的 URL 中 的 虚拟 路径 ' opac ' 选择 PL / SQL 插件 来 处理 这个 请求 。 PL / SQL 连接 后台 Oracle 数据库 ， 调用 数据库 端 opac 包中 的 存储 过程 complex _ search 。 在 这个 存储 过程 中 ， 通过 OAS 的 Web 工具集 提供 函数 ， 如 HTP ， 动态 地 生成 HTML 页面 ， 其中 直接 访问 文献 类型 表 ， 读取 文献 类型 作为 生成 的 HTML 页面 中 书目 检索 的 一个 检索 条件 。 
 　 　 存储 过程 complex _ search 如下 所示 ： 
 create   or   replace   procedure   complex _ search 
 is 
 　 cursor   c   is   select   doc _ type _ code , doc _ type _ name   from 
 　 　 doc _ type _ code 
 　 where   code _ use _ flag   =   ' 1 ' ; 
 begin 
 　 htp . formOpen ( ' opac . adv _ search _ chk ' ) ; 
 　 htp . p ( ' < table   border = " 0 "   width = " 100% "   cellpadding = " 3 " > ' ) ; 
 　 htp . p ( ' < caption   align = " center " > < h1 > 书刊 目录 查询 < / h1 >   
 　 　 < / caption > ' ) ; 
 　 htp . p ( ' < tr > < td   width = " 50% "   height = " 24 " > < p   align = " right " > 
 　 　 题     名 ： < / td > ' ) ; 
 　 htp . p ( '   < td > < input   TYPE = " text "   NAME = " title "   SIZE = " 20 "   MAXLENGTH = " 80 " > < / td > < / tr >   ' ) ; 
 　 htp . p ( ' < tr > < td   width = " 50% "   height = " 24 " > < p   align = " right " > 
 　 　 索取 号 ： < / td > ' ) ; 
 　 htp . p ( '   < td > < input   TYPE = " text "   NAME = " call _ no "   SIZE = " 20 "   MAXLENGTH = " 40 " > < / td > < / tr >   ' ) ; 
 　 htp . p ( ' < tr > < td   width = " 50% "   height = " 24 " > < p   align = " right " > 
 　 文献 类型 ： < / td > ' ) ; 
 　 htp . p ( '   < td > < select   name = " doctype "   size = " 1 " >   < option   selected   value = " * " > 所有 类型 < / option >   ' ) ; 
 　 for   r   in   c   loop 
 　 htp . p ( ' < option   value = " ' | | r . doc _ type _ code | | ' " > ' | | r . doc _ type _ name | | ' < / option >   ' ) ; 
 　 end   loop ; 
 　 htp . p ( ' < / select > < / td > < / tr >   ' ) ; 
 　 htp . p ( ' < tr > < td   width = " 100% "   height = " 24 "   colspan = " 2 "   align = " center " > < input   TYPE = " submit "   VALUE = " 开始 查询 " > ' ) ; 
 　 htp . p ( ' < input   TYPE = " reset "   VALUE = " 重新 输入 " >   
 　 　 < / td > < / tr > < / table > ' ) ; 
 　 htp . formClose ; 
 end   complex _ search ; 
 　 　 存储 过程 complex _ search 动态 读取 数据库 中 数据 ， 产生 HTML 标记 及 相关 信息 ， 生成 的 HTML 文档 ， 在 浏览器 IE 下 显示 如图 5 。 
 
 图 5 书刊 目录 查询 画面 
 　 　 在 OPAC 的 实现 中 ， 并 不是 所有 的 HTML 文档 都 是 由 PL / SQL 存储 过程 动态 生成 。 对于 不 需要 访问 数据库 的 请求 ， 我们 直接 使用 了 静态 的 HTML 页面 。 当 请求 到达 OAS   时 ， 根据 虚拟 路径 的 不同 ， 静态 HTML 文档 直接 从 OAS 服务器 中 返回 ， 提高 了 响应 的 速度 的 效率 。 
 5     结束语 
 　 　 基于 三层 C / S 计算 模式 的 Oracle   Application   Server 与 Oracle 数据库 紧密结合 ， 充分利用 了 Oracle 数据库 的 强大 功能 ， 提供 了 快速 高效 的 Web 服务 。 OPAC 系统 在 全国 数十家 高校 图书馆 的 使用 中 ， 其 优异 的 性能 获得 了 用户 的 一致 好评 。 
 王晔 ( 南京大学 计算机系     南京   210093 ) 
 张福炎 ( 南京大学 计算机系     南京   210093 ) 
 黄伟红 ( 南京大学 计算机系     南京   210093 ) 
 闵峰 ( 南京大学 计算机系     南京   210093 ) 
 参考文献 
 1 ， Oracle   Application   Server   Document 
 2 ， Scott   Urman 著 .   Oracle8   PL / SQL 程序设计 .   北京 :   机械 工业 出版社 
 收稿 日期 ： 1999 - 12 - 27 
