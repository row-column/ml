计算机 应用 研究 
 APPLICATION   RESERCH   OF   COMPUTERS 
 2000     Vol.17 　 No.1 　 P.84 - 86 
 
 
 
 
 一种 基于 Web 技术 的 网络 数据库系统 的 设计 
 惠晓实 　 王凯航 　 陆舟 　 谢璨 
 摘   要   介绍 一种 基于 Web 技术 的 网络 数据库系统 的 设计 ， 详细描述 了 系统结构 ， 网络 数据库 解决方案 ， 系统 设计 ， 程序设计 和 网络 数据库 的 运行 等 几个 方面 。 
 关键词   网络 数据库   Web   ODBC   ASP / ADC 
 　 　 在 电子商务 中 ， 从 制造业 到 零售业 和 服务业 都 表现 为 对 Internet 上 数据库 应用 的 急剧 增长 。 消费者 跟踪 ， 销售 广告 和 市场 行为 的 实现 等 都 将 使用 一个 Web 浏览器 作为 客户端 。 但 由于 在 Web 服务器 中 ， 信息 以 文本 或 图象 文件 的 形式 进行 存储 ， 所以 Web 查询 速度 很 慢 、 检索 机制 很 弱 ， 尤其 是 基于 内容 和 基于 结构 的 检索 。 它 不 像 Sybase 、 Oracle 、 Informix 等 专用 数据库系统 ， 能 对 大批量 数据 进行 有序 的 、 有 规则 的 组织 与 管理 ， 只要 给出 查询 条件 便 能 很快 得到 查询 结果 。 但 Web 的 亲切 界面 和 广泛 流行 ， 尤其 是 它 的 通过 Internet 可以 进行 远程 查询 和 维护 的 功能 ， 又 是 这些 数据库系统 所 无法比拟 的 。 因此 ， 利用 Internet 中 Web 的 超文本 ， 超链接 功能 查询数据库 成为 人们 的 愿望 。 若能 把 Web 技术 与 数据库 技术 有机 地 结合 在 一起 ， 必 能 大大 扩展 Web 功能 ， 也 可 充分利用 原来 这些 数据库系统 中 宝贵 的 信息 资源 ， 把 两者 的 优点 集于 一体 ， 使 Internet 同时 具有 超文本 功能 和 数据库 功能 ， 将 使 信息系统 的 性能 得到 很大 的 提高 。 网络化 的 信息 交换 是 各种 数据 交互 的 结果 ， 大量 的 基于 网络 的 数据库 正是 这种 网络化 信息 社会 的 基础 。 因此 ， 基于 Web 的 网络 数据库系统 ， 将 成为 电子商务 和 网络 信息 交换 的 基础 工具 。 
 1   系统结构 
 基于 Web 的 网络 数据库系统 由 一个 Web 浏览器 作为 用户界面 、 一个 数据库 服务器 用作 信息 存储 和 一个 连接 两者 的 Web 服务器 组成 ， 如图 1 所示 。 Web 软件 将 数据 陈述 简化 并且 标准化 ， DBMS ( 数据库 管理系统 ) 则 组织 和 标准化 数据 的 接收 和 存储 。 这即 增强 了 数据库 访问 的 途径 ， 也 是 管理 Web 节点 的 改进 方法 。 用户 唯一 需要 在 机器 上 安装 的 程序 是 Web 浏览器 ， 并且 唯一 需要 学会 使用 的 也 是 Web 浏览器 。 用户 通过 Web 页 上 显示 的 表格 和 数据库 进行 交互 操作 。 典型 的 交互 操作 包括 读取 页 、 单击 链接 、 在 列表框 中 进行 选择 以及 查询 和 输入 数据 域 。 从 数据库 获取 的 信息 能以 文本 、 图象 、 表 、 图形 或者 多媒体 对象 的 形式 在 Web 页 上 显示 。 
 
 图 1 　 基于 Web 的 数据库系统 的 基本 结构 
 　 　 Web 和 数据库 这 两种 技术 ， 各自 有 其 自己 的 优点 。 Web 具有 用户界面 的 定义 非常简单 ， 关于 定义数据 的 说明性 语言 非常 完美 ， 允许 巨大 传输 量 的 传输 协议 非常 健壮 等 优点 。 而 数据库系统 的 优点 是 它 具有 清晰 定义 的 数据模型 ， 存储 和 获取数据 的 健壮 的 方法 ， 发展 用户界面 和 应用 程序逻辑 的 软件工具 ， 强大 的 授权 和 安全 机制 ， 以及 控制 事务 和 维持 数据完整性 的 有效途径 等 。 设计 基于 Web 的 网络 数据库系统 正是 要 结合 两种 技术 的 优点 。 
 　 　 我们 设计 的 基于 Web 的 网络 数据库系统 ， 是 一种 能够 适应 电子商务 的 通用 的 查询 和 数据库 维护 系统 。 但是 ， 在 具体 开发 时 ， 我们 选择 了 一个 具有 具体 目的 的 实用 的 商务 系统 进行 开发 ， 使得 设计 的 系统 从 一 开始 就 具有 实用性 。 目前 设计 的 系统 是 为了 在 一个 WWW 网站 上 实现 本 地区 和 全国 的 电脑 软硬件 的 Web 查询 ， 远程 维护 和 在线 定购 等 功能 。 从 更 远 的 角度 讲 ， 这是 电子商务 应用 中 的 一个 雏形 ， 在 此基础 上 ， 其 可扩展性 将 为 建立 一个 商业 上 的 强大 交互式 网站 提供 模型 。 这 其中 最 关键 的 问题 是 查询 的 速度 和 数据 更新 的 速度 。 影响 查询 速度 的 有 两个 方面 ： 一个 是 网络 的 速度 ； 一个 是 数据库 查询 的 效率 。 数据 的 更新 速度 依靠 于 管理员 的 工作 。 只有 解决 了 这 两个 问题 ， 这个 商情 发布 和 定购 系统 才 有 实际意义 。 
 2   网络 数据库 解决方案 
 　 　 目前 存取 网络 数据库 的 解决方案 主要 有 ： 
 　 　 ( 1 ) CGI ： 通用 网关 接口 CGI 是 当前 较为 常用 的 一种 技术 。 CGI 标准 允许 选择 使用 多种不同 语言 来 编写 动态 Web 文档 ， 这些 语言 包括 FORTRAN 、 C 等 编译语言 和 Perl 、 TCL 、 UNIX   Shell 等 解释 语言 。 传统 的 CGI 有 很多 缺点 ： 如 不易 开发 、 修改 成本 高 、 功能 有限 、 不易 纠错 和 不 具备 事物 ( Transaction ) 的 功能 。 尤其 是 它 采用 多 进程 ， 对 每 一个 请求 都 要 启动 一个 新 进程 去 处理 。 在 用户 访问 高峰期 ， 大量 的 进程 会 耗掉 大量 的 系统资源 ， 使 网站 表现 出 响应 时间 延长 ， 处理 缓慢 的 情况 。 
 　 　 ( 2 ) ISAPI ： ( Internet   Server   API ) ， 由 Microsoft 提出 ， 作为 一种 服务器 编程 接口标准 ， 以 DLL 等 程序库 的 方式 ， 可 减少 一些 CGI 中 的 限制 ， 尤其 是 多 进程 的 问题 ， 为 扩展 CGI 提供 了 一些 好处 。 
 　 　 ( 3 ) NSAPI ： ( Networks   Server   API ) ， 由 Netscape 提出 ， 与 ISAPI 类似 ， 针对 Netscape 服务器 。 
 　 　 ( 4 ) Script 语言 ： 目前 存取 网络 数据库 的 解决方案 趋向于 在 服务器端 运行 简单 的 Script 脚本语言 、 结构化 查询语言 SQL 命令 与 标准 HTML 代码 ， 通过 ODBC 驱动程序 ， 连接 到 各种 数据库 ， 运行 SQL 命令 ， 即可 存取 网络 数据库 。 所谓 的 摻 疟居 镅 源  霐 包括 普通 的 标准 HTML 模板 、 扩充 的 HTML 模板 ， 以及 使用 一种 Script 语言 来 控制 HTML 模板 和 SQL 命令 。 
 　 　 ( 5 ) Java ： 来自 Sun   Microsystems 公司 ， 是 当前 风靡 世界 的 网络 语言 。 Java 是 一种 强劲 的 、 结构合理 、 安全 简单 、 面向对象 、 分布式 、 多线程 和 动态 的 网络 开发 语言 。 通过 Java 各种 有效 的 数据库 API 和 使用 JDBC 的 驱动程序 ， 用户 能 开发 出 与 众多 数据库 服务器 产品 相匹配 的 应用程序 和 Applet 。 
 　 　 我们 选择 ASP / ADO 技术 进行 网络 数据库系统 的 开发 。 
 　 　 ASP / ADO 是 由 Microsoft 开发 的 新 技术 ， 是 完整 的 网络 数据库 解决方案 ， 正 逐步 流行起来 。 它 具备 以下 特点 ： 
 　 　 ( 1 ) 编程 简单 。 ASP 使用 脚本语言 ， 直接 嵌入 到 HTML 中 ， 不 需要 编译 和 连接 即可 直接 运行 。 脚本语言 的 特性 是 简单 易学 ， 而且 编辑 和 调试 起来 非常 方便 。 
 　 　 ( 2 ) 管理 方便 。 Script 语言 都 嵌入 到 网页 语言 HTML 中 ， 使 Script 和 HTML 的 开发 一次性 完成 ， 管理 起来 非常 方便 。 其它 的 技术 与 HTML 是 分离 的 ， 而且 它们 与 HTML 的 编写 是 两个 完全 不同 的 过程 。 
 　 　 ( 3 ) 支持 广泛 。 ASP 通过 ActiveX   Data   Object 技术 实现 数据库 存取 功能 。 它 可 通过 ODBC 驱动程序 ， 连接 多种 数据库 ， 包括 FoxPro ， dBase ， MSSQL   Server ， Oracle ， Informix ， DB2 等 主要 商用 数据库 。 
 　 　 ( 4 ) 可扩充性 。 ASP 除了 支持 VBScript 和 JavaScript 外 ， 还 能 以 插件 的 形式 支持 第三方 语言 ， 如 PERL 、 TCL 等 。 此外 ， ASP 还 可 通过 ActiveX   Server   Components   ( ActiveX 服务器 元件 ) 来 扩充 功能 。 可 利用 Visual   Basic ， Visual   C++ ， COBOL 等 程序设计 语言 来 开发 这些 ActiveX   Server   Components 。 
 　 　 　 ( 5 ) 面向对象 。 
 　 　 ( 6 ) 与 浏览器 无关 。 所有 的 浏览器 都 支持 ASP 。 因为 脚本 是 服务器 上 而 不是 在 客户端 运行 ， 传送 到 浏览器 上 的 Web 页 是 在 Web 服务器 上 生成 的 ， 所以 不必 担心 浏览器 能否 处理 脚本 ， Web 服务器 已经 完成 了 所有 脚本 的 处理 ， 并 将 标准 的 HTML 传输 到 浏览器 。 而且 由于 只有 脚本 的 结果 返回 到 浏览器 ， 所以 服务器端 脚本 不易 复制 。 用户 看不到 创建 他们 正在 浏览 的 页 的 脚本 命令 。 他们 看到 的 只是 标准 的 HTML 。 
 　 　 ASP 通过 后缀名 为 . asp 的 文件 实现 ， 浏览器 从 Web 服务器 上 请求 . asp 文件 时 ， ASP 脚本 开始运行 。 然后 Web 服务器 调用 ASP ， ASP 全面 读取 请求 的 文件 ， 执行 所有 脚本 命令 ， 并 将 动态 产生 的 Web 页 传送 给 浏览器 。 
 　 　 ASP 的 运行 环境 是 Microsoft 的 IIS ( Internet   Information   Server / Windows   NT ) 或 PWS ( Personal   Web   Server / Windows   95 / 98 ) 两种 Web   Server ， 再装 上 Active   Server   Pages 。 当然 这 也 是 ASP 的 一大 局限 ， 但 由于 NT 平台 的 市场占有率 的 迅速 增长 和 ASP 的 上述 特点 ， ASP 技术 正 逐步 流行起来 。 
 　 　 Windows   NT   Server 包括 IIS ， 在 IIS3.0 中 提供 了 三种 服务 ： WWW 、 Gopher 、 FTP ， WWW 服务 为 客户 浏览器 提交 Web 页 ， 并 允许 客户 访问 . asp 文件 。 我们 直接 安装 使用 最新 的 IIS4.0 版本 ， 因为 它 具有 更强 更 高 的 Web 管理 机能 和 安全性 。 
 　 　 在 数据库 方面 ， 关系数据库 ( DBMS ) 现在 已 取代 它 之前 的 层次 型 和 网状 型 数据库 ， 而 成为 数据库 的 主流 ， 结构式 查询语言 ( SQL ) 是 关系 型 数据库 查询 中 运用 最 广泛 的 一种 语言 ， 是 一种 能 很 好 地 操纵 和 访问 数据 的 语言 。 SQL 语句 还 可以 被 嵌入 到 另 一种 语言 中 ， 从而 使 其 具有 数据库 存取 功能 。 SQL 还是 一种 交互式 查询语言 ， 允许 用户 直接 查询 存储 数据 ， 利用 这一 交互 特性 ， 用户 可以 在 很 短 的 时间 内 回答 相当 复杂 的 问题 。 我们 采用 标准 的 SQL - 92 作为 数据库 查询语言 。 
 　 　 同时 ， 我们 采用 Microsoft   SQL   Server   6.5 作为 数据库 服务器 。 这是 一个 可 伸缩 的 ， 高性能 的 关系数据库 管理系统 ， 它 专为 客户 / 服务器 环境 而 设计 。 它 的 开放式 的 系统 体系结构 ， 强大 的 管理工具 和 内置 数据 复制 功能 为 发布 信息 解决方案 提供 了 一个 卓越 的 平台 。 
 　 　 综上所述 ， 我们 使用 的 一系列 开发工具 和 环境 如下 。 
 　 　 操作系统 ： Windows   NT   4.0 
 　 　 Web 服务器 ： IIS   4.0 
 　 　 数据库 服务器 ： Microsoft   SQL   Server   6.5 
 　 　 开发工具 ： Visual   InterDev ， FrontPage   98 ， Visual   J ++ 6.0 
 3   系统 设计 
 　 　 将 系统 的 使用者 分为 四类 ： 网络管理员 ， 公司 ， 注册 用户 和 一般 用户 。 网络管理员 负责 整个 网站 数据库 的 维护 ， 其 职权 包括 管理 使用者 的 使用 权限 和 密码 以及 对 各个 数据库 等 进行 维护 和 管理 ； 公司 可以 通过 远程 输入 更新 本 公司 信息 发布 的 内容 并 查询 本 公司 的 定购 表单 。 注册 用户 拥有 定购 的 、 查询 购物 帐单 和 获得 每日 最新 行情 通知 的 权利 。 一般 用户 只 具有 浏览 商情 和 查询 报价 的 权利 。 
 　 　 客户 数据 采集 是 系统 的 一项 重要 功能 ， 本 系统 通过 注册 采集 客户 数据 ： 一般 用户 可 通过 填写 注册表 成为 注册 用户 ， 而 网络管理员 对 注册表 的 数据 进行 核对 ， 从而 获得 用户 的 数据 同时 赋予 其 注册 用户 密码 和 权限 。 
 　 　 数据库 包括 五个 表 。 
 　 　 Corbtab 表 存储 公司 和 系统管理员 的 信息 和 权限 。 Corp - id 是 公司 代号 ， Corp - city 、 Corp - name 、 Corp - address 、 Corp - connect 分别 是 所在城市 、 公司 名 、 地址 和 联系 ， Corp - password 是 管理员 和 公司 的 密码 ， remark 是 备注 。 identify 是 使用 权限 ， 网站 管理员 为 “ 9 ” 是 终极 权限 ， 可 管理 和 修改 所有 的 表 ， 而 公司 的 权限 低于 “ 9 ” ， 可 管理 本 公司 的 数据库 。 本表 的 主 关键字 是 Corp - id 。 
 　 　 Hardware 表 存储 硬件 的 信息 ， “ hardware . Corp - id = corptab - Corp - id ” 建立 了 hardware 表 和 corptab 的 关系 。 Hard - category 、 Hard - brand 、 Hard - spec 、 offer 分别 为 硬件 的 种类 、 品牌 、 型号 和 价格 。 由于 电脑硬件 价格 的 行情 变化 迅速 ， 所以 设立 Date 为 硬件 价格 的 日期 。 Timestamp 是 本表 的 主 关键字 ， 代表 硬件 的 产品 序列号 。 
 　 　 Software 表 存储 软件 的 信息 ， “ software . Corp - id = corptab - Corp - id ” 建立 了 software 表 和 corptab 的 关系 。 Soft - category 、 Soft - brand 、 Soft - made 、 offer 分别 为 软件 的 种类 、 名称 、 制作 公司 和 价格 。 因 电脑软件 价格 的 行情 相对 稳定 ， 不 设立 date 标志 。 同样 ， Timestamp 是 本表 的 主 关键词 ， 代表 软件 的 产品 序列号 。 
 　 　 Customer 表 存储 注册 用户 信息 ， Cust - id 、 Cust - name 、 Cust - prof 、 Cust - card 、 Cust - address 、 Cust - phone 、 Cust - email 、 Cust - password 分别 为 用户 的 ID 、 姓名 、 职业 ， 身份证 号码 、 住址 、 电话 、 E - mail 、 密码 ， timestamp 是 用户注册 时间 。 本表 的 主 关键词 是 Cust - id 。 
 　 　 Ordertab 表 存储 定购 单 信息 ， 通过 “ ordertab . cust - id = customer . cust - id ” 、 “ ordertab . productID = hardware .   timesta ” “ ordertab . productID = hardware . timestamp ” 与 customer 表 和 hardware 、 software 表 建立联系 。 ProductID 是 定购 产品 的 编号 ， Order - number 、 Date 是 定购 数量 和 定购 日期 。 
 4   程序设计 
 　 　 ( 1 ) 建立 数据库 连接 ， 设立 连接 属性 。 
 　 　 使用 ASP 的 Server . CreateObject 方法 创建 ADODB . Connection 和 ADODB . Recordset 对象 的 实例 。 接着 ， 使用 脚本语言 的 变量 分配 指令 为 对象 实例 命名 Conn 和 RS 。 值得注意 的 是 ， 在 使用 完后 ， 要 使用 Conn . close 关闭 数据库 。 
 　 　 ( 2 ) 准备 Sql 查询 语句 ， 确定 查询 条件 。 
 　 　 根据 用户 的 查询 条件 确定 SQL 语句 ， 然后 使用 Source 属性 记录 SQL 说明 ， 使用 Open 方法 传送 ， 这种 方法 可以 得到 最优化 的 性能 。 用 循环 语句 顺次 下移 光标 来 输出 数据 。 使用 RS . EOF 是否 为 真 判断 光标 是否 到底 。 用 各列 数据 组成 查询 选单 ， 用户 可用 选单 确定 查询 条件 。 
 　 　 ( 3 ) 修改 数据库 。 
 　 　 根据 用户 的 增加 、 修改 、 删除 要求 确定 相应 的 SQL 语句 。 然后 使用 执行 完成 数据库 的 操作 。 
 　 　 ( 4 ) 密码 检查 。 
 　 　 有 的 页面 要求 密码 才能 进入 。 则 check 程序 根据 用户 输入 的 用户名 从 数据库 中 取出 密码 ， 再 与 用户 输入 的 密码 进行 比较 。 如果 不 正确 ， 就 显示 警告 页面 。 正确 的 用户名 和 密码 存入 Session 中 。 进入 要求 密码 的 页面 ， 则 它 会 从 Session 和 数据库 中 取出 用户名 和 密码 进行 校验 ， 否则 就 转到 起始页 面 。 这样 可以 避免 有人 用 页面 名 直接 申请 页面 。 另外 ， 就是 退出 时要 使用 注销 退出 ， 这样 可以 清除 Session 和 Cooke 中 的 数据 ， 以免 被 人 利用 。 
 　 　 ( 5 ) 定购 表 。 
 　 　 用户 可以 使用 CheckBox 复选框 来 选择 定购 产品 。 通过 产品 序列号 来 唯一 确定 和 标识 产品 ， 定购 单 存在 Session ( " ProductLink " ) 中 ， 使用 变量 SUM 来 计算 定购 产品 的 数量 和 总价 。 用户 可以 修改 定购 数量 和 退回 定购 。 定购 单 存入 ordertab 表中 ， 可以 在 定购 历史 中 查询 。 
 　 　 ( 6 ) 将 查询 结果 分页 显示 。 
 　 　 将 数据库 中 所有 符合 查询 条件 的 记录 一次性 的 都 读入 recordset 中 ， 存放 在 内存 中 ， 然后 通过 ADORecordset 对象 所 提供 的 几个 专门 支持 分页 处理 的 属性 ： PageSize ( 页 大小 ) 、 PageCount ( 页 数目 ) 以及 AbsolutePage ( 绝对 页 ) 来 管理 分页 处理 。 每页 设置 为 可 显示 十列 。 
 5   运行 网络 数据库 
 　 　 网络 数据库 运行 的 方法 ， 分为 以下 两步 ： 
 　 　 ( 1 ) 运行 网络 服务器 和 建立 虚拟目录 ， 在 IIS 中点取 “ 虚拟目录 ” 下 的 “ ／ _ private ” 目录 ， 以 编辑 该 虚拟目录 的 物理 路径 和 目录名 ， 通常 “ ／ _ private ” 的 物理 路径 为 “ C : \ Inetpub \ wwwroot ” ， 该 目录 是 系统 默认 的 WWW 发布 根目录 ， 然后 ， 将 . asp 文件 复制到 “ : \ Inetpub \ wwwroot ” 目录 下 。 最后 ， 要 注意 将 该 虚拟目录 的 访问 权限 选择 为 “ 执行 ” 、 “ 脚本 ” ， 为了 安全 ， 最好 不要 设 为 读取 。 
 　 　 ( 2 ) 建立 数据源 名称 ， 选择 ODBC 驱动程序 和 数据库 文件 。 利用 ASP 的 DatabaseAccess 组件 通过 ADO 连接 并 操作 Web 数据库 的 方法 有 DSN 和 DSN - less 两种 ： 
 　 　 。 DSN ( Data   Source   Name 数据源 名称 ) ： 建立 一个 系统 数据源 名称 ， 在 ODBC 的 事件 管理器 中 ， 添加 你 的 数据库 文件 为 揝 ystem   DSN 敗 Ｔ 贏 SP 程序 中 用 < % connstr = " DSN " % > 指定 DSN 。 
 　 　 。 DSN - less ： 是 另 一种 通过 在 ASP 文件 里 直接 指定 数据库 文件 所在位置 ， 而 无需 建立 DSN 的 方法 。 由于 许多 公司 没有 自己 的 WEB 服务器 ， 他们 的 网站 往往 是 存放 在 远 端的 虚拟 服务器 上 ， 因此 要 建立 和 修改 DSN 的 设置 比较 麻烦 。 而 使用 DSN - less 方法 直接 指定 远端 数据库 所在位置 恰恰 解决 了 这 一 问题 ， 方法 如下 ： 
 < % connstr = " DBQ = " + server . mappath ( " database / source . mdb " ) + " ; 
 DefaultDir = ; DRIVE   R = { Microsoft   Access   Driver   ( * . mdb ) } ; DriverId = 25 ; 
 FIL = MS   Access ; ImplicitCommit   Sync = Yes ; MaxBufferSize = 512 ; 
 MaxScanRows = 8 ; PageTimeout = 5 ; Safe   Transactions = 0 ; 
 Th   reads = 3 ; UserCommitSync = Yes ; "   % > 
 　 　 在 指定 了 想要 连接 的 数据库 后 ， 就 可以 通过 以下 方法 连接 并 打开 数据库 ： 
 < %   Set   Conn = Server . CreateObject ( " ADODB . Connection " ) Conn .   Open   constr 
 % > 
 6   总结 
 　 　 基于 Web 的 网络 数据库系统 是 电子商务 发展 的 基础 。 ASP / ADO 技术 是 一项 较 新 并 在 迅速 发展 成熟 的 技术 ， 它 正 迅速 取代 传统 CGI 的 地位 ， 成为 网络 数据库 和 动态 交互式 网站 的 流行 技术 。 现在 ASP 已经 可以 运行 在 其它 非 NT 平台 上 了 。 要 在 非 NT 平台 上 开发 并 运行 ASP 应用程序 我们 可以 依赖于 一套 名为 InstantASP 的 第三方 软件 。 这套 由 Halcyon 软件 公司 开发 的 软件 使得 无需 再 重复 开发 原有 ASP 应用程序 即 可以 将 它 运行 在 任何 操作 平台 上 。 这 就 使 ASP 真正 成为 了 一种 跨平台 的 Internet 、 Intranet 或 Extranet 应用程序 。 InstantASP 不仅 提供 了 ASP 的 运作 环境 ， 而且 它 将 ActiveX 组件 和 Enterprise   Java   Beans 或者 CORBA - compliant   objects 组合 起来 ， 从而 使 ASP 有 了 更为 广泛 的 应用 。 它 同样 提供 了 通过 ADO 接口 访问 连接 各种 数据库 ， 并 生成 动态 页面 的 强大 功能 。 对于 开发者 而言 可以 使用 编程语言 或 工具 如 ： Visual   Basic ， JavaScript ， VBScript ， C++ ， Java ， HTML ， Delphi ， Visual   InterDev 等 来 进行 开发 。 
 惠晓实 （ 华中理工大学 光电子 工程系   武汉   430074 ） 　 
 王凯航 （ 华中理工大学 光电子 工程系   武汉   430074 ） 　 
 陆舟 （ 华中理工大学 光电子 工程系   武汉   430074 ） 　 
 谢璨 （ 华中理工大学 光电子 工程系   武汉   430074 ） 
 参考文献 
 1 ， 周 世雄 .   NT 网络 数据库 速成 椛 杓 剖道 中国 铁道 出版社 ,   1998 年 
 2 ， 张 卫民 ,   黄 瑞芳 ,   卢宇彤 .   Java 语言 及 应用 .   清华大学出版社 ,   1996 年 
 3 ， Curt   Lang   Jeff   Chow 著 .   周之英 ,   田 金兰 等 译 .   WEB 网 和 INTRANET 上 的 信息 出版 技术 .   电子 工业 出版社 ,   1998 年 
 收稿 日期 ： 1999 年 8 月 3 日 
