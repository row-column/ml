计算机 工程 
 COMPUTER   ENGINEERING 
 1999 年     第 25 卷   第 7 期   Vol.25   No.5   1999 
 
 
 
 Windows   NT 环境 下 远程 诊断系统 的 实现 
 魏小勇   张根度 
 摘要   详细 阐述 了 NT 下 SNMP 的 工作 原理 , 并 讨论 了 基于 SNMP 的 远程 诊断系统 在 Windows   NT 环境 下 的 构造方法 , 包括 NT 对 远程 访问 的 支持 、 NT 的 SNMP 实现 框架 等 内容 。 
 关键词   远程 诊断   简单 网络管理 协议   MIB   远程 访问 服务   Windwos   NT 
 The   Implementation   of   Remote   diagnostic   System   under   Windows   NT 
 Wei   Xiaoyong   Zhang   Gendu 
 Network   Center   of   Fudan   University   Shanghai   200433 
 Abstract ： This   paper   discusses   the   implementation   of   a   remote   diagnostic   system   based   on   SNMP . It   is   comprised   of   the   topic   on   NT ' s   support   of   remote   access   and   the   main   frame   of   SNMP   implementation   under   the   Windows   NT   environment . 
 Key   words ： Remote   diagnosis ; SNMP ; MIB ; RAS ; Windows   Nt 
 1 　 远程 诊断 的 提出 
 　 　 在 应用软件 市场竞争 日益 激烈 的 今天 ， 售后服务 和 技术支持 逐渐 成为 衡量 软件产品 质量 的 重要 标准 之一 。 软件厂商 为了 提高 自己 产品 的 竞争力 ， 往往 需要 投入 大量 资金 和 人力 用于 技术支持 人员 的 培训 和 提供 迅捷 的 服务 响应 。 为了 提高 服务 效率 ， 降低 技术支持 成本 ， 有 必要 对 应用 系统 运行 中 的 故障 加以 分类 ， 并 对 不同 类别 的 问题 施以 不同 的 解决 对策 。 
 　 　 应用 系统 投入 现场 运行 后 ， 用户 可能 提出 的 问题 很多 ， 其 诱发 原因 大体上 可 分为 以下 3 类 ： ① 用户 对 软件 的 使用 不 熟练 ， 不 知道 如何 操作 以 完成 所 需 功能 ； ② 软件 参数 配置 不当 或 外部 的 软 / 硬件 故障 ； ③ 软件 内部 逻辑 错误 。 
 　 　 第一类 问题 可以 通过 加强 用户 培训 ， 编写 清晰 详尽 的 用户手册 来 解决 ； 第三类 问题 只能 通过 开发人员 的 查错 纠错 来 解决 。 在 应用 系统 经过 实践 考验 ， 逐步 趋于稳定 运行 之后 ， 第二类 问题 就 成为 系统故障 的 主体 。 对 这类 问题 ， 如果 事先 由 应用软件 自身 的 状态 判断 出 故障 原因 ， 然后 根据 具体 问题 制订 相应 的 解决 对策 ( 如 远程 修改 参数 配置 、 指导 用户 自行解决 、 派出 技术人员 现场 处理 等 ) ， 无疑 能够 大幅度提高 服务 响应速度 ， 减少 技术支持 人员 派遣 的 盲目性 。 远程 诊断 就是 用于 这一 目的 。 应用 系统 分布 的 地理 范围 越广 ， 越 能够 体现 远程 诊断 在 整个 技术支持 体系 中 的 重要性 。 
 2 　 基于 SNMP 的 远程 诊断 
 2.1 　 远程 诊断 与 SNMP 
 　 　 远程 诊断 的 关键在于 ， 诊断 主机 能够 取得 被 诊断系统 的 实时 运行 状态 。 诊断 主机 与 被 诊断系统 之间 的 信息 交换 涉及 到 诊断 信息结构 、 诊断 信息 传输 协议 和 底层 通信 等 几个 方面 。 简单 网络管理 协议 SNMP 为 这 几个 方面 制订 了 统一 的 标准 。 使用 SNMP 开发 诊断系统 能够 降低 系统 复杂性 ， 并 为 诊断系统 在 不同 硬件 / 操作系统 上 互操作 提供 了 有利条件 。 
 2.2 　 SNMP 管理 模型 
 　 　 SNMP 是 基于 TCP / IP 的 网络管理 协议 ， 由 以下 4 部分 组成 ： ① 被 管理 节点 ； ② 管理 机 ； ③ 管理 信息 ； ④ 管理 协议 。 
 　 　 被 管理 节点 可以 是 主机 、 路由器 、 网桥 、 网络 打印机 或 其他 有 能力 与 外界 交换 状态 信息 的 网络设备 。 在 远程 诊断 中 ， 被 管理 节点 主要 指 运行 被 诊断系统 进程 的 主机 。 为了 能够 直接 被 SNMP 管理 ， 被 管理 节点 必须 运行 一个 SNMP 管理 进程 ， 又 称为 SNMP 代理 ( Agent ) 。 代理 维护 一个 描述 本 机 状态变量 的 数据库 。 管理工作 由 管理 机 完成 。 在 远程 诊断 中 ， 管理 机 就是 运行 专用 诊断 软件 的 通用 计算机 。 为了 保证 代理 的 简单 性 ， 并 使得 代理 对 宿主 设备 的 性能 影响 最小化 ， 所有 的 管理 智能 都 集中 在 管理 机上 。 被 管理 节点 只 需要 准确 报告 自己 的 运行 状态 ， 如何 通过 这些 状态 信息 确定 系统故障 原因 是 管理 机 的 责任 。 
 　 　 每个 被 管理 设备 维护 一个 或 多个 变量 用于 描述 自身 状态 。 在 SNMP 术语 中 ， 这些 变量 被 称为 " 对象 " 。 网络 上 可能 存在 的 对象 在 管理 信息库 MIB ( Management   Information   Base ) 中 定义 。 管理 机 使用 SNMP 协议 与 代理 进行 交互 ， 询问 代理 维护 的 对象 状态 ， 或 在 必要 时 修改 它们 的 值 。 代理 也 可以 在 非常 事件 发生 时 主动 向 管理 机 报告 ， 这种 报告 称为 SNMP 陷井 ( Trap ) 。 
 　 　 SNMP 模型 的 核心 是 一组 由 代理 维护 ， 并 由 管理 机 读写 的 对象 。 为了 便于 不同 厂商 产品 的 交互 ， 这些 对象 必须 用 一种 独立 于 厂商 的 标准 来 定义 。 另一方面 ， 网络 传输 也 需要 一种 标准 对 所传 数据 进行 编码 。 SNMP 使用 OSI 的 ASN.1 ( Abstract   Syntax   Notation ) 作为 对象 定义 和 编码 的 标准 。 ASN.1 并非 完美 的 数据表示 方法 ， 它 的 编码 规则 以 减少 网络 传输 量 为 优化 基准 ， 却 忽视 了 传输 双方 CPU 为 编码 和 解码 所 付出 的 高昂 代价 。 
 2.3 　 SNMP 实现 的 难点 
 　 　 从 以上 叙述 可以 看出 ， 要 实现 基于 SNMP 的 远程 诊断系统 ， 必须 完成 以下 工作 ： ① 诊断 主机 与 被 诊断系统 之间 的 TCP / IP 通信 支持 ； ② 被 诊断系统 的 SNMP 代理 ； ③ ASN.1 的 编码 与 解码 ； ④ 被 诊断系统 MIB 模块 的 定义 及其 对象 的 维护 ； ⑤ 综合 管理 信息 判断 系统故障 原因 。 
 　 　 其中 ， 前 3 项 工作 对于 任何 一个 SNMP 系统 都 是 相同 的 ， 只有 最后 两项 因 不同 的 SNMP 应用 而异 。 目前 ， 国内 大部分 工矿企业 还 不 具备 联入 Internet 的 条件 ， 中心 诊断 主机 与 分布 在 不同 地区 的 远程 被 诊断系统 之间 的 通信 还是 通过 公用电话 网 ( PSTN ) 实现 的 ， 如果 没有 完善 的 系统软件 支持 ， 单单 完成 第一项 工作 对 软件 开发人员 来说 也 是 相当 费力 的 。 另外 ， 由于 SNMP 与 ASN.1 本身 所 固有 的 复杂性 ， 使得 在 缺乏 系统软件 支持 的 PC 上 ， 前 3 项 工作 可 占去 整个 系统 开发 工作量 的 80 ～ 90% ， 然而 只有 最后 两项 才 被 认为 是 系统 的 目标 。 这样 的 工作量 比例 使 技术 决策人员 难以 下决心 来 使用 SNMP 作为 构造 个人 计算机 应用 系统 远程 诊断 的 基石 ， 即使 SNMP 有 诸多 理论 上 的 优点 。 
 　 　 令人欣慰 的 是 ， Windows   NT   4.0 对 基于 PSTN 的 TCP / IP 和 SNMP 的 支持 使 这种 局面 得到 了 彻底 改观 。 现在 ， 软件 开发人员 只要 集中精力 在 最后 两项 工作 ， 也 是 一个 诊断系统 的 实质性 工作 上 ， 就 能够 建造 一个 简洁 、 高效 、 具有 SNMP 所有 优点 的 远程 诊断系统 。 下面 讨论 如何 在 Windows   NT 下 具体 实现 一个 远程 诊断系统 。 
 3 　 NT 下 基于 SNMP 远程 诊断系统 的 实现 
 3.1 　 中心 诊断 主机 与 远程 被 诊断系统 之间 的 TCP / IP 通信 
 　 　 Windows   NT 支持 远程 访问 服务 RAS ( Remote   Access   Service ) 。 RAS 使 远程 计算机 能够 像 直接 连 在 局域网 上 一样 使用 网络资源 。 RAS 以 PSTN 作为 物理 信道 ， 向 上层 提供数据 链路层 服务 。 RAS 支持 多路复用 ， 能 将 多条 物理 电话 连接 复用 至 一条 逻辑 RAS 连接 ， 从而 获得 较 高 的 信道 速率 。 在 RAS 基础 上 ， NT 可以 将 TCP / IP 协议 同时 绑定 到 常规 网卡 和 Modem 上去 。 Windows   NT   4.0 的 自动 拨号 特性 ( AutoDial   Feature ) 使得 常规 网卡 与 Modem 的 区别 对 上层 TCP / IP 用户 完全 透明 。 
 　 　 假设 有 一套 远程 诊断系统 。 中心 诊断 主机 与 各 被 诊断系统 都 通过 Modem 连接 在 公用电话 网上 。 定时器 触发 诊断 主机 A 向 被 诊断 主机 B 查询 状态 信息 。 诊断 进程 向 IP 层 发送 目标 地址 为 B 的 IP 报文 。 由于 A 、 B 不 连接 在 同一 局域网 上 ， 所以 发送 操作 会因 目标 地址 不可 达 而 失败 ， 于是 自动 拨号 机制 启动 。 自动 拨号 在 主机 A 与 B 之间 建立 RAS 连接 ， RAS 连接 成功 后 ， 主机 A 上 的 Modem 变成 一块 具有 IP地址 的 虚拟 网卡 ， 使 主机 A 在 逻辑 上 同时 连接 两个 局域网 ， 无论 这 两个 局域网 在 地理位置 上 相差 多么 遥远 。 对 TCP / IP 以上 的 应用程序 ， 整个 从 IP 到 RAS 的 映射 过程 是 透明 的 ， 也就是说 ， 在 NT   4.0 上 开发 SNMP 远程 诊断系统 ， 对 开发者 而言 ， 完全 可以 将 " 远程 " 两字 抛 至 脑后 ， 远程 与 本地 的 差距 将 由 操作系统 来 弥补 。 
 3.2 　 Windows   NT 环境 下 SNMP 的 实现 框架 
 　 　 NT 对 SNMP 的 支持 主要 实现 在 以下 几个 系统 模块 中 ： 
 　 　 ( 1 )   SNMP . EXE ： 它 以 NT   Service 的 形式 存在 ， 是 可 扩展 的 SNMP 代理 。 它 处理 代理 方 的 ASN.1 的 编码 与 解码 ， 并 将 管理 机 发出 的 GET 、 GETNEXT 、 SET 命令 映射 成 SNMP 扩展 动态 库中 的 相应 函数调用 。 
 　 　 ( 2 )   MGMTAPI . DLL ： 它 是 一个 动态 连接 库 ， 处理 管理方 的 ASN.1 的 编码 与 解码 ， 并 将 SNMP 的 GET 、 GETNEXT 、 SET 命令 包装 成 函数调用 形式 供 管理程序 开发者 使用 。 
 　 　 ( 3 )   SNMPTRAP . EXE ： 它 以 NT   Service 的 形式 存在 ， 处理 被 管理 节点 发出 的 SNMP 陷井 。 它 运行 在 管理 机上 ， 与 MGMTAPI . DLL 配合 为 管理程序 开发者 提供 服务 。 
 　 　 ( 4 )   SNMPAPI . DLL ： 它 是 SNMP 的 外围 动态 库 ， 提供 了 一组 工具 函数 ， 以期 简化 扩展 代理 库及 管理程序 的 开发 。 这些 工具 函数 包括 内存 管理 、 对象 标识符 管理 、 变量 链表 管理 等 。 
 　 　 在 用户 开发 的 远程 诊断系统 中 ， 为了 支持 自定义 的 MIB ， 必须 为 该 MIB 编写 一个 动态 连接 库 ， 然后 将 此 动态 库联入 SNMP 服务 。 一个 SNMP 扩展 动态 库 可以 同时 支持 ASN.1 对象 命名 树中 的 多 棵子 树 。 以下 假设 用户 编写 了 一个 支持 ASN.1 对象 命名 树中 根为   . 1.3 . 6.1 . 4.1 . 12   的 子树 的 SNMP 扩展 动态 库 ， 动态 库 名为 USERMIB . DLL 。 下面 说明 NT 下 SNMP 的 工作 机制 。 
 　 　 图 1 示出 了 一个 简单 的 SNMP 诊断系统 的 框架 。 为了 使 示意图 简洁 ， 在 此 略去 了 与 SNMP 工作 机制 无关 的 SNMPAPI . DLL 。 图中 ， 若 模块 A 位于 模块 B 上方 ， 则 表明 A 使用 B 提供 的 服务 ， 或 A 调用 了 B 提供 的 函数 。 椭圆形 表示 NT 提供 的 系统 模块 ， 矩形 表示 需要 用户 自己 开发 的 模块 。 
 
 图 1   简单 SNMP 诊断系统 的 框架 
 　 　 用户 开发 的 USERMIB . DLL 必须 遵循 NT - SNMP 扩展 动态 库 的 规范 ， 为了 理解 方便 ， 有 必要 对此 规范 及 MGMTAPI 中 的 服务 函数 做 简单 介绍 。 SNMP 扩展 动态 库是 Win32 的 动态 连接 库 ， 因此 ， 它 必须 遵循 Win32   DLL 的 开发 规范 [ 3 ] 。 除此而外 ， SNMP 扩展 动态 库 还 应该 为 以下 函数 提供 实现 代码 ： 
 　 　 ( 1 )   SnmpExtensionInit ： 当 SNMP 服务 启动 时 ， 可 扩展 代理       ( SNMP . EXE ) 会 调用 扩展 动态 库 的 SnmpExtensionInit 函数 ， 以 完成 代理 与 扩展 库 之间 的 双边 初始化 工作 。 扩展 库 通过 此 函数 通知 代理 自己 所 支持 的 视图 ( ASN.1 对象 命名 树中 某子 树 的 根 节点 ) ， 并 返回 一个 陷井 事件 句柄 。 
 　 　 ( 2 )   SnmpExtensionQuery ： 当可 扩展 代理 收到 管理 机 发出 的 GET 、 GETNEXT 或 SET 请求 时 ， 它 将 根据 各 扩展 库所 支持 的 视图 来 选择 适当 的 扩展 库 ， 然后 调用 该 扩展 库 的 SnmpExtensionQuery 函数 。 扩展 库 在 此 函数 中 完成 对象 的 查询 或 设置 ， 再 将 结果 返回 给 可 扩展 代理 。 
 　 　 ( 3 )   SnmpExtensionTrap ： 可 扩展 代理 一旦 检测 到 某 扩展 库 的 陷井 事件 句柄 上 有 信号 ( Signal ) ， 就 调用 该 扩展 库 的 SnmpExtensionTrap 函数 来 收集 它 所 产生 的 一系列 陷井 。 
 　 　 MGMTAPI . DLL 为 管理方 提供 了 一组 函数 ， 用于 完成 SNMP 管理 操作 。 
 　 　 ( 1 )   SnmpMgrOpen ： 初始化 通信 套 接字 及 相关 数据结构 ， 开始 与 指定 代理 之间 的 SNMP 会话 。 
 　 　 ( 2 )   SnmpMgrRequest ： 在 指定 代理 上 执行 一次 SNMP   Get 、 GetNext 或 Set 操作 ， 并 返回 操作 结果 。 
 　 　 ( 3 )   SnmpMgrClose ： 关闭 通信 套 接字 ， 释放 相关 系统资源 ， 结束 SNMP 会话 。 
 　 　 ( 4 )   SnmpMgrTrapListen ： 管理 进程 调用 此 函数 来 表明 自己 接收 SNMPTRAP 的 愿望 。 
 　 　 ( 5 )   SnmpMgrGetTrap ： 当 Trap 发生 时 ， 管理 进程 调用 此 函数 取得 具体 的 Trap 信息 。 
 　 　 下面 举例说明 诊断 主机 A 与 被 诊断 主机 B 使用 SNMP 通信 的 具体 过程 。 
 　 　 通常 情况 下 ， 诊断 进程 由 定时器 触发 ， 启动 一次 诊断 会话 。 主机 A 的 诊断 进程 调用 SnmpMgpOpen 连接 到 被 诊断 主机 B 上 ， 然后 用 SnmpMgrRequest 查询 名为   . 1.3 . 6.1 . 4.1 . 12.2 . 1   的 对象 状态 。 主机 B 上 的 可 扩展 代理 收到 相应 的 SNMP 请求 ， 发现 被 操作 对象 包含 在 USERMIB . DLL 所 支持 的 视图 中 ， 于是 调用 USERMIB . DLL 的 SnmpExtensionQuery 函数 来 获取 相应 的 对象 状态 ， 再 将 结果 返回 给 诊断 主机 A 。 主机 A 格式化 返回 结果 ， 作为 SnmpMgrRequest 的 返回值 传送 给 诊断 进程 。 状态 信息 收集 完成 后 ， 诊断 进程 调用 SnmpMgrClose 结束 本次 SNMP 会话 。 状态 信息 交换 过程 所 涉及 的 ASN.1 的 编码 与 解码 在 诊断 主机 上 由 MGMTAPI . DLL 完成 ， 在 被 诊断 主机 上 由 可 扩展 代理 SNMP . EXE 完成 。 
 　 　 主机 B 上 的 被 诊断 进程 若 发现 自身 故障 ， 也 可 使用 SNMP   Trap 主动 向 诊断 主机 报告 。 被 诊断 进程 设置 USERMIB . DLL 中 的 陷井 事件 句柄 为 有 信号 状态 ， 可 扩展 代理 检测 到 该 信号 ， 就 会 向 诊断 主机 发送 UDP 报文 。 主机 A 上 的 SNMP   Trap   Service 收到 UDP 报文 后 ， 将 诊断 进程 通过 SnmpMgrTrapListen 传送 给 MGMTAPI . DLL 的 陷井 监听 事件 句柄 设置 为 有 信号 状态 。 该 信号 触发 诊断 进程 的 一系列 SnmpMgrGetRrap 调用 ， 这些 调用 导致 被 诊断 主机 上 可 扩展 代理 对 USERMIB . DLL 中 SnmpExtensionTrap 的 函数调用 。 被 诊断 进程 在 SnmpExtensionTrap 中将 发生 的 具体 陷井 信息 返回 给 可 扩展 代理 ， 再 由 代理 经 诊断 主机 的 MGMTAPI . DLL 传送 给 诊断 进程 。 
 4 　 结束语 
 　 　 目前 ， Microsoft   Windows 系列 对 SNMP 的 支持 仅限于 NT4.0 ， 而 一般 的 应用 系统 既 包含 运行 NT 的 高档 服务器 ， 也 包含 运行 Windows   95 和 Windows     3 . x 的 中低档 计算机 。 如何 将 这些 中低档 计算机 纳入 NT 的 SNMP 管理 范围 ， 仍 是 一个 值得 探索 的 问题 。 
 　 　 总而言之 ， NT4.0 对 RAS 与 SNMP 的 全面 支持 使 远程 诊断系统 的 开发 变得 规范 、 易行 ， 在 此基础 上 开发 标准化 的 远程 诊断系统 是 一件 很 有 意义 的 工作 ， 它 将 使 基于 个人 计算机 的 应用软件 的 技术支持 走上 一个 新台阶 。 
 作者简介 ： 魏小勇   男 ， 24 岁 ， 研究生 ， 主研 方向 ： 计算机网络 与 分布式系统 
 作者 单位 ： 复旦大学 网络信息中心   上海   200433 
 参考文献 
 1 　 Tanenbaum   A   S . Computer     Networks.3 rd   Edition , Prentice   Hall ， 1996 
 2 　 Microsoft   Platform   SDK   Documentation . Microsoft     Corporation , 1997 
 收稿 日期 ： 1998 - 08 - 31 
