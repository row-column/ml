软件 学报 
 Journal   of   Software 
 2000   Vol.11   No.1   P.126 - 132 
 
 
 
 消除 VLIW 结构 上 的 循环体 间 冗余 流 相关 
 容红波 　 汤志忠 
 摘 　 要 　 数据 相关 是 并行处理 的 基本 依据 . 该文 指出 , VLIW ( very   long   instruction   word ) 特有 的 锁步 性质 使 其 数据 相关性 分析 具有 与众不同 的 特点 . 同 一体 差上 的 流 相关 形成 一个 线序 集合 , 多体 差上 的 特征 流 相关 之间 也 存在 包含 关系 . 据此 , 提出 一种 用于 VLIW 的 消除 循环体 间 冗余 流 相关 的 方法 . 该 方法 是 完备 的 , 可以 去除 所有 冗余 的 体间 流 相关 , 从而 减轻 循环 调度 的 负担 . 文章 给出 判定 单体 差 和 多体 差 存在 冗余 的 充分 必要条件 , 以及 消除 冗余 的 线性 复杂度 的 算法 . 这种 方法 具有 普遍意义 , 可 作为 VLIW 上 软件 流水 和 多 指令流 调度 的 基础 . 
 关键词 　 VLIW ( very   long   instruction   word ) , 循环 调度 , 数据 相关 , 循环 , 冗余 . 
 中图法 分类号 　 TP338 
 Eliminate   Redundant   Loop - Carried   Flow   Dependences   for   VLIW   Architectures 
 RONG   Hong - bo 　 TANG   Zhi - zhong 
 ( Department   of   Computer   Science   and   Technology 　 Tsinghua   University 　 Beijing 　 100084 ) 
 Abstract 　 Data   dependence   is   the   basic   guideline   and   constraint   for   parallel   processing .   The   structural   distinctiveness   of   VLIW   ( very   long   instruction   word ) ,   i . e . ,   the   lockstep   property ,   leads   to   remarkable   uniqueness   in   its   data   dependence   analysis ,   as   is   shown   in   this   paper .   Flow   dependences   with   the   same   iteration   distance   comprise   a   linear   ordered   set ,   while   characteristic   flow   dependences   with   different   iteration   distances   may   also   have   inclusion   relationship   between   each   other .   From   such   discovery ,   a   novel   method   is   presented   to   eliminate   redundant   loop - carried   flow   dependences   for   VLIW   architectures ,   so   as   to   facilitate   loop   scheduling .   The   method   is   complete   in   that   it   gets   rid   of   all   redundancies .   The   sufficient   and   necessary   preconditions   to   identify   redundancy   for   single   and   multiple   iteration   distances   are   given ,   and   a   linear   ordered   algorithm   is   described .   The   method   is   generic ,   and   can   serve   as   a   foundation   for   research   on   VLIW ,   such   as   software   pipelining   and   multi - instruction   stream   scheduling . 
 Key   words 　 VLIW   ( very   long   instruction   word ) ,   loop   scheduling ,   data   dependence ,   loop ,   redundancy . 
 　 　 数据 相关 是 并行处理 的 基本 依据 . 有关 数据 相关性 分析 的 成果 虽然 很多 ［ 1 , 2 ］ , 但是 针对 VLIW ( very   long   instruction   word ) 这一 特定 结构 的 工作 尚未 见到 . 目前 , 在 VLIW 上 进行 并行 循环 调度 , 如 软件 流水 , 都 是 使用 传统 的 基于 向量 机 的 数据 相关性 分析方法 ［ 3 , 4 ］ , 缺乏 对 VLIW 的 专门 研究 . 而 本文 将 说明 , 由于 VLIW 结构 上 的 特殊性 , 它 在 数据 相关 方面 具有 与众不同 的 特点 . 
 　 　 如何 开发 循环体 间 的 并行性 是 VLIW 研究 的 热点 . 影响 循环 调度 的 关键因素 是 体间 数据 相关 , 尤其 是 流 相关 . 本文 将 讨论 在 调度 循环 时 如何 消除 冗余 的 体间 流 相关 , 以 降低 调度 的 复杂性 . 
 　 　 本文 作 以下 几个 假定 . 
 　 　 ( 1 )   所有 处理器 / 功能 单元 以锁步 方式 操作 . 这是 VLIW 的 基本特征 ［ 3 , 4 ］ . 
 　 　 ( 2 )   一个 周期 一条 长 指令 . 注意 这个 假定 没有 考虑 多 周期 操作 , 如 浮点运算 , 但 这 并 不 影响 结果 的 正确性 . 通常 , 多 周期 操作 可以 用空 操作 弥补 . 例如 , 设 OPi 到 OPj 有 体间 流 相关 , 分别 需要 Ti 和 Tj 个 周期 , 则 可 在 OPi 和 OPj 后 分别 加入 Ti － 1 和 Tj － 1 个空 操作 , 并 认为 OPi 后面 的 最后 一个 空 操作 与 OPj 相关 . 
 　 　 ( 3 )   同一 循环体 中 的 操作 具有 相对 固定 的 位置 . 由于 这一 限制 , 本文 的 结果 只能 直接 用于 相关 图中 的 强 连通 块 ( 为 最小化 启动 间距 而 保证 优先 地 、 紧密 地 调度 , 次序 在 列表 调度 之前 确定 ) . 这一 条件 将 在 以后 的 研究 中 有所 放松 . 
 　 　 一般 地 , 一个 数据 相关 图 DDG ( data   dependence   graph ) 含有 多 个体 差 , 每个 体差 上 又 有 多个 流 相关 . 先 分别 消除 每个 体差 上 的 冗余 , 再 将 所有 体差 结合 起来 考虑 , 进一步 消除 冗余 , 这是 本文 的 基本 思想 . 下面 给出 一些 基本 定义 和 结论 , 其中 A , B , A1 , A2 , ... , An 表示 流 相关 ； OPi 表示 一个 操作 , i 是 该 操作 在 循环体 中 的 序号 . 
 1   单体 差 的 冗余 判定 
 　 　 定义 1 .   设 A 是 一个 流 相关 , 表示 OPi 到 OPj 具有 写读 关系 , 体差 为 d , d 是非 负 整数 , 记作 A ： ( OPi → OPj , d ) . 
 　 　 当 d = 0 时 , A 为 体内 流 相关 , 否则 为 体间 流 相关 . 下面 提到 的 任何 流 相关 , 都 默认 为 体间 流 相关 , 即 d ≥ 1 . 
 　 　 定义 2 .   设有 流 相关 A , B , 如果 只要 满足 A , B 就 自然 得到 满足 , 则 称 A 包含 B , 记作 AB . 
 　 　 定义 3 .   设有 流 相关 A , B , 如果 AB , 并且 BA , 则 称 A , B 相等 , 记作 A ＝ B . 
 　 　 定义 4 .   设有 流 相关 A , B , 如果 AB , 但 A 不 等于 B , 则 称 A 真 包含 B , 记作 AB . 
 　 　 性质 .   , ＝ , 都 具有 传递性 . 
 　 　 引理 1 .   ( 平移 性质 ) 设有 流 相关 A ： ( OPi → OPj , d ) , B ： ( OPi ′ → OPj ′ , d ) , 则 当 i － j = i ′ － j ′ 时 , A = B . 
 　 　 证明 : 先证 AB . 用 time ( OP ) 表示 OP 的 执行 时刻 . 
 　 　 如图 1 所示 , 每条 竖线 代表 一个 循环体 , 竖线 上 的 点 代表 操作 , 操作 序号 自上而下 递增 . 下文 与 此 相同 , 不再 说明 . 
 
 Fig.1 　 Traslation   property 
 图 1 　 平移 性质 
 　 　 设 A 得到 满足 , 即 OPj 在 OPi 之后 执行 , 则 
 time ( OPj ) － time ( OPi ) ＞ 0 . 　 ( 1 ) 
 　 　   由于 两个 体是 以锁步 方式 、 一个 周期 一条 指令 来 进行 的 , 所以 
 time ( OPi ) － time ( OPi ′ ) = i - i ′ , 　 ( 2 ) 
 time ( OPj ) － time ( OPj ′ ) = j - j ′ . 　 ( 3 ) 
 　 　 当 i － j ＝ i ′ － j ′ 时 , i － i ′ ＝ j － j ′ , 由式 ( 2 ) 和 式 ( 3 ) 得 time ( OPi ) － time ( OPi ′ ) ＝ time ( OPj ) － time ( OPj ′ ) , 于是 time ( OPj ′ ) ＝ time ( OPi ′ ) ＋ time ( OPj ) － time ( OPi ) . 由式 ( 1 ) 得 time ( OPj ′ ) ＞ time ( OPi ′ ) . 所以 OPj ′ 将 在 OPi ′ 之后 执行 , B 也 得到 满足 . 因此 , AB . 
 　 　 同理可证 , BA . 于是 A ＝ B .   
 □ 
 　 　 在 给定 条件 下 , 图 1 中 代表 A , B 的 两条 有 向 线段 是 平行 的 , 因此 , 称 上述 性质 为 平移 性质 . 平移 性质 说明 , 对 VLIW , 任何 一个 流 相关 ( OPi → OPj , d ) , 都 可以 写作 ( OPi － j → OP0 , d ) , 去掉 公共 符号 , 可以 简写 为 ( i － j , d ) . 所以 流 相关 的 起始 操作 和 终止 操作 的 绝对 位置 并 不 重要 , 重要 的 是 它们 的 相对 位置 . 因此 有 定义 5 . 
 　 　 定义 5 .   流 相关 A ： ( OPi → OPj , d ) , 可以 写成 ( λ , d ) , 其中 λ = i － j , 称为 流 相关 A 的 特征值 . 
 　 　 下面 推导 一个 重要 定理 . 
 　 　 定理 1 .   设有 流 相关 A ： ( λ a , d ) , B ： ( λ b , d ) , 则 
 　 　 ( 1 ) 
 　 　 证明 : 根据 平移 性质 , 可以 将流 相关 B 平移 , 使 之 与 流 相关 A 的 起始 操作 相同 . 如图 2 所示 , λ a 与 λ b 存在 大于 、 等于 和 小于 这 3 种 关系 , 分别 对应 于 AB , A ＝ B 和 BA . 证明 与 平移 性质 的 证明 类似 , 不再 赘述 . 
 
 Fig.2 　 Illustration   of   theorem   1 
 图 2 　 定理 1 
 　 　 由图 2 ( a ) 和 2 ( b ) 有 AB λ a ≥ λ b ； 
 　 　 由图 2 ( b ) 有 A ＝ B λ a = λ b ； 由图 2 ( a ) 有 AB λ a ＞ λ b ； 
 □ 
 　 　 推论 .   如果 AB 不 成立 , 则 BA . 
 　 　 证明 : AB 不 成立 λ a ≥ λ b 不 成立 λ b ＞ λ aBA . 
 □ 
 　 　 这 意味着 , 同 一体 差 d 上 的 所有 流 相关 , 将 按 特征值 的 大小 构成 线序 . 如图 3 所示 , 若 λ An ≥ λ   An - 1 ≥ ... ≥ λ A1 , 则 AnAn - 1 ... A1 . 因此 , 只要 保留 An , 其余 的 都 可 作为 冗余 删掉 . 我们 称 An 为体 差 d 上 的 特征 流 相关 . 
 
 Fig.3 　 Inclusion   between   flow   dependences   with   the   same   iteration   distance 
 图 3 　 同 一体 差上 的 流 相关 的 包含 
 　 　 定义 6 .   对 某 一体 差 d , 唯一 对应 着 一个 特征值 , 记 为 λ ( d ) , 其 取值 如下 ： 当体 差 d 上无流 相关 时 , λ ( d ) ＝ － ∞ , 否则 , λ ( d ) = max ｛ λ i ｜ ( λ i , d ) 是 d 上 的 流 相关 ｝ . ( λ ( d ) , d ) 称为 d 上 的 特征 流 相关 . 
 　 　 上面 讨论 了 单体 差 的 情况 , 下面 讨论 多体 差 的 情况 . 
 2   多体 差 的 冗余 判定 
 　 　 定义 7 .   设有 流 相关 A1 , A2 , ... , An , n ＞ 1 , 如果 只要 满足 它们 就 可以 自然 满足 另 一个 流 相关 B , 则 称 A1 , A2 , ... , An 真 包含 B , 记作 A1 ＋ A2 ＋ ... ＋ AnB . 
 　 　 定义 8 .   设有 流 相关 A1 , A2 , ... , An 和 B , n ＞ 1 , A1 ＋ A2 ＋ ... ＋ AnB , 且 对 任 一流 相关 X , 如果 A1 ＋ A2 ＋ ... ＋ AnX , 则 必有 BX , 那么 , 称 B 是 A1 , A2 , ... , An 的 最大 包含 流 相关 , 记作 MaxIncluded ( A1 , A2 , ... , An ) ＝ B . 
 　 　 定义 9 .   设有 流 相关 A1 , A2 , ... , An , n ＞ 1 , 将 它们 通过 平移 首尾相连 , 则 它们 一定 包含 了 另 一个 流 相关 B , B 的 起点 是 A1 的 起点 , B 的 终点 是 An 的 终点 , 称 B 为 A1 , A2 , ... , An 的 自然 包含 , 记为 NaturalIncluded ( A1 , A2 , ... , An ) = B . 
 　 　 在 有 多 个体 差时 , 即使 每个 体差 只 保留 了 其 特征 流 相关 , 仍 可能 存在 冗余 . 如图 4 所示 , 设 A , B , C 为 不同 体差 上 的 特征 流 相关 , 则 A + BNaturalIncluded ( A , B ) C , 所以 C 可以 删去 . 
 
 Fig.4 　 Redundancy   in   the   case   of   multiple   iteration   distances 
 图 4 　 多 个体 差时 的 冗余 
 　 　 最大 包含 流 相关 和 自然 包含 流 相关 具有 如下 性质 : 
 　 　 性质 1 .   MaxIncluded ( A1 , A2 , ... , An ) NaturalIncluded ( A1 , A2 , ... , An ) . 
 　 　 性质 2 .   A1 ＋ A2 +...+ AnBMaxIncluded ( A1 , A2 , ... , An ) B . 
 　 　 性质 1 和 性质 2 可以 由 最大 包含 流 相关 和 自然 包含 流 相关 的 定义 直接 得出 . 
 　 　 下面 给出 求 最大 包含 流 相关 的 方法 . 
 　 　 定理 2 .   设有 流 相关 A1 , A2 , ... , An , n ＞ 1 , 其中 Ai ： ( λ i , di ) , i = 1 , 2 , ... , n , 则 MaxIncluded ( A1 , A2 , ... , An ) 
 　 　 证明 : 如图 5 所示 . 通过 平移 , 使 A1 , A2 , ... , An 首尾相接 . 假设 A1 的 起点 为 OPk , 则 根据 特征值 的 定义 , 其 终点 为 OPk － λ 1 , A2 的 终点 为 OPk － ( λ 1 ＋ λ 2 ) , ... , An 的 终点 为 OPk － ( λ 1 ＋ λ 2 +... ＋ λ n ) . 因为 共 涉及 n 个体 间流 相关 , 每个 相关 的 终点 至少 要 滞后 其 起点 一个 周期 , 所以 , An 的 终点 至少 要 滞后 A1 的 起点 n 个 周期 . 那么 , 由 An 的 终点 向上 退 n － 1 个 周期 , 在 该 点 处 的 操作 OPk － ( λ 1 ＋ λ 2 +...+ λ n ) － n + 1 是 最早 的 、 必然 在 A1 的 起点 OPk 后 执行 的 操作 . 由 这两点 所 确定 的 相关 是 A1 , A2 , ... , An 所 包含 的 最大 流 相关 . 
 
 Fig.5 　 Compute   Max   Included ( A1 , A2 , ... An ) 
 图 5 　 计算机 Max   Included ( A1 , A2 , ... An ) 
 　 　 所以 , MaxIncluded ( A1 , A2 , ... , An ) 的 特征值 ＝ k － ［ k － ( λ 1 + λ 2 +...+ λ n ) － n + 1 ］ = ( λ 1 + λ 2 +...+ λ n ) + n － 1 ＝ 
 　 　 MaxIncluded ( A1 , A2 , ... , An ) 的 体差 显然 是 各 Ai ( i = 1 , 2 , ... , n ) 的 体差 的 和 . 
 □ 
 　 　 推论 1 ( 对称性 ) .   MaxIncluded ( A1 , A2 , ... , An ) ＝ MaxIncluded ( Ai1 , Ai2 , ... , Ain ) , 其中 i1 , i2 , ... , in 是 1 , 2 , ... , n 的 任 一种 排列 . 即 MaxIncluded 的 参数 顺序 无所谓 . 
 　 　 推论 2 .   给定 流 相关 X ： ( λ x , d ) 和 Y ： ( λ y , d ) , 以及 任意 一组 流 相关 A1 , A2 , ... , An , n ＞ 0 , 则 
 　 　 ( 1 )   λ x ≥ λ yMaxIncluded ( X , A1 , A2 , ... , An ) MaxIncluded ( Y , A1 , A2 , ... , An ) ； 
 　 　 ( 2 )   λ x ＞ λ yMaxIncluded ( X , A1 , A2 , ... , An ) MaxIncluded ( Y , A1 , A2 , ... , An ) ； 
 　 　 ( 3 )   λ x ＝ λ yMaxIncluded ( X , A1 , A2 , ... , An ) ＝ MaxIncluded ( Y , A1 , A2 , ... , An ) . 
 　 　 推论 3 .   给定 两组 流 相关 A1 , A2 , ... , An 和 B1 , B2 , ... , Bn , n ＞ 1 , 其中 Ai 是 体差 i 上 的 特征 流 相关 , Bi 是 体差 i 上 的 任意 一个 流 相关 , i = 1 , 2 , ... , n , 则 MaxIncluded ( A1 , A2 , ... , An ) MaxIncluded ( B1 , B2 , ... , Bn ) . 
 　 　 消除 多 个体 差上 冗余 流 相关 的 基本 思想 , 就是 要 用 若干 较小体 差上 的 流 相关 , 包含 一个 较大 体差 上 的 流 相关 . 因而 只要 保留 那些 较小体 差上 的 流 相关 即可 , 较大 体差 上 的 那个 流 相关 就是 冗余 的 ( 如图 4 所示 ) . 
 　 　 对 一个 体差 d , 我们 已经 在 消除 单体 差 冗余 的 时候 将 它 上面 的 所有 流 相关 删减 到 只 剩下 它 的 特征 流 相关 , 假设 为 ρ . 根据 性质 2 , 如果 我们 能 找到 一些 流 相关 A1 , A2 , ... , An , 使 MaxIncluded ( A1 , A2 , ... , An ) ρ , 那么 , 只要 保留 A1 , ... , An , 就 可以 删除 ρ , 从而 d 上 的 所有 流 相关 都 被 删除 . 
 　 　 但是 , 我们 要 寻找 的 A1 , A2 , ... , An 并 不 唯一 . 因为 同 一体 差 d 可以 分解 为 若干 体差 d1 , d2 , ... , dn 之 和 , 这种 分解 是 不 唯一 的 . 每 一组 分解 d1 , d2 , ... , dn 都 对应 着 一组 特征 流 相关 A1 , A2 , ... , An , 从而 对应 着 一个 不同 的 MaxIncluded ( A1 , A2 , ... , An ) . 
 　 　 所以 , 为了 判断 体差 d 上 的 冗余 是否 已 完全 被 消除 , 需要 找到 d 的 所有 分解 , 从而 找到 所有 的 MaxIncluded ( A1 , A2 , ... , An ) . 这些 MaxIncluded 具有 同 一体 差 d , 因此 , 它们 之间 一定 也 可以 排成 线序 , 我们 定义 它们 中 的 最大者 ( 包含 其他 所有 MaxIncluded 的 那个 MaxIncluded ) 为体 差 d 上 的 特征 最大 包含 , 记 作 Δ d . 
 　 　 下面 给出 多体 差时 的 冗余 判定 方法 . 
 　 　 定理 3 .   给定 体差 d 上 的 特征 流 相关 ρ 以及 d 上 的 特征 最大 包含 Δ d , 则 当且 仅 当 Δ d ρ 时 , 体差 d 上 的 所有 流 相关 可以 被 删除 . 
 　 　 证明 : 所有 流 相关 可以 被 删除 , 即 是 说 特征 流 相关 ρ 可 被 删除 . 
 　 　 ( 1 )   充分性 . 当 Δ d ρ 时 , 根据 Δ d 的 定义 , 一定 存在 某些 流 相关 A1 , A2 , ... , An , 其中 Ai ： ( λ i , di ) , i = 1 , ... , n , 且 di = d , 使得 MaxIncluded ( A1 , A2 , ... , An ) ρ . 因此 , 保留 A1 , A2 , ... , An 即可 , ρ 可 被 删除 . 
 　 　 ( 2 )   必要性 . 由于 ρ 可 被 删除 , 意味着 存在 某些 流 相关 A1 , A2 , ... , An , 使得 A1 + A2 +...+ An ρ , 其中 Ai ： ( λ i , di ) , i = 1 , ... , n , 且 di = d . 由 性质 2 , 有 MaxIncluded ( A1 , A2 , ... , An ) ρ . 又 由 Δ d 的 定义 , Δ d  MaxIncluded ( A1 , A2 , ... , An ) . 有 传递性 , 所以 , Δ d ρ . 
 □ 
 　 　 因此 , 在 多体 差 的 情况 下 , 要 简化 某 个体 差 d 上 的 流 相关 , 需 要求 出 Δ d . 下面 , 我们 来 推导 Δ d 的 公式 . 
 　 　 定理 4 .   给定 体差 d , 则 Δ d = ( λ , d ) , 其中 λ = max ｛ λ 1 + 1 + λ 2 , λ 1 + 1 + λ ( Δ ( d － d1 ) ) ｜ ( λ 1 , d1 ) 是 体差 d1 上 的 特征 流 相关 , d1 = 1 , 2 , ... , d － 1 ； ( λ 2 , d2 ) 是 体差 d2 上 的 特征 流 相关 , 且 d1 + d2 ＝ d ｝ . 
 　 　 证明 : 显然 , Δ d 的 体差 是 d . 现在 要求 特征值 λ . 
 　 　 由 Δ d 的 定义 , λ ( Δ d ) = max ｛ λ ( MaxIncluded ( A1 , A2 , ... , An ) ) ｜ Ai ： ( λ i , di ) 是 流 相关 , i = 1 , ... , n , n ＞ 1 , 且 di = d ｝ . 定理 2 的 推论 3 说明 , 当 A1 , A2 , ... , An 都 是 特征 流 相关 时 , MaxIncluded 的 特征值 λ 最大 , 因此 我们 可以 进一步 假定 A1 , A2 , ... , An 都 是 特征 流 相关 . 
 　 　 由 定理 2 , MaxIncluded ( A1 , A2 , ... , An ) = ( λ i + 1 ) - 1 , d . 于是 , λ ( MaxIncluded ( A1 , A2 , ... , An ) ) = 
 　 　 因此 , λ ( Δ d ) = max ( λ 1 ＋ 1 ） ＋ ( λ i + 1 ) - 1 . 
 　 　 当 n = 2 时 , λ ( Δ d ) = max ｛ ( λ 1 + 1 ) + ( λ 2 + 1 ) - 1 ｝ = max ｛ ( λ 1 + 1 ) + λ 2 ｝ . 
 　 　 当 n ＞ 2 时 , λ ( Δ d ) = max ｛ ( λ 1 + 1 ) + λ ( MaxIncluded ( A2 , ... , An ) ) ｝ = max ｛ ( λ 1 + 1 ) + max ( λ ( MaxIncluded ( A2 , ... , An ) ) ) ｝ = max ｛ ( λ 1 + 1 ) + λ ( Δ ( d - d1 ) ) ｝ . d1 是 d 的 分解 中 的 一部分 , 所以 d ＞ d1 , 于是 d1 的 取值 范围 是 1 , 2 , ... , d － 1 . 注意 , 这是 一个 递归 式 . 
 　 　 因此 , 对 n 的 所有 情况 , 有 λ = max ｛ λ 1 + 1 + λ 2 , λ 1 + 1 + λ ( Δ ( d － d1 ) ) ｝ . 
 □ 
 　 　 定理 4 给出 了 计算 Δ d 的 递归 方法 . 为 提高 速度 , 下面 的 算法 将 递归 转化 为 递推 . 
 3   算   法 
 　 　 首先 , 我们 对 数据 相关 图上 的 每个 体差 单独 考虑 , 消除 单体 差上 的 冗余 流 相关 ； 然后 将 这些 体差 综合 考虑 , 进一步 消除 多体 差上 的 冗余 . 
 　 　 定义 Pn  m = ［ ρ ij ］ , 其中 n 是 最大 体差 , m 是 所有 体差 上 的 流 相关 个数 的 最大值 . ρ ij 是 体差 i 上 的 一个 流 相关 ( ρ ij , i ) 的 特征值 . P 的 第 i 行 记录 体差 i 上 的 流 相关 . 当体 差 i 上 的 所有 流 相关 都 已 填入 Ρ , 但 Ρ 的 第 i 行 仍 未 填满 时 , 将 剩余 空位 都 填上 － ∞ . 
 　 　 令 向量 Λ n = ［ λ i ］ , 其中 λ i = max ｛ ρ ij ｜ ρ ij ∈ Ρ , j = 1 , 2 , ... , m ｝ . ( λ i , i ) 就是 体差 i 上 的 特征 流 相关 . 只 保留 Λ 中 的 流 相关 , 删除 其他 的 , 单体 差上 的 冗余 即 已 消除 . 
 　 　 定义 向量 Δ n = ［ Δ i ］ . 最初 令 Δ 1 = － ∞ , 其余 值 待定 . 
 　 　 算法 如下 ： 
 　 　 
 　 　 
 　 　 
 　 　 
 　 　 这个 算法 的 时间 和 空间 复杂度 都 是 O ( mn ) . 
 　 　 最后 给出 一个 例子 . 如图 6 所示 , 循环 具有 6 个体 间流 相关 , 经过 冗余 消除 , 只 剩下 1 个 . 可 将 算法 与 图 对照 理解 . 
 
 
 Fig.6 　 An   example   of   elininating   redundant   loop - carried   flow   dependences 
 图 6 　 消除 冗余 体间 流 相关 的 例子 
 4   实 　 验 
 　 　 随机 选取 几个 程序 , 所得 实验 结果 见表 1 . 
 Table   1 
 表 1 
 
 Program ① Total   ( intra - block )   loop - carried 
 flow   dependences ② After   redundancy 
 removal ③ Redundancy 
 rate ④ ( ％ ) 
 Product5260 
 Flower4175 
 Sift5260 
 Vander10280 
 Merge13469 
 
 ① 程序 , ② ( 基本块 内 的 ) 体间 流 相关 总数 , ③ 删除 冗余 后 的 体间 流 相关 总数 , ④ 冗余度 . 
 其中 , 冗余度 是 指 冗余 流 相关 占 所有 流 相关 的 百分比 . 由表中 可以 看出 , 平均 冗余度 约 为 69 ％ . 主要 的 原因 是 每个 体差 上 有 多个 流 相关 , 但 最后 只 保留 一个 . 这 是 由 VLIW 特有 的 锁步 性质 造成 的 . 本文 旨在 提出 VLIW 上流 相关 分析 的 基本 性质 . 以上 实验 限于 基本块 内 , 我们 将 另文 介绍 如何 将 本文 结果 推广 到 一般 . 
 5   结束语 
 　 　 体间 流 相关 是 制约 循环 调度 的 根本 因素 , 然而 并非 每个 体间 流 相关 都 需要 考虑 . 消除 那些 不必要 的 相关 , 有利于 减轻 循环 调度 的 负担 . VLIW 特有 的 锁步 性质 导致 了 它 在 数据 相关 方面 具有 与众不同 的 特点 . 据此 , 本文 提出 了 一种 消除 冗余 的 方法 , 给出 了 判定 单体 差 和 多体 差 存在 冗余 的 充分 必要条件 以及 消除 冗余 的 线性 复杂度 的 算法 . 
 虽然 我们 是 以 VLIW 上 的 循环 调度 为 出发点 考虑 的 , 但是 , 从文中 的 分析 过程 可以 看出 , 这种 方法 实际上 是 一种 一般化 的 方法 , 并 不 局限于 循环 , 故可 作为 VLIW 上 软件 流水 和 多 指令流 调度 的 基础 . 因此 这一 方法 具有 重要 的 理论 和 应用 价值 . 我们 将 继续 深入研究 这些 方面 的 应用 . 
 本文 研究 得到 国家自然科学基金 ( No.69773028 ) 资助 。 
 容红波 （ 清华大学 计算机科学 与 技术 系 　 北京 　 100084 ） 
 汤志忠 （ 清华大学 计算机科学 与 技术 系 　 北京 　 100084 ） 
 E - mail :   ronghb @ mail . cic . tsinghua . edu . cn 
 参考文献 
 1 ． Kai   Hwang .   Advanced   Computer   Architecture :   Parallelism ,   Scalability ,   Programmability .   New   York :   McGraw - Hill ,   Inc . ,   1993.457 ～ 496 
 2 ． Psarris   K ,   Kong   X ,   Klappholz   D .   Direction   vector   I   test .   IEEE   Transactions   on   Parallel   and   Distributed   Systems ,   1993 , 4 ( 11 ) : 1280 ～ 1290 
 3 ． Rau   B   R ,   Fisher   J   A .   Instruction - Level   parallel   processing :   history ,   over   view   and   perspective .   The   Journal   of   Supercomputing ,   1993 , 1 ( 9 ) : 9 ～ 50 
 4 ． Lam   M .   Software   pipelining :   an   efficient   scheduling   technique   for   VLIW   machines .   SIGPLAN   Notices ,   1988 , 23 ( 7 ) : 318 ～ 328 
 1998 - 12 - 01 收稿 
 1999 - 02 - 01 修稿 
