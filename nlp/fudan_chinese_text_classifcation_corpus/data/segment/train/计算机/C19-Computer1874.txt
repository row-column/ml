微型机 与 应用 
 MICROCOMPUTER   &   ITS   APPLICATIONS 
 2000   Vol.19   No.3   P.57 - 59 
 
 
 
 支持 DOS 和 UNIX 双重 操作系统 的 无盘 工作站 环境 的 实现 
 陈庆章 
 　 　 摘 　 要 ： 让 NOVELL 网络 同时 支持 DOS 和 UNIX 双重 操作系统 的 一种 方法 , 并 讨论 了 若干 系统管理 问题 。 
 　 　 关键词 ： 网络   双重 操作系统   无盘 工作站 
 1   计算机 实验 环境 的 新 课题 
 　 　 各类 学校 的 计算机 资源 使用 环境 , 正在 发生 重大 的 变化 。 一是 由于 Windows 的 流行 , 使得 DOS 应用 越来越 不 受 用户 欢迎 ; 二是 可以 支持 访问 因特网 的 校园 网络 的 建立 , 使 用户 越来越 对 网络应用 倾注 热情 。 而 我们 所 面临 的 情况 是 : 由于 各个 学校 普遍 资金紧张 , 设备 无法 跟上 计算机 的 发展 速度 , 一些 已经 处于 淘汰 的 计算机设备 仍 不得不 在 使用 中 , 如 各校 广泛 存在 的 无盘 工作站 网络 。 如何 给 这些 无盘 工作站 网络 灌注 新 的 活力 , 是 我们 应当 考虑 的 事情 。 
 　 　 因此 , 我们 就 想 将 原有 的 无盘 工作站 机房 , 改造 成 1 个 多重 操作系统 选择 的 环境 , 使 其 可以 同时 支持 DOS 和 UNIX 。 如此 不仅 可以 提供 1 个 PC / UNIX 的 教学 环境 , 培养 更 多 UNIX 系统管理 人才 , 也 可 更加 充分 地 利用 现有 无盘 工作站 硬件资源 。 
 　 　 本文 将 介绍 如何 将 PC / UNIX 系统 FreeBSD , 通过 其 本身 所 支持 的 无盘 工作站 开机 功能 , 再 结合 Novell   Netware 所 支持 的 远程 引导 开机 功能 , 把 无盘 工作站 机房 建设 成为 可 选择 DOS 或 UNIX 操作系统 的 工作 环境 的 方法 。 该 系统 的 基本 结构 如图 1 所示 。 
 
 图 1   无盘 工作站 机房 多重 操作系统 环境 示意图 
 2   支持 TCP / IP 应用 的 无盘 工作站 环境 的 建立 
 　 　 尽管 无盘 工作站 已经 不再 受到 青睐 , 但 对于 学校 教学 应用 而言 , 它 仍 有 一些 优点 , 如 简化 系统管理 、 文件 服务器 提供 文件 资源共享 , 还 可 节省 每部 PC 的 硬盘空间 , 提供 打印机 资源共享 , 无盘 工作站 可 避免 硬盘 感染 病毒 及 被 格式化 的 危险 等 。 
 　 　 要 使 无盘 工作站 支持 UNIX , 必须 首先 使 工作站 支持 TCP / IP 。 Novell   Netware 局部 网络 所 使用 的 以太 帧 格式 有 2 种 :   
 　 　 1 . IEEE   802.3   用于 以 PC / DOS 为 基础 的 文件 服务器 。 
 　 　 2 . Ethernet   II   （ type   8137 ）   用于 以 UNIX   WS 或 VAX / VMS 为 基础 的 文件 服务器 。 
 　 　 而 Novell 所 定义 的 IEEE   802.3 的 帧 格式 无法 识别 TCP / IP 的 帧 , 因此 如果 使用 早期 Novell 系统 所 提供 的 IPX . COM 来 驱动 网卡 , 就 无法 与 使用 TCP / IP 协议 的 主机 相连 。 为了 解决 Novell 网络 与 TCP / IP 网络 无法 共存 的 问题 , 可以 使用 packet   driver 使得 PC   TCP / IP （ NCSA ） 可 与 Novell 的 帧 共存 。 
 　 　 在 TCP / IP 的 协议 中 , 每 1 部 远程 终端机 均 需 设定 1 个 唯一 的 IP地址 , 才能 在 主机 与 远程 终端机 间 正确 无误 地 传送数据 。 在 校园 网络 上 存在 着 许多 PC , 如果 我们 要 给 每部 PC1 个 IP地址 , 实际上 无法 做到 。 一 是因为 不是 每 1 部在 网络 上 作业 的 PC , 都 需要 1 个 IP , 校园 网络 的 PC 仅 当 它 本身 安装 成 UNIX 操作系统 , 成为 一部 PC / UNIX 工作站 , 可 支持 他人 远程 载入 使用 时 , 才 需要 注册 申请 1 个 固定 的 IP地址 , 以 维持 正常 运作 。 而 一般 PC 只是 通过 远程 载入 去 获取 其它 工作站 或 主机 的 资源 , 因此 只有 在 使用 NCSA 等 远程 载入 程序 时 , 才 需要 给 它 一个 IP地址 ; 再则 , PC 众多 , 管理 IP 不易 , 若 排除 IP 不够 分配 的 问题 , 真 要 分配 每部 PC1 个 固定 IP , 对 管理者 而言 , 如何 正确 维持 每部 PC 的 以太 地址 与 IP地址 的 对照表 , 就是 一件 相当 麻烦 的 工作 。 
 　 　 出于 上述 的 考虑 , 我们 在 网上 找到 了 1 套 KA9Q 网络 公用 软件 , 它 可以 支持 以 动态 方式 来 供给 网络 上 IP地址 的 要求 。 KA9Q 是 1 套 public   domain 的 网络 公用 软件 , 它 也 可以 提供 bootp   server 的 功能 。 此 软件 的 硬件 只要 是 PC / 286 即可 。 它 的 建立 方式 主要 是 将 KA9Q 软件 安装 在 该 PC 的 硬盘 上 , 启动 其中 bootp   server 的 功能 , 再 设定 该 bootp   server 所能 给 的 IP   address 的 区间 ( 例  from   202.116 . 3.1   to   202.116 . 7.254 ) , 当然 作为 bootp   server 的 PC 也 必需 具备 上 网络 的 能力 , 当 它 上 网络 并 执行 了 bootp   server 的 程序 时 , 它 就 开始 在 整个 局部 网络 上 服务 所有 关于 IP   地址 的 请求 了 。 也就是说 当 网络 上 有人 使用 网络通信 程序 如 NCSA 的 telnet 或 ftp , 而且 在 NCSA 的 config . tel 文件 中 设定 了 myip = bootp 时 , 该部 PC 就 会 发出 1 个 请求 , 当 KA9Q   bootp   server 收到 该 信息 包时 , 就 会 送给 该 PC1 个 动态 产生 的 IP   address 。 
 　 　 KA9Q   bootp   server   动态分配 IP 的 特点 如下 : 
 　 　 （ 1 ） 服务器 不需 记录 任何 PC 的 ethernet   address   。 
 　 　 （ 2 ） 可 设定 动态分配 的 IP 区间 ( 例  from   202.116 . 3.1   to   202.116 . 7.254 ) 。 
 　 　 （ 3 ） 当 服务器 接收 到 网络 上 任何 1 部 机器 发出 的 bootp   request 时 , 就 会 在 它 可 动态分配 的 IP 表上 , 找出 1 个 目前 尚未 分配 出去 的 IP地址 给 发出 request 的 机器 , 并 在 其 IP 表上 标记 此 IP 已 分配 。 
 　 　 （ 4 ） 服务器 会 设定 1 个 IP 安全 存量 的 标准 , 当 IP 表中 尚未 分配 的 IP 达到 一定 的 低值 时 , 服务器 会 回收 一些 已经 分配 出去 的 IP地址 。 也就是说 服务器 会 不定期 地 对 已 分配 出去 的 IP 做 检查 , 确认 该 IP 是否 尚 被 使用 , 若该 IP 已 不 在 网络 上 , 则 服务器 就 会 在 其 IP 表中 重新 标记 该 IP 是 可供 分配 的 。 
 3   无盘 工作站 多重 操作系统 环境 建立 方式 
 　 　 从无盘 工作站 PC 的 硬件 特性 和 简化 系统管理 的 考虑 , 我们 采用 了 客户机 服务器 的 模式 来 处理 无盘 工作站 客户 远程 开机 的 功能 。 通过 无盘 工作站 用户端 远程 开机 的 功能 , 每个 无盘 工作站 客户 借着 网络 的 传送 , 就 能 从 服务器端 获得 它 的 操作系统 , 由此 使 每个 无盘 PC 客户 都 能 启动 成为 一个 UNIX 工作站 , 并且 可 从 服务器端 获取 所 需 的 应用程序 。 
 　 　 无盘 工作站 通过 网络 卡 的 boot   ROM , 从 网络 上 的 Novell 文件 服务器 的 login 目录 下 取得 引导 映象 文件 , 此时 被 包装 在 引导 映象 中 的 config . sys 与 autoexec . bat 就 会 被 执行 , 于是 无盘 工作站 被 启动 , 出现 操作 环境 选单 画面 , 此时 用户 即可 根据 自己 的 需求 来 选择 不同 的 选项 。 若 用户 选择 将 PC 设置 成 一个 FreeBSD 工作站 , 则 DOS   执行 FreeBSD 的 远程 引导 程序 ( netboot . com ) , 以使 它 启动 成为 一个 FreeBSD 工作站 。 这样一来 就 达到 同一 PC 硬件 设备 可任意 选择 不同 的 操作系统 的 目标 。 
 　 　 FreeBSD 无盘 工作站 的 远程 引导 运行 原理 如下 : 
 　 　 （ 1 ） 把 原来 PC / LAN 上 的 Novell   Netware 网络系统 的 远程 引导 功能 当作 1 个 系统 转换 的 桥 , 当无盘 工作站 已经 远程 引导 成为 DOS   状态 时 , 在 此 状态 下 执行 FreeBSD 所 提供 的 远程 开机 程序 ( netboot   . com ) 。 
 　 　 （ 2 ） netboot . com 程序 会 驱动 该无盘 工作站 上 的 网卡 , 使该 网卡 发出 1 个 bootp 的 请求 , 要求 网上 的 bootp 服务器 供给 该 PC 一些 开机 必要 的 相关 数据 , 包括 提供 开机 程序 的 服务器 的 IP地址 、 PC 开成 UNIX 工作站 所 需 的 IP地址 、 Gatway 的 IP地址 、 域名 以及 子 网屏 罩 等 数据 。 
 　 　 （ 3 ） 无盘 工作站 得到 上述 数据 后 , 再 送 出 要求 boot 程序 的 TFTP ( Trival   File   Transfer   Protocol ) 请求 , 请求 一 文件名 格式 为 cfg . IP - address 的 数据文件 , 例 : 假设 该无盘 工作站 的 IP地址 为 202.116 . 17.1 , 则 它 所 请求 的 文件名 即为 cfg.202 . 116.17 . 1 。 
 　 　 （ 4 ） 接下来 服务器 使用 tftpd   daemon 拷贝 boot 程序 至无盘 工作站 的 内存 , 无盘 工作站 就 可 执行 boot 程序 。 
 　 　 （ 5 ） 无盘 工作站 的 boot 程序 利用 NFS   mount 去 装载 无盘 工作站 的 root   file   system , 将 / kernel 载入 内存 中 , 将 控制权 转移 给   / kernel 。 至此 无盘 工作站 开机 成功 , 成为 FreeBSD 工作站 。 
 4   若干 系统管理 问题 
 　 　 1 . IP   address   的 设定 。 在 TCP / IP 网络 上 的 每个 UNIX 工作站 均 需 设定 唯一 的 IP地址 , 为 避免 多个 无盘 工作站 引起 混淆 , 必须 付予 每个 无盘 工作站 1 个 节点 名称 , 并 设定 它 的 IP   address , 在 域名 服务器 上 注册 , 以 确保 这些 机器 能够 正常 作业 。 
 　 　 2 . 文件系统 的 管理 。 因为 无盘 工作站 所 使用 的 系统 根目录 均 置于 服务器端 的 硬盘 , 为 避免 无盘 工作站 端的 不当 使用 , 造成 硬盘 损坏 牵连 服务器 本身 , 因此 在 安装 系统 时 , 可用 2 个 硬盘 分别 放置 服务器端 及无盘 工作站 端 所 需 使用 的 程序 。 
 　 　 3 . 帐号 管理 问题 。 由于 无盘 工作站 数量 较 多 , 若 每 一 工作站 都 拥有 各自 的 1 套 帐号 数据 , 则 系统 管理者 在 管理 上 势必 非常 麻烦 。 可能 的 解决 方法 如下 : 
 　 　 （ 1 ） 将 帐号 数据文件 放置 在 服务器端 的 文件 共用 区中 , 通过 NFS   mount 让 多个 无盘 工作站 共用 同 1 份 帐号 数据 。 
 　 　 （ 2 ） 建立 通用 帐号 系统 （ 如 麻省理工学院 所 开发 的 Athena 系统 ） 。 
 　 　 （ 3 ） 先 提供 1 个 公用 帐号 , 让 用户 进入 系统 , 再 提供 1 个 让 用户 自行 注册 建立 帐号 的 程序 。 用户 自行 输入 建 帐号 的 基本 数据 , 这些 数据 必须 包含 1 个   Trusted   Node   Account , 操作系统 定期 在 每 一天 定时 对 这些 申请 帐号 的 注册 数据 进行 批处理 , 根据 用户 所 提供 的   Trusted   Node   Account , 由 操作系统 发出 E - mail , 要求 用户 响应 ( reply ) , 借以 确认 用户 所 提供 的   Trusted   Node   Account   是 确实 无误 的 。 经过 这样 的 确认 程序 后 , 才 真正 依据 用户注册 数据 在 系统 中 建立 1 个 新 帐号 。 
 　 　 4 . 软件 的 暂存 空间 设定 。 某些 软件 在 执行 时 （ 尤其 是   for   Windows   的 软件 ） , 软件 本身 必会 产生 一些 暂存 文件 , 若 安装 时 将 这些 暂存 文件目录 设定 在 文件 服务器 的 目录 上 , 会 造成 作业 运行 时 服务器端 及 PC 端 相当 频繁 的 网络 传输 , 并且 会 造成 服务器 的 磁盘   I / O   十分 繁忙 , 如此 不仅 增加 网络 的 负担 , 并且 使 软件 的 执行 速度 变慢 。 可以 考虑 通过 扩充 无盘 工作站   PC   端的 内存 , 建立 虚拟 磁盘 的 设置 , 设定 环境变量 set   temp = c ： （ 此时 c 为 虚拟 磁盘 ） , 如此 即可 提高 作业 速度 。 
 陈庆章 （ 杭州 浙江工业大学 计算机 与 网络 中心  310023 ） 
 收稿 日期 ： 1999 - 10 - 31 
