计算机 工程 
 Computer   Engineering 
 1999 年 　 第 25 卷 　 第 9 期 　 Vol.25   No.9     1999 
 
 
 
 并行 光线 跟踪 中 的 数据 划分 策略 
 刘 　 敏 　 董 玉宇 　 张延国 　 胡正国 
 　 　 摘 　 要 ： 提出 了 一种 新 的 场景 数据 分割 方法 ， 以待 计算 的 象素 点来 决定 场景 数据 的 有效 分割 ， 克服 了 以往 盲目 分割 数据 所 带来 的 光线 在 处理机 间 的 频繁 交换 ， 从而 减小 了 通信 开销 ． 
 　 　 关键词 ： 并行 光线 跟踪 ； 并行 效率 ； 数据 分割 
 Data   Partition   Strategy   for   Parallel   Ray   Tracing 
 Liu   Min   Dong   Yuyu   Zhang   Yanyuan   Hu   Zhengguo 
 ( Software   Engineering   Center ,   Northwestern   Polytechnical   University ,   Xi ＇ an   710072 ) 
 　 　 Abstract 　 For   the   purpose   of   improving   the   efficiency   of   parallel   ray   tracing ,   the   authors   proposed   a   new   strategy   for   scene   data   distribution   according   to   the   traced   pixel .   This   method   lowered   the   frequency   of   data   exchanges   between   processors ,   and   then   reducced   communication   overhead . 
 　 　 Key   words 　 Parallel   ray   tracing ;   Parallel   efficiency ;   Data   partition 
 　 　 光线 跟踪 作为 一种 真实感图形 的 绘制 技术 ， 能够 生成 传统 图形学 算法 难以 模拟 的 整体 光 照明 效果 ， 而且 算法 简单 ， 易于 实现 。 然而 ， 传统 的 算法 需 面临 几百万 次 的 光线 与 景物 的 求交 运算 ， 而且 随着 绘制 质量 的 提高 ， 这种 庞大 的 计算 耗费 也 随之 增大 。 80 年代 中期 ， 随着 并行处理技术 的 飞速发展 ， 无论 从 软件 还是 从 硬件 上 都 为 图形 生成 的 并行处理技术 提供 了 强有力 的 支持 。 光线 跟踪 算法 的 并行 化 就是 并行处理 与 真实感图形 生成 这两项 技术相结合 的 产物 。 
 　 　 由于 对 视点 到 象素 点 的 各条 光线 的 跟踪 都 相对 独立 ， 光线 跟踪 的 并行 化 处理 是 很 显然 的 。 因此 其 研究 重点 在于 如何 优化 象素 点 、 场景 数据 在 并行机 各 节点 上 的 分配 策略 ， 以 大幅度提高 并行 效率 。 纵观 近 10 年来 ， 国际 上 较 成熟 的 光线 跟踪 并行算法 , 主要 归结为 两类 ： 一是 面向 数据 的 并行 化 ， 其 特点 是 光线 流在 处理机 节点 之间 流动 ， 而 每个 处理机 分配 的 象素 点 （ 数据量 ） 是 一定 的 ； 二是 面向 控制 的 并行 化 ， 它 是 在 处理机 间 动态 地 分配 象素 点数 ， 处理机 间 流动 的 不仅 有 象素 点 ， 而且 还有 部分 场景 数据 。 
 　 　 Didier 与 Kadi 等 人于 1994 年 提出 的 面向 控制 的 并行 光线 跟踪 算法 中 ， 描述 场景 空间 的 数据 仅 被 均衡 地 分配 给 所有 的 处理机 ， 而 无 其它 特殊 约束条件 。 这样 ， 当某 处理机 所 要 访问 的 数据 不 在 本机 的 局存 上 时 ， 就 必须 远程 访问 存于 其它 处理机 上 的 数据 。 Didier 虽然 引入 了 Cache 机制 以 减少 远程 访问 的 代价 ， 但 还是 存在 着 一个 明显 的 缺陷 ， 即 数据 分割 的 盲目性 。 如果 分割 得 不好 ， 在 极端 条件 下 ， 可能 会 造成 严重 的 抖动 现象 ： 处理机 之间 频繁 地 交换 数据 ， 长时间 得不到 稳定 。 这 就 增大 了 系统 的 通信 开销 。 
 　 　 本文 通过 研究 待 计算 的 象素 点 与 所 需 场景 数据 之间 的 内在 关系 ， 采用 一种 新 的 数据 划分 策略 ， 它 确保 一 处理机 处理 的 光线 要么 一定 落 在 本 处理机 局存 中 的 场景 数据 所 覆盖 的 子 空间 中 ， 要么 射 出 场景 空间 。 
 1 　 新 的 数据 划分 策略 
 　 　 图 1 展示 了 待 计算 的 象素 点 与 场景 数据 之间 的 空间 关系 。 
 
 图 1 　 待 计算 象素 点 与 场景 数据 的 空间 关系 
 
 图 2 　 场景 空间 的 层状 分割 
 　 　 显而易见 ， 由 视点 发出 的 第一级 光线 经过 屏幕 阴影 区中 任意 一 象素 点 投射 入 世界 坐标系 空间 中 ， 只有 两种 可能 ， 要么 落 在 场景 空间 中 的 阴影 带上 ， 要么 射 出 场景 空间 。 这里 可以 有 两个 结论 ： 
 　 　 ( 1 ) 是 光线 连续 的 特性 ： 从 视点 射出 的 两根 光线 ， 当 穿过 屏幕 上 两个 相邻 的 象素 点时 ， 将 很 可能 与 场景 中 同一 物体 相交 。 
 　 　 ( 2 ) 如某 处理机 具有 屏幕 中 阴影 带 象素 点 的 计算 量 ， 在 其局 存中 ， 就 必须 拥有 场景 空间 中 阴影 带 所属 的 那层 场景 数据 空间 来 支持 象素 点 的 光线 跟踪 计算 。 
 由此 ， 可 得到 这一 数据 划分 策略 ： 将 屏幕 象素 点 与 场景 空间 依 第二个 结论 所述 的 对应 关系 进行 层状 分割 ， 然后 把 各个 层 顺序 分配 给 各 处理机 。 
 　 　 在 实际 应用 中 ， 视点 、 屏幕 及 场景 空间 三者 的 相对 位置 关系 并 不象 图 1 所示 的 那样 有 规律 。 视点 可以 位于 世界 坐标系 中 的 任意 一点 ， 屏幕 位置 和 方位 也 是 任意 的 。 一般 为了 具有 实际 价值 ， 屏幕 位于 视点 的 正前方 。 因此 ， 同一 场景 仅 因 视点 位置 的 不同 而 在 屏幕 上 呈现 不同 的 画面 。 按 传统 方法 求得 的 场景 包围 壳 是 图 2 中 虚线 所示 的 长方体 。 本文 为了 便于 场景 空间 的 层状 分割 ， 场景 空间 的 外壳 方位 将 随 视点 位置 的 不同 而 不同 。 如图 2 所示 ， 当 视点 位置 由 用户 确定 好 以后 ， 场景 空间 的 外壳 是 实线 所示 的 正方体 （ 它 与 长方体 的 几何 关系 是体 对角线 相等 ， 拥有 同一个 外壳 球 ， 故可 由 长方体 经 简单 几何变换 求得 ） ， 且 屏幕 面 与 正方体 的 一个 平面 （ 称 α 平面 ） 平行 。 这时 ， 视点 、 屏幕 及 场景 空间 2 的 相对 位置 关系 就 与 图 1 相同 ， 可以 方便 地 对 场景 空间 进行 层状 分割 。 
 　 　 这时 ， 可 具体 地 实现 前述 的 数据 划分 策略 ∶ 先对 屏幕 象素 点以 行为 单位 进行 条形 划分 ， 视 参与 并行处理 的 处理机 数 n 把 屏幕 划分 成 n 份 ， 自上而下 依次 把 象素 点集 分配 给 顺序 编号 的 处理机 。 视点 与 屏幕 上 各条 划分 边界线 构成 的 平面 与 α 面 交出 了 一系列 交线 ， 沿 这些 交线 ， 以 垂直于 α 面 的 方向 可以 将 场景 空间 2 分割 成 若干层 ， 每 一层 都 有 相应 的 屏幕 象素 条 与 之 对应 。 同样 把 前 n 层 场景 空间数据 顺序 分配 给 n 个 处理机 。 这样 处理 场景 数据 分割 与 分配 ， 使得 本 机上 分配 的 象素 点射 出 的 一级 光线 在 进行 计算 时 所 需 访问 的 数据 一定 存于 本机 的 局存 中 ， 可以 进行 局部 访问 ， 而 非 远程 访问 。 
 　 　 但 场景 数据 空间 被 分割 成 若干块 ， 每个 处理机 只 拥有 了 整个 场景 空间 的 一部分 ， 一级 光线 虽然 可以 确保 射入 本机 的 场景 子 空间 ， 而 它 与 物体 相交 、 求 出 交点 后 ， 将 派生 出新 一级 光线 ： 沿 透射 方向 的 光线 和 沿 反射 方向 的 光线 ， 要 对 它们 分别 进行 光线 跟踪 ， 这些 派生 出来 的 二 、 三级 或 后代 光线 就 有 可能 射出 本机 的 场景 子 空间 ， 而 需 进入 存储 在 别的 处理机 上 的 另 一 场景 子 空间 。 这 就 需要 决定 将 这 一 被 跟踪 的 光线 传递 给 哪 一 处理机 ， 以便 继续 跟踪 。 
 　 　 由于 顺序 分配 的 场景 子 空间 与 各 处理机 之间 存在 着 对应 关系 ， 可以 简单 地 描述 为 ： 第 i 号 处理机 上 存储 了 第 i 层 场景 子 空间 。 如果 抛开 处理机 的 其他 硬 、 软件 ， 只 考虑 其上 存储 的 场景 子 空间 的话 ， 将 这些 处理机 按 其 编号 顺序 层叠 起来 ， 就 构成 了 整个 场景 空间 。 因此 ： 
 　 　 ( 1 ) 当 光线 射出 第 i 号 处理机 数据 空间 的 上 表面 时 ， 该 光线 要么 射 出 整个 场景 空间 （ 对于 第 1 号 处理机 而言 ） ， 要么 进入 第 i - 1 号 处理机 中 所 存储 的 那 部分 场景 数据 空间 ； 
 　 　 ( 2 ) 当 光线 射出 第 i 号 处理机 数据 空间 的 下 表面 时 ， 则 要么 射 出 整个 场景 空间 （ 对于 第 n 号 处理机 而言 ） ， 要么 进入 第 i + 1 号 处理机 中 所 存储 的 那 部分 场景 数据 空间 ； 
 　 　 ( 3 ) 当 光线 射出 本 处理机 上 场景 数据 空间 的 其他 表面 时 （ 如 前 、 后 、 左 、 右 表面 ） ， 则 一定 是 射出 场景 空间 了 。 
 根据 以上 3 点 ， 当 派生 光线 射 出 场景 数据 空间 时 ， 将 此 光线 传递 给 哪个 处理机 继续 跟踪 这一 问题 便 迎刃而解 了 。 
 2 　 结束语 
 　 　 本文 提出 的 场景 数据 划分 策略 是 在 研究 了 待 计算 的 象素 点 与 所 需 场景 数据 之间 的 内在 关系 的 基础 上 提出 来 的 ， 它 克服 了 以往 盲目 分割 场景 数据 所 带来 的 光线 在 处理机 之间 的 频繁 交换 ， 减小 了 并行 光线 跟踪 算法 中 的 通信 开销 。 这一 策略 应用 在 一些 简单 的 并行 图形处理 系统 中 ， 效果 很 好 。 但 由于 系统 还 不 成熟 ， 还 可以 进一步 改进 它 对 不同 拓扑 结构 的 并行 计算机 的 适应能力 ， 这样 ， 它 的 通用性 将会 得到 提高 。 
 作者简介 ： 刘 　 敏 ( 1970 ～ ) ， 女 ， 讲师 ， 主要 研究 方向 ： 并行处理 、 软件工程 
 作者 单位 ： 西北工业大学 软件工程 中心 ， 西安 　 710072 
 参考文献 
 1   Didier   B .   Distributing   Data   and   Control   for   Ray   Racing   in   Parallel .   IEEE   CG & A ,   1994 ,   ( 7 ) : 69 - 77 
 2   Chuang   Junghong .   A   New   Space   Subdivision   for   Ray   Tracing   CSG   Solids .   IEEE   CG & A   ,   1995 ,   ( 11 ) : 56 - 62 
 3   Scott   W .   Recent   Developments   in   Parallel   Rendering .   IEEE   CG &   A ,   1994 , ( 7 ) : 21 - 22 
 收稿 日期 ： 1998 - 12 - 15 
