微型 电脑 应用 
 MICROCOMPUTER   APPLICATIONS 
 2000 　 Vol.16 　 No.1 　 P.31 - 33 
 
 
 
 Windows 环境 下 生物 信号处理 系统 的 软件设计 
 李晓春 　 李 旭光 　 谢定 　 元秀华 　 吴 承德 
 摘 　 要 ： 介绍 Windows 环境 下 生物 信号 数据 采集 与 分析 系统 的 软件设计 方法 。 
 关键词 ： Windows 　 生物 信号处理 　 编程 
 Abstract ： This   paper   introduces   the   software   design   method   ology   of   data   acquisition   and   analysis   systems   of   biological   signals   in   the   Wind   ows   environment . 
 Keywords ： Windows 　 biologic   signal   processing 　 programming ▲ 
 　 　 生命 系统 是 一个 受多 因数 调节 的 开放系统 ， 对于 生命 活动 的 研究 也 是 多方面 的 、 综合 的 。 计算机技术 的 飞速发展 ， 使得 各种 数字 信号处理 技术 能够 方便 地 应用 于 生命科学 研究 的 各个领域 。 但是 ， 以前 的 生物 信号 分析 系统 的 软件设计 大都 建立 在 DOS 环境 上 。 DOS 的 界面 特性 差 ， 单任务 的 方式 也 不 太 适合 于 生物体 多 信号 、 多角度 的 、 集成化 的 综合 分析 。 Windows 具有 多任务 的 图形用户界面 、 交互 的 工作 方式 、 图形 设备 接口 ( GDI ) 、 数据 动态 交换 功能 ) DDE ) 及 动态链接库 ( DLL ) 的 支持 等 优点 ， 这些 优点 使得 人们 逐渐 地 舍弃 DOS ， 进入 Windows 界面 。 Windows 多任务处理 方式 适合 于 医学 信号 的 多通道 采集 多角度 综合 分析 。 目前 一些 先进 的 医疗 仪器设备 也 纷纷 从 DOS 环境 向 Windows 环境 转换 。 因此 基于 Windows 环境 下 的 信号 采样 与 分析 是 医学 研究 和 医疗 仪器 研制 的 大 趋势 。 作者 成功 开发 了 基于 Windows 平台 的 生物 信号 数字 处理 系统 ， 本文 将 介绍 该 系统 的 组成 及其 较件 设计 方法 。 
 一 、 硬件 的 组成 
 　 　 硬件 的 组成 如图 1 所示 ： 
 
 图 1   硬件 系统 框图 
 　 　 人体生理 信息 从 物理学 的 角度看 主要 包括 生物电 信息 、 磁 信息 、 压力 、 振动 、 速度 、 流量 、 温度 等 。 根据 检测 信息 的 不同 ， 选用 不同 的 传感器 将 生物 信号 转化 为 电信号 。 不同 传感器 的 信号 通过 不同 的 通道 进行 采集 。 在 Windows 的 多任务 管理 方式 下 ， 这种 硬件 系统 的 设置 能够 方便 地 实现 对于 生物 对象 多 部位 、 多 信号 的 同时 采集 ， 这 对于 生命 运动 的 综合 研究 具有 重要 意义 。 
 　 　 系统 的 主机 为 586 兼容机 ， Windows98 操作系统 ， 32M 内存 ， 3.2 G 的 硬盘 ， 此外 还 插入 了 一个 ISA 总线 的 16 路 12 位 A / D 高速 转换 板 ， 输入 电压 范围 ： 0 ～ ± 5V ， I / O 地址 可 设定 。 使用 时 由 软件 完成 对 多路 信号 的 分时 采集 。 采集 的 数据 可 显示 为 图形 并存 于 硬盘 ， 供 Windows 下 的 集成 分析 系统 进行 分析 处理 。 
 二 、 软件设计 
 　 　 软件系统 以 C + Builder3 作为 开发工具 进行 编程 。 C++   Builder3 是 1998 年 Borland 公司 推出 的 全新 的 、 可视 的 、 面向对象 的 C++ 集成 开发 系统 ［ 1 ］ 。 它 使用 了 完整 的 面向对象 的 编程 方式 ， 把 Windows 编程 的 回调 、 句柄 处理 等 复杂 过程 放在 一个 不 可见 的 覆盖物 下 ， 而 对象 的 认定 、 类 的 设计 和 类 的 封装 都 由 系统 自身 完成 。 它 支持 C 、 Pascal 、 Borland   C++ 、 Visual   C++ 和 汇编 等 多种语言 ， 支持 Microsoft 的 OLE 技术 、 COM 、 DCOM 标准 。 它 的 集成 开发 环境 提供 了 可视 的 设计 环境 ， 这 大大 方便 了 程序编制 。 
 　 　 由于 Windows 本身 不 提供 对 I / O 端口 的 控制 函数 ， 各 语言 关于 硬件 端口 的 控制 函数 如 VC 的 inp ( ) 、 outp ( ) 函数 ， Turbo   C 的 inportb ( ) 、 outportb ( ) 函数 等 ， 它们 仅 支持 DOS 调用 ， 不 支持 Windows 。 Windows 环境 下 数据 的 采集 只能 通过 Windows 间接 地 调用 其他 支持 I / O 接口 的 语言 函数 来 实现 。 因此 Windows 环境 下 的 数据 采集 只能 采用 混合 编程 的 方法 ［ 2 ］ 、 ［ 3 ］ 。 值得 庆幸 的 是 C++   Builder 支持 多种语言 和 OLE 技术 ， 内含 dcc32 . exe 和 tasm . exc 编译器 ［ 4 ］ ， 可 编译 C 、 Pascal 、 汇编 等 语言 。 
 　 　 信号处理 系统 的 主要 工作 内容 包括 三 大部分 ： 数据 采集 、 数据 预处理 、 数据分析 及 文件 管理 ， 它们 统一 在 Windows 平台 的 主 界面 下 。 
 　 　 1 . 数据 采集 
 　 　 Windows 下 的 数据 采集 大致 可 通过 动态链接库 、 汇编语言 嵌套 、 OLE 技术 等 几种 办法 来 实现 。 考虑 到 对 数据 采集 的 高速 、 高效 要求 ， 以及 Windows 发送 采集 命令 后 、 消息 列队 等待 处理 造成 不 精确 定时 等 因数 ， 我们 采用 了 OLE 技术 ［ 5 ］ 。 Windows 发出 采集 命令 后 ， 直接 调用 DOS 环境 下 的 采集 程序 ， 连续 地 采集 一段时间 ， 将 采集 的 数据 及时 绘图 显示 并 保存 。 为此 ， 在 DOS 环境 下用 Turbe   C 编制 了 数据 采集 程序 。 设 转换 卡基 地址 为 300H ； 启动 A / D 转换 的 口 地址 为 301H ， 低电平 信号 表示 启动 转换 ； 转换 是否 完成 的 查询 口 地址 为 302H ， 数据 为 1 表示 转换 完成 ， 否则 继续 查询 ； 转换 完成 后 ， 用口 地址 303H 读取 12 位 数据 中 的 高 8 位 ， 口 地址 304H 读取 低 4 位 。 首先 在 DOS 环境 下 ， 利用 Turbo   C 编制 数据 采集 程序 。 
 　 　 参考 程序 如下 ［ 6 ］ 
 int   adin ( int   channel ) 
 　 　 ｛ 
 　 　 int   a , b , data ; 
 　 　 outportb ( 0x300 , channel ) ; / / 打开 通道 
 　 　 outportb ( 0x301 , 0 ) ; / / 启动 转换 卡 
 　 　 begin : 
 　 　 　 a = inportb ( 0x302 ) ; / / 读 转换 状态 
 　 　 　 a = a & 0x01 ； 
 　 　 　 if ( a ! = 0 ) goto   begin ; 
 　 　 　 else 
 　 　 　 　 ｛ a = inportb ( 0x303 ) ; / / 读数据 高 8 位 
 　 　 　 　 b = inportb ( 0x304 ) ; / / 读数据 低 4 位 
 　 　 　 　 data = a * 16 + ( b & 0xf0 ) / 16 
 　 　 　 　 return ( data ) ; 
 　 　 　 ｝ 
 　 　 ｝ 
 # include   " graphics . h " 
 # include < process . h > 
 # include < stdlib . h > 
 main ( ) 
 　 　 ｛ 
 　 　 int   m , n , y , i , channel ; 
 　 　 float   da ; 
 　 　 static   int   ad ［ 640 ］ ; 
 　 　 int   graphdriver = DETECT , graphmode ; 
 　 　 initgraph ( & graphdriver , & graphmode , " " ) ; 
 　 　 if ( graphdriver = = VGA ) n = 480 , m = 2 ; 
 　 　 else   n = 199 , m = 1 ; 
 printf ( " % s " , " 请 输入 A / D 转换 通道 ( 0 - 15 ) ； " ) ； 
 scanf ( " % d , & channel ) ; 
 do 
 　 　 ｛ for ( i = 1 < 640 ; i ++ ) 
 　 　 ｛ da = adin ( channel ) ; 
 　 　 y = n - ( int ) ( da * n / 4095 ) ; 
 　 　 putpixel ( i , ad ［ i ］ , 0 ) ; 
 　 　 ad ［ i ］ = y ; 
 　 　 putpixel ( i , y , m ) ; 
 　 　 ｝ ; 
 　 ｝ while ( ! kbhit ( ) ) ; 
 closegraph ( ) ; 
 ｝ 
 　 　 以上 程序 在 Turbe   C 中 编译 、 连接 生成 应用 文件 。 在 C++ Builder 的 主 界面 窗口 TForm1 上 布置 容器 服务器 控件 TOleContainer1 , 双击 控件 ， 出现 “ 插入 对象 ” 对话框 ， 单选 “ 从 文件创建 ” ， 在 出现 的 文件 编辑框 中 输入 DOS 环境 下 的 采集 数据 程序 文件名 ， 即 建立 了 OLE 对象 的 链接 。 然后 建立 数据 采集 按件 并 编写 调用 OLE 对象 的 代码 ： 
 void - fastcall   TForml : : N3Click ( TObject * Sender ) 
 ｛ 
 / / ： N3 是 与 “ 采集 开始 ” 对应 的 菜单 条 
 OleContainer1 - > DoVerb ( 0 ) ; 
 ｝ 
 　 　 这时 在 Windows 界面 下 单击 “ 采集 开始 ” 菜单 条 ， 系统 就 会 调用 采集 程序 进行 数据 采集 ， 并 绘制 图形 。 由于 OLE 技术 的 特点 ， OLE 对象 一旦 调用 ， 系统 即 进入 DOS 环境 ， 并 停止 响应 其他 Windows 消息 ， 直到 调用 结束 返回 主 界面 。 因此 ， OLE 技术 下 数据 的 采集 是 高速 、 高效 的 ， 不 存在 Windows 环境 下 多个 消息 列队 影响 数据 采集 的 问题 。 
 　 　 2 . 数据分析 
 　 　 数据分析 前 需要 对 数据 进行 预处理 ， 如 根据 信号 的 特点 选择 合适 的 数字滤波 方法 进行 滤波 处理 。 处理 后 的 数据 可以 进行 各种 常规 分析 ， 如 时域 分析 、 各种 谱分析 及泛 图 分析 、 分维 分析 、 混沌 分析 等等 ( 限于 篇幅 ， 具体 的 分析方法 从略 ) 。 
 　 　 整个 处理 系统 设计 为 多 文档 窗口 模式 ( MDI ) ， 主 菜单 置于 父 窗口 下 ， 每 一种 分析方法 自成一体 ， 设立 子 窗口 。 为 减少 内存 的 占用 ， 子 窗口 只 在 调用 时才 动态 地 生成 ， 分析 过程 在子 窗口 内 完成 ， 处理 完后 关闭 子 窗口 并 立即 释放 内存 。 对于 分析 子 窗口 ， 根据 分析方法 的 需要 设立 子 菜单 ， 系统 运行 时 动态 地 实现 菜单 融合 ， 即 在 任何 子 窗口 下 都 可以 实现 主 菜单 的 所有 功能 。 这样 使用者 就 能 交互 地 利用 多种 方法 进行 综合 分析 。 内存 允许 的 化 ， 也 可以 同时 进行 多种 分析 。 分析 所 需 的 数据 通过 文件 和 数组 在 不同 模块 间 实现 传递 。 分析 的 结果显示 在 文本框 或 绘图板 上 ， 可 保存 ， 可 打印输出 。 由于 C++ Builder 支持 多种语言 ， 以前 用 C 、 Pascal 、 汇编语言 编写 的 分析程序 ， 只要 将 变量 和 函数 改变 得 符合 C++ Builder 的 方式 ， 就 可以 方便 地 移植 过来 ， 大大减少 编程 时间 。 Windows 面向对象 的 编程 方式 ， 使得 各 分析方法 既 独立 又 浑然一体 ， 新 的 分析方法 也 可 方便 地 纳入 系统 。 
 　 　 在 C++ builder 中 某 分析方法 的 具体 调用 过程 如下 ： 
 / / 先 创建 分析 1 子 窗口 
 void - fastcall   TForml : : N8Click ( TObject * Sender ) 
 ｛ 
 Analysis1Form = new   TAnalysis1Form ( this ) ; / / TAnalysis1Form 是 窗口 类 
 ｝ 
 / / 以下 建立 分析 过程 … … … … … … … … … … … 
 void - fastcall   TAnalysis1Form : : N12Click ( TObject * Sender ) 
 ｛ 
 此处 插入 分析 过程 代码 ； / / 分析 过程 中 用到 的 函数 应有 相应 的 库 支持 或 在 头 函数 中 声明 
 ｝ 
 / / 分析 完后 ， 并 闭子 窗口 ， 并闭 窗口 时 触发 FormClose 事件 ， 释放 内存 ， 返回 主 界面 
 void - fastcall   TAnalysis1Form1 : : FormClose ( TObject * Sender , TCloseAction & Action ) = ｛ 
 Action = caFree ； 
 ｝ 
 三 、 系统 界面 与 应用 
 　 　 本 处理 系统 是 在 Windows98 操作系统 上 ， 利用 C++ Builder3 集成 工具 开发 ， 最后 生成 独立 的 应用 系统 。 C++ Builder3 面向对象 的 可视化 编程 降低 了 系统 的 开发 难度 。 大量 的 代码 重用 提高 了 开发 效率 。 处理 系统 界面 友好 、 操作 直观 方便 、 交互式 工作 方式 。 图 2 是 系统 的 主 界面 。 
 
 图 2 　 系统 主 界面 
 　 　 “ 文件 ” 菜单 下设 打开 … 、 关闭 、 保存 、 打印机 设置 … 、 打印 等 功能 ， 主要 完成 文件 的 管理 和 打印 工作 。 
 　 　 “ 数据 采集 ” 项 下设 通道 选择 … 、 采样 频率 和 时间 … 、 采集 开始 、 采集 结束 等 功能 ， 各 菜单项 的 功能 是 自 解释 的 。 按下 “ 采集 开始 ” 后 ， Windows 立即 调用 数据 采集 程序 。 
 　 　 “ 预处理 ” 项 下设 滤波 方法 、 加窗 等 功能 。 
 　 　 “ 数据分析 ” 项 下 设立 各种 分析方法 的 菜单 控制 条 ， 由 菜单 条 控制 进入 各种 分析 窗口 。 
 　 　 作者 用该 系统对 人体 指端 脉搏 波 和 呼吸 波 进行 了 检测 与 分析 ， 在 保证 硬件 配置 的 情况 下 ， 进行 适时 采集 、 数据处理 和 曲线 绘制 ， 结果 令人满意 。 为了 全面 地 了解 生物 对象 ， 目前 提出 了 多 传感器 融合 技术 ［ 7 ］ ， 生物 信号 的 分析 越来越 走向 综合 ， Windows 正是 适合 于 综合 分析 的 平台 ， 开发 Windows 环境 下 的 数据处理系统 势在必行 。 ■ 
 作者 单位 ： 李晓春   ( 湖南医科大学 物理 教研室   长沙   410078 ) 
 参考文献 ： 
 ［ 1 ］ 徐 新华 编著 　 C++ Builder3 编程 指南 　 北京 　 人民邮电出版社 　 1998 年 
 ［ 2 ］ 黄 华江 等 　 基于 Windows 平台 的 测控 软件设计 　 微型机 与 应用 　 1999 年 　 第 6 期 P45 - 48 
 ［ 3 ］ 熊友辉 等 　 用 VB 开发热 分析仪 采集 控制 和 分析 处理 系统软件 　 微型 电脑 应用 　 1998 年 　 第 1 期 P36 - 38 
 ［ 4 ］ 吴继生 　 C++ Builder 与 汇编语言 混合 编程 及 端口 操作 函数 扩展 方法 　 电脑 编程 技巧 与 维护 　 1998 年 第 11 期 P9 
 ［ 5 ］ Kate   Gregory 著 ， 康博 创作室 译 　 Visual   C++ 5 开发 使用手册 　 北京 　 机械 工业 出版社 　 1998 年 
 收稿 日期 ： 1999 - 08 - 02 
