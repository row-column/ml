计算机 应用 研究 
 APPLICATION   RESERCH   OF   COMPUTERS 
 2000     Vol.17 　 No.1 　 P.61 - 62 
 
 
 
 
 下一代 HTTP 协议 
 黄宏涛 　 王慧 
 摘   要   为了 克服 当前 HTTP 协议 的 缺点 ， W3C ( World   Wide   Web   consortium ) 开始 研究 制定 下一代 HTTP 协议 桯 TTP - NG 。 它分 三个 层次 ： 应用层 、 消息 层 、 传输层 。 现有 WEB 上 应用 将 转换 到 HTTP - NG 平台 上 ， 最后 整个 平台 都 会 更新 为 HTTP - NG 。 
 关键词   WWW   HTTP   HTTP - NG 
 1 　 引言 
 　 　 WWW 取得 了 巨大成功 ， HTTP 是 取得成功 的 核心 ， 它 用于 在 Web 上 交换 信息 。 当前 Web 遵循 的 HTTP / 1 . X ， 但 它 缺乏 模块化 的 特点 ， 性能 也 因而 较差 。 
 　 　 HTTP / 1 . X 包括 三层 ， 但 它 并 没有 清楚 地区 分开 来 ： 消息 传输 、 通用 远程 方法 调用 和 一系列 用于 文档 处理 的 方法 。 缺乏 模块化 使得 HTTP 的 发展 非常 困难 ， 并且 为 其它 应用 带来 问题 ， 应用 位于 HTTP 之上 ， 因而 不管 技术 是否 合适 都 必须 包括 许多 HTTP 的 设计 。 其它 一些 通用 调用 系统 ( 如 CORBA 、 DCOM 、 JAVA   RMI ) 也 位于 HTTP 之上 。 HTTP / 1 . X 缺乏 模块化 引起 的 问题 包括 ： 
 　 　 。 HTTP / 1.1 中 ， 消息 界限 的 划分 不是 在 一个 单独 的 层 中 进行 ， 而是 与 其它 功能 混在 一起 ， 导致 有 五种 不同 方法 划分 消息 的 界限 ， 非常复杂 。 
 　 　 。 一般 的 应用 利用 隧道 ( Tunneling ) 技术 通过 HTTP 文档 获取 和 表格 处理 方法 ( GET 和 POST ) 完成 ， 这 对于 防火墙 来说 很难 发现 给定 通信 的 语义 内容 ， 因而 很难 实施 安全 政策 。 
 　 　 。 HTTP 的 调用 层 与 文档 处理 应用 很难 区分 开来 ， 其它 应用 的 设计者 在 理解 如何 为 自己 的 应用 使用 调用 层 功能 方面 要 做 很多 工作 。 
 　 　 另一方面 HTTP 协议 在 每次 HTTP 会话 ( 一个 请求 和 回应 的 过程 ) 都 打开 一个 新 的 TCP 连接 ， 这是 对系统 和 网络资源 的 浪费 。 
 　 　 为了 克服 这些 问题 ， W3C ( World   Wide   Web   consortium ) 从 1997 年 开始 研究 制定 下一代 HTTP 协议 桯 TTP - NG 。 
 2 　 HTTP - NG 的 结构 
 　 　 HTTP - NG 的 结构 是 一个三层 系统 如图 1 所示 ， 最上层 是 应用层 ， 中间 是 消息 层 ， 最 下面 是 传输层 。 应用层 和 消息 层 的 接口 被 称为 撓  ⒔ 涌 跀 ， 消息 层 与 传输层 的 接口 被 称为 “ 传输 接口 ” 
 2.1   应用层 
 　 　 HTTP   1.1 中 定义 的 应用 包括 获取 WEB 页面 ， 处理 代理 和 缓存 ， 使用 CGI 描述 提交 表格 。 它 使用 GET 、 HEAD 、 POST 和 PUT 等 方法 。 在 HTTP - NG 中 ， 这些 应用 被 抽象 为 传统 WEB 应用 揟 he   Classic   Web   Application ? TCWA ) 。 系统 使用 一种 机制 决定 哪 种 方法 适用 于 哪种 资源 。 一种 支持 TCWA 的 WEB 资源 支持 TCWA 对象 ， 只 接受 由 TCWA   API 指定 的 方法 。 
 　 　 定义新 方法 的 机制 既 支持 静态 类型 又 支持 动态 类型 ， 动态 类型 支持 当 参数 类型 在 将来 需要 扩展 或者 参数 具有 多个 类型 时 非常 有用 。 一个 动态 类型 参数 的 实际 类型 ， 可以 在 运行 时才 确定 。 HTTP - NG 的 类型 系统 与 Java   RMI ， CORBA 和 DCOM 协议 的 类型 系统 合作 ， 使得 这些 系统 中 的 API 不 需要 使用 隧道 ( Tunneling ) 技术 ， 直接 映射 到 HTTP - NG 。 它 提供 了 与 其它 类型 系统 的 功能 兼容性 。 
 　 　 HTTP - NG 的 应用层 是 基于 特定 应用 的 ， 不同 的 应用 具有 不同 的 界面 。 它 允许 多个 应用 能 共同 存在 ， 支持 添加 新 的 应用 而 不 妨碍 原有 的 应用 。 HTTP - NG 将 现存 应用 转换 到 一个 更好 的 技术 基础 之上 。 
 2.2 　 消息 层 
 　 　 消息 系统 描述 了 一种 对 应用层 中 类型 系统 可 表示 类型 的 值 的 编组 ( Marshaling ) 方法 。 编组 方法 是 直接 的 ， 它 独立 于 调用 方法 或 当前 支持 的 应用 。 编组 方法 是 基于 IETF 的 外部 数据表示 XDR ， XDR 在 分布式系统 中 广泛 被 实现 。 所有 方法 的 参数 和 结果 在 系统 中 被 表达 ， 因而 不管 有 多少 应用 或者 应用 系统 中 定义 了 多少 方法 ， 都 没有 增加 编组 一个 请求 或 应答 消息 的 复杂性 。 
 　 　 消息 层 主要 是 一个 请求 应答 消息 协议 ， 就 像 HTTP   1.1 一样 ， 但 它 在 几个 方面 提高 了 性能 ， 比如说 它 使用 缓存 和 二进制 消息 格式 来 减少 实际 传输 的 字节数 ， 同时 也 减少 了 编组 消息 所 需 的 CPU 时间 ， HTTP - NG 消息 层 使用 附加 的 控制 信息 ， 通过 建立 会话 特征 更进一步 减少 带宽 要求 。 另 一个 性能 提高 来源于 利用 应用层 的 类型 系统 ， 消除 每个 头 之间 的 依赖性 ， 从而 减少 了 实现 的 复杂性 。 
 　 　 消息 格式 现在 被 称为 W3NG ， 它 利用 了 会 话 缓存 的 技术 ， 已经 用于 DCE   RPC 、 JAVA   RMI 中 。 举例来说 ， 当 一个 方法 或 资源 第一次 被 调用 时 ， 整个 标识 在 应答 消息 中 传输 ， 此时 连接 双方 都 将 它 缓存 。 在 后来 的 方法 调用 中 ， 只 需要 一个 很小 的 对应 特定 连接 的 整数 值 在 传输 中 用来 代替 原来 的 标识 。 更进一步 ， 这些 缓存 可 被 连接 双方 在 建立 连接 时 加载 ， 这 对于 一些 标准 应用 特别 有用 。 
 　 　 一个 方法 调用 的 目标 资源 的 传递 是 相对 于 前 一个 目标 的 。 系统 并 不是 传递 整个 资源 的 标识 ， 而是 传递 与 连接 上 一次 资源 标识 中 的 不同 部分 。 接受方 通过 在 上次 接受 的 标识 中 修改 这些 不同之处 重新 构建 标识 。 
 　 　 HTTP - NG 的 消息 格式 是 二进制 的 ， 不像 HTTP - 1.1 中 基于 文本 的 格式 ， 二进制 格式 在 两个 方面 提高 了 性能 。 第一 ， 非 字符串 值 不 需要 由 发送 方 转换 为 串 ， 然后 接受方 解码 。 相反 ， 可以 使用 有效 的 操作 如 memcpy 直接 从 这些 值 的 内存 表示 中 进行 拷贝 。 第二 ， 这些 值 使用 二进制 表示 要 比用 串 表示 所 花 字节数 要少 。 
 　 　 与 现存 协议 相比 ， HTTP - NG 消息 层 所用 技术 能 显著 地 减少 开销 。 
 2.3   传输层 
 　 　 HTTP - NG 支持 由 传输 栈 构成 的 特定 应用 ， 这些 传输 栈能 操作 那些 通过 它们 的 消息 。 传输层 允许 传输 栈 组成 成分 以 多种 顺序 安排 ， 它 可以 在 一个 可靠 的 字节 流如 TCP / IP 之上 提供 多个 虚拟 连接 ， 同时 它 还 可以 提供 一个 单一 字节 流 的 双向 使用 ， 这样 服务器 不 需要 打开 附加 的 字节 流 就 可以 对 客户 进行 回 叫 。 它 也 提供 在 一个 底层 字节 流 之上 的 消息 界限 的 标记 ， 这 可以 用来 支持 高层 基于 消息 的 系统 。 它 允许 消息 成块 或 分片 传输 ， 既 可以 复用 同时 发生 的 消息 ， 又 可以 快速 发送 一个 数据 段 开始 部分 的 数据 值 ( 如 GIF 文件 开始 的 文件大小 信息 ) 。 
 　 　 用于 HTTP - NG 的 WEBMUX 栈是 传输 成分 的 非常 有用 的 合成 。 它 直接 位于 TCP / IP 之上 而 位于 编组 层 之下 ， 但 它 也 可以 和 其它 传输 成分 如 压缩 和 安全 成分 连接 。 WEBMUX 层 进行 记录 标记 ， 并且 支持 消息 的 分片 。 它 提供 可选 的 传输流 控制 ， 所以 接受者 能 控制 发送 方 的 传输率 。 它 支持 在 一个 单一 的 底层 连接 上 复用 最多 252 个 虚拟 连接 。 每个 虚拟 连接 允许 在 WEBMUX 层上 有 不同 的 传输 栈 。 除此之外 ， WEBMUX 层为 连接 双方 提供 端点 ( Endpoint ) 标识 ， 这 使得 服务器 使用 同样 的 连接 回 叫 客户 更加 容易 。 既然 传递 端点 标识 方法 已经 定义 ， 防火墙 也 可以 在 必要 时 插入 其中 。 
 3 　 WEB 浏览器 和 服务器 结构 
 　 　 在 WEB 中 应用 到 至少 两种 参与者 ： WEB 浏览器 及 WEB 服务器 。 在 HTTP - NG 协议 中 的 WEB 浏览器 和 WEB 服务器 的 可能 结构 如图 2 、 3 所示 。 WEB 服务器 为了 处理 许多 类型 的 客户 具有 更 多 种类 的 协议 和 传输 组成 成分 。 图 2 中 服务器 即 支持 HTTP 又 支持 HTTP - NG 协议 ， 而图 3 中 WEB 浏览器 只 支持 HTTP - NG 。 服务器 能 在 一个 普通 TCP / IP 传输 上 支持 HTTP - NG 消息 ， 而 浏览器 希望 每个 服务器 上 具有 MUX 协议 。 图中 的 浏览器 可以 支持 数字 符 签名 文档 处理 ， 而 服务器 不能 。 浏览器 和 服务器 都 在 消息 流中 使用 压缩 。 当然 也 可以 应用 许多 其它 可能 的 传输 协议 。 一个 代理服务器 既 具有 客户端 功能 又 具有 服务器端 的 功能 。 
 
 图 2 　 一个 Web   Server 的 结构 
 
 图 3 　 一个 Web   Server 的 结构 
 4 　 结束语 
 　 　 HTTP - NG 作为 下一代 HTTP 协议 被 设计 用来 克服 HTTP 协议 的 缺点 ， HTTP - NG 三层 结构 ： 传输层 、 消息 层 、 应用层 使得 HTTP - NG 具有 良好 的 模块化 特点 ， 核心 的 简单 性 ， 分布式 扩展性 ， 全球 伸缩性 ， 并且 具有 良好 的 传输 效率 ， 它 可以 支持 分布 对象 技术 ， 支持 CORBA 应用 ， 更好 地 进行 分布 计算 。 
 　 　 HTTP - NG 还 在 设计 当中 ， 但 它 将 给 现有 WEB 分布式计算 结构 带来 巨大 的 变化 ， 现有 WEB 上 应用 转换 到 HTTP - NG 平台 上 ， 最后 整个 平台 都 会 更新 为 HTTP - NG 。 
 黄宏涛 （ 广东省 财税 高等 专科学校   广州   510420 ） 
 王慧 （ 武汉大学 计算机科学 系   武汉   430072 ） 
 参考文献 
 1 ， William   C .   Janssen ,   JR .   A   " next   generation "   architecture   for   http ,   IEEE   internet   computing ,   Jan - Feb ,   1999 :   69 ～ 73 
 2 ， HTTP - NG   project ,   http : / / www . w3 . org / protocols / HTTP - NG / ,   http : / / www . w3 . org / TR / WD - HTTP - NG - architecure 
 收稿 日期 ： 1999 年 7 月 7 日 
