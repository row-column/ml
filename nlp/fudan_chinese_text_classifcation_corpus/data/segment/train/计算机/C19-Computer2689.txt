软件 学报 
 JOURNAL   OF   SOFTWARE 
 1999 年 　 第 10 卷 　 第 11 期 　 Vol.10 　 No.11 　 1999 
 
 
 
 基于 客户 行为 模式 的 Web 文档 预送 
 朱培栋   卢锡城   周兴铭 
 　 　 摘要 　 预送 作为 主动 cache , 是 cache 机制 由 时间 局部性 向 空间 局部性 的 拓展 . 文章 提出 服务器 主动 预送 的 两种 模式 . 基于 单个 URL 的 模式 利用 客户 请求 的 马尔可夫 链 特征 获取 文档 的 时序 相关 模型 , 可 进行 多级 预送 . 基于 会话 的 模式 包括 基于 文档 属性 和 会 话 整体 语义 的 途径 , 重点 研究 基于 文档 属性 的 途径 , 给出 基本 的 聚集 算法 , 探讨 了 文档 兴趣 的 定量 表达 , 提出 反映 访问 时序 的 属性 向量 距离 算法 . 对于 预送 性能 的 度量 , 给出 请求 命中率 、 会话 命中率 、 预送 效率 和 预送 代价 等 度量 方法 . 同时 , 完成 大量 实验 , 对 客户 行为 分析 的 这 两种 模式 进行 比较 . 文章 提出 的 由 服务器 访问 记录 提取 客户 行为 模式 的 方法 , 不但 适用 于 文档 预送 , 对于 服务器 站点 设计 和 ISP ( internet   service   provider ) 的 服务 规划 也 有 重要 价值 . 
 　 　   关键词 　 WWW 响应 性能 , 预送 , 请求 相关性 , 马尔可夫 链 , 会话 聚集 , 文档 属性 , 预送 性能 . 
 　 　 中图法 分类号 　 TP393 
 Web   Document   Presending   Based   on   User   Behavior   Patterns 
 ZHU   Pei - dong   LU   Xi - Cheng   ZHOU   Xing - ming 
 ( School   of   Computer   National   University   of   Defense   Technology   Changsha   410073 ) 
 　 　 Abstract 　   Presending   is   an   active   service   which   extends   caching   mechanism   from   temporal   locality   to   spatial   locality .   Two   modes   of   extracting   user   behavior   patterns   are   proposed   to   predict   future   requests   from   clients   for   efficient   presending .   URL - based   mode   exploits   the   Markov - chain   features   of   request   series ,   and   can   be   used   for   hierarchical   presending .   Session - based   mode   captures   more   semantics ,   and   the   authors '   work   emphasizes   the   clustering   algorithm ,   feasible   document   weight   definition ,   and   attribute - vector - distance   computation   representing   order   of   accesses .   Their   performance   is   evaluated   using   appropriate   metrics   such   as   request   hit   rate ,   session   hit   rate ,   presending   efficiency   and   presending   cost .   Numerous   experiments   are   carried   out   to   compare   the   two   modes .   These   methods   are   used   for   web   presending ,   while   they   are   helpful   to   web   server   design   and   ISP   ( internet   service   provider )   service   planning . 
 　 　 Key   words 　 WWW   responsiveness ,   presending ,   request   dependency ,   Markov   chain ,   session   clustering ,   document   attribute ,   presending   performance . 
 　 　 单纯 的 cache 技术 只是 利用 了 WWW 访问 模式 的 时间 局部性 , 对于 未曾 访问 过 的 内容 无法 缓冲 , 响应 性能 依然 得不到 改善 , 这 一点 在 客户 发现 一个 新 的 热点 服务器 或 服务器 的 页面 经常 更新 时 , 感觉 尤其 明显 . 另外 , 如果 客户 机器 或 本地 代理服务器 用于 WWW 内容 缓冲 的 空间 不 大 , 曾经 访问 过 的 内容 被 覆盖 , 单纯 的 cache 机制 也 不会 产生 好 的 响应 性能 . 
 　 　 预测 客户 将来 可能 发出 的 访问 请求 , 在 客户 浏览 当前 文档 时 , 服务器 将 预测 的 内容 发送 出去 , 当真 正要 访问 这些 文档 时 , 只 需 由 本地 cache 获取 . 这种 预送 技术 ( presending ) 利用 文档 的 空间 局部性 , 是 主动 cache , 是 cache 机制 由 时间 局部性 向 空间 局部性 的 扩展 . 
 　 　 分析 文献 ［ 1 ］ 中 的 服务器 访问 记录 , 文档 平均 发送 时间 为 1.37 s , 平均 请求 间隔 为 44.59 s , 可见 服务器 有 足够 的 时间 预送 , 能够 保证 预送 的 时效 . 35   290 个 访问 请求 获取 的 文档 平均 为 8   241 字节 , 多为 小 文件 ; WWW 应用 交互性 强 , 文件 命中率 比 字节 命中率 重要 , 所以 预送 的 带宽 损失 不大 . 平均 一次 会话 有 15 个 请求 , 最 多 包含 224 个 请求 , 请求 次数 超过 30 个 的 会 话 占 13.4% , 具有 良好 的 预测 基础 和 预送 价值 . 
 　 　 预送 分为 主动 预送 和 请求 预送 . 请求 预送 由 浏览器 预测 并 发出 预取 请求 , 由于 浏览器 对 服务器 内容 和 文档 组织 缺乏 了解 , 只能 根据 简单 的 单层 嵌入 关系 进行 . 而 主动 预送 , 由于 服务器 拥有 大量 的 访问 记录 , 对 自己 的 文档 熟悉 , 了解 各类 客户 的 访问 模式 , 因此 , 可以 更加 有效 地 预测 和 预送 . 
 1   请求 相关性 和 预送 集合 构造 
 1.1   预送 集合 构造 
 　 　 预送 过程 包括 学习 、 匹配 和 发送 这 3 个 阶段 . 学习 是 分析 历史 行为 或 其他 客户 行为 , 提取 客户 一般 情况 下 或 所属 类别 的 行为 模型 ; 匹配 是 确定 正在 进行 的 客户 访问 所属 的 行为 模型 , 根据 共同 访问 模式 来 推断 将来 的 请求 ; 发送 是 指 , 将 预测 内容 根据 预送 策略 传输 至 客户 , 具体 预送 策略 包括 预送 的 层次 、 数目 、 体积 、 概率 阈值 和 发送 速率 的 选择 . 
 　 　 学习 和 匹配 属于 预测 过程 , 预测 基于 类推 原则 和 连贯 原则 . 类推 是 一种 空间 上 的 扩展 , 是 指新 的 客户 行为 模式 和 现有 的 多数 客户 相似 ; 连贯 原则 实现 时域 拓展 是 指 客户 的 未来 访问 请求 与 过去 的 访问 模式 相似 . 本文 只 讨论 基于 服务器 访问 记录 的 学习 方法 . 
 1.2   请求 相关性 
 　 　 HTTP 是 无 状态 应用 协议 , 客户 和 服务器 的 一次 会话 在 服务器 看来 是 持续 一定 时间 （ 例如 3 小时 ） 的 客户 访问 序列 , 一次 会话 内 客户 的 访问 行为 相对 确定 . 服务器 的 访问 记录 Log 表示 为会话 序列 , Log = 〈 S1 , S2 , ... 〉 . 会话 S 为 客户 访问 请求 序列 , S = 〈 Client , 〈 Req1 , Req2 , ... 〉 〉 . 
 　 　 请求 的 属性 非常 多 ［ 2 ］ , 与 预送 有关 的 属性 考虑 请求 时刻 Tr 和 请求 的 文档 Doc , 那么 请求 可以 表示 为 Req = 〈 S , Tr , Doc 〉 , 其中 S 为 该 请求 所属 的 会 话 . 对 请求 相关性 的 分析 需要 研究 请求 所属 会话 的 相关性 、 请求 时序 和 文档 关联 , 用 RR 表示 请求 相关性 , 那么 RR ( Req1 , Req2 ) = 〈 RS ( S1 , S2 ) , RT ( Tr1 , Tr2 ) , RD ( Doc1 , Doc2 ) 〉 . RS 称为 类 属 相关性 , RT 为 时序 相关性 , RD 为 结构 相关性 . 
 2   基于 URL 的 访问 模式 
 2.1   基于 马尔可夫 链 的 预测 
 　 　 { ζ ( n ) , n = 0 , 1 , 2 , ... } 是 状态 空间 为 I 、 参数 为 非负 整数 的 随机 过程 . 若 
 P { ζ ( n + 1 ) = j ｜ ζ ( 0 ) = i0 , ζ ( 1 ) = i1 , ... , ζ ( n - 1 ) = in - 1 , ζ ( n ) = i } = P { ζ ( n + 1 ) = j ｜ ζ ( n ) = i } 
 ( 1 ) 
 则 称 ζ ( n ) 为 马尔可夫 链 . 条件 概率 P { ζ ( k + 1 ) = j ｜ ζ ( k ) = i } 为 在 时刻 k 时 的 一步 转移 概率 , 记为 Pij ( k ) . 若 P { ζ ( k + 1 ) = j ｜ ζ ( k ) = i } = Pij , 即 状态 i 转移 到 j 的 概率 与 k 无关 , 则 称 该 过程 为 齐次 马尔可夫 链 . 转移 矩阵 P = ［ pij ］ . 
 　 　 将 客户 请求 看做 离散 空间 的 一个 事件 , 请求 过程 具有 齐次 马尔可夫 链 特征 . 客户 在 t 时刻 已经 对 文档 Di 发出 访问 请求 , 设在 时间 ( t , t + TW ］ 内 对 另 一个 文档 Dj 访问 的 概率 为 Pij , TW 称为 预送 窗口 , Pij 称为 预送 概率 , 所有 Pij ( 0 ≤ i , j ＜ N ) 构成 预测 方阵 P , N 为 服务器 备有 的 文档 数目 . 
 利用 m 步 转移 概率 , 得到 文档 的 多级 相关矩阵 P ( m ) , 用于 多级 预送 . 
 
 ( 2 ) 
 P ( m ) ＝ P ( m - 1 ) P ( 1 ) . 
 ( 3 ) 
 2.2   预送 性能 
 　 　 设 客户 A 发出 的 请求 reqi 要求 访问 文档 doci , 这次 请求 引发 预送 , 实际 预送 的 所有 有效 文档 构成 的 集合 为 P ( doci ) . 若 采用 基于 URL 的 预送 模式 , P ( doci ) 在 cache 中 的 有效期 至 客户 发出 reqi + 1 为止 , 那么 , 请求 reqi + 1 的 命中率 为 
 
 ( 4 ) 
 即 reqi + 1 所 请求 的 文档 属于 P ( doci ) 的 概率 . 预送 文档 数目 越 多 , 命中率 越大 , 即 若 预送 集合 P1 ( doci ) P2 ( doci ) , 相应 的 命中率 必定 是 hr1 ≤ hr2 ; 命中率 越高 , 客户 从 发出 访问 请求 到 文档 送回 的 这 一段 等待时间 Taccess = hr * Tcache + ( 1 - hr ) ( Tcache + Tremote ) 和 客户 上机时间 Tclient = Tread + Taccess 越小 , 工作效率 可以 进一步提高 , 其中 Tcache 为 cache 访问 时间 , Tremote 为 从 服务器 远程 获取 文档 的 时间 , Tread 为 文档 阅读 时间 . 设 客户 A 在 一次 会话 s 期间 从 浏览器 上 发出 M 个 请求 , 若有 hit - num 个 命中 , 那么 会话 s 的 命中率 表示 为 hs ( s ) = hit - num ( s ) / M . 
 　 　 客户 对 文档 doci 进行 访问 所 引发 的 预送 , 预送 效率 ur ( doci ) = hr ( reqi + 1 ) / # ［ P ( doci ) ］ , 预送 代价 qr ( doci ) = Sp ( doci ) , 其中 Sp ( doci ) 为 预送 集合 P ( doci ) 中 所有 文档 的 大小 之 和 . 如果 客户 对 文档 doc 的 请求 没有 传送 到 服务器 , 而是 在 本地 cache 得到 响应 , 我们 设 服务器 可以 得知 这一 信息 , 那么 在 客户 阅读 doc 时 , 服务器 同样 可以 进行 基于 doc 的 预送 . 会话 s 的 预送 效率 , 表示 在 一个 会话 中 预送 一个 文档 命中 客户 请求 的 平均 概率 , 可以 近似 看做 式 ( 4 ) 中 hit ( d , reqi + 1 ) 相应 的 后验 概率 . 会话 s 的 预送 代价 
 2.3   实   验 
 　 　 逐行 分析 服务器 的 访问 记录 ( log   file ) , 登记 每 一个 遇到 的 新 文档 , 设 服务器 共有 N 个 不同 的 文档 被 客户 访问 . 对 曾经 访问 过 的 每个 文档 Di , 设该 文档 被 所有 客户 访问 的 次数 为 Mi . 由于 相继 请求 之间 的 时间 间隔 相差 很大 , 从 几秒 到 几千 秒 不 等 ［ 1 ］ , 所以 不用 时间 区间 作预 送 窗口 , 而是 选用 文档 数目 作为 Tw , 预送 概率 Pij 定义 为 紧跟 Di 被 同一 客户 访问 的 Tw 个 文档 中 出现 Dj 的 概率 . 按 时间 顺序 分析 访问 记录 , 设 Tw 内以 Di 开始 的 各个 客户 的 访问 序列 中 文档 Dj 出现 的 总 次数 为 Qj , 那么 , 预送 概率 可以 通过 Pij = Qj / Mi 近似计算 . 对 所有 Di , i ∈ ［ 1 , N ］ 进行 类似 分析 , 从而 得到 相关矩阵 P . 
 　 　 文献 ［ 1 ］ 中 的 访问 记录 可以 区分 为 2   286 个会话 , 我们 使用 1   000 个会 话 的 记录 用于 预送表 的 构造 , 余下 1   286 个会 话 的 记录 用于 验证 . 文献 ［ 1 ］ 只是 24 小时 的 访问 记录 , 实际 构造 预送表 需要 几天 或 数十天 的 会 话 记录 , 才能 足够 准确 地 把握 客户 行为 模式 . 
 　 　 设 预送 窗口 Tw = 5 , 可以 构造 类似 于表 1 的 预送表 , 图 1 是 相应 的 文档 相关 图 , 表 1 和 图 1 中 标识 的 小数 为 预送 概率 . 在 实际 实验 中 , 我们 设 预送 阈值 kp = 35% , 将 预送 概率 大于 kp 的 文档 纳入 预送 备选 集合 . 这样 , 如果 客户 对 服务器 访问 记录 中 出现 的 所有 文档 分别 发出 访问 请求 , 经 统计 可知 , 各个 文档 的 预送 备选 集合 平均 含有 3 个 文档 , 最多为 12 个 . 构造 好 预送表 之后 , 当 实际 预送 时 , 可以 只 从 预送 备选 集合 中 选择 预送 概率 最大 的 文档 , 也 可 选择 一定 数目 的 文档 , 如果 在 Tw 内 把 预送 概率 大于 kp 且 小于 250KB 的 文档 全部 预送 , 则 平均 会话 命中率 hs = 42.5% , hs 超过 85% 的 会 话 占会话 总数 的 18.6% . 各会话 平均 预送 效率 us = 13.2% , 平均 预送 代价 qs = 410KB . 
 
 图 1   文档 相关 图 
 表 1   文档 预送表 
 + home1 . htm 　 
 - image1 . gif0.8 
 - image2 . gif0.6 
 - home2 . htm0.7 
 + home2 . htm 　 
 - a . txt0.5 
 　 … 　 
 
 3   基于 会话 的 访问 模式 
 　 　 上述 对 基于 URL 的 访问 模式 的 分析 , 对 所有 客户 访问 URL 的 情况 所 进行 的 统计 , 用于 预测 后继 文档 . 这种 方法 简单 、 直接 , 但是 没有 表达 会话 特征 和 会 话 之间 的 关系 , 不利于 语义 信息 的 提取 和 应用 . 而且 , 对 每个 客户 请求 都 预送 一定 数目 的 文档 , 会 使 服务器 负载 加重 , 带宽 损失 比较 大 . 
 　 　 这种 模式 对 预送表 的 构造 和 预送 策略 的 制定 是 基于 这样 一个 假设 : 预送 内容 在 客户 发出 实际 的 请求 之后 过期 . 这样 , 一方面 , 由于 客户 实际 发出请求 的 时刻 无法 预测 , 使 成功 预测 的 内容 因 不能 及时 到达 浏览器 而 浪费 ; 另一方面 , 还会 使 已经 到达 浏览器 的 未 命中 文档 无效 , 如果 后继 文档 的 预送 集合 包括 这一 文档 , 仍然 会 再次 预 送给 客户 , 尽管 可以 在 服务器 方 增加 状态 信息 或 由 浏览器 告知 这一 信息 , 但 这 不是 基于 URL 的 模式 所 固有 的 机制 . 
 　 　 基于 会话 访问 模式 的 分析 和 预送 可以 避免 基于 URL 方式 的 上述 不足 . 提取 会话 特征 并 将 服务器 会话 集合 分类 , 判断 正在 进行 的 客户 访问 所属 会话 类别 , 根据 该类 会话 的 共同 特征 预测 该 客户 在 会 话 的 剩余时间 将要 访问 的 文档 集合 , 进行 一次性 预送 . 这种 方法 可 实现 高层次 的 行为 抽象 , 分析 的 结果 易于 理解 , 对 服务器 站点 设计 和 ISP ( internet   service   provider ) 的 服务 规划 也 有 一定 的 价值 . 
 　 　 基于 会话 的 访问 模式 包括 基于 会话 整体 语义 和 基于 各个 文档 属性 的 方法 . 基于 会话 整体 语义 的 方法 需要 对 服务器 各个 文档 作 摘要 描述 , 提取 客户 在 会 话 中 已 访问 文档 的 关键词 , 以此 作为 客户 兴趣 的 标识 , 并 作为 关键词 自动 搜索 相同 兴趣 的 其他 文档 , 将 搜索 概要 通知 客户 , 用于 导航 或 将 查找 结果 按 重要 程度 预 送给 客户 . 文献 ［ 3 ］ 中有 类似 作法 , 用于 浏览器 自动 对 客户 感兴趣 站点 的 跟踪 . 由于 预测 的 内容 未 蕴含 在 访问 记录 之中 , 此 方法 比较 适合 于 客户 从 多个 服务器 搜集 感兴趣 的 主题 , 所以 , 本文 重点 研究 是 基于 各个 文档 属性 的 方法 . 
 3.1   基本 聚集 ( clustering ) 算法 
 　 　 聚集 就是 根据 数据 子集 的 相似性 对 数据 集合 分类 , 是 一种 无 教练 ( unsupervised ) 的 机器 学习 . 客户 和 服务器 的 一次 会话 可用 属性 向量 v = 〈 a1 , a2 , ... , aN 〉 表示 , 元素 ai 表示 客户 对 服务器 文档 i 的 兴趣 程度 , N 为 服务器 备有 的 文档 数目 . 会话 p 和 q 分别 用 其 属性 向量 表示 : p = 〈 p1 , p2 , ... , pN   〉 , q = 〈 q1 , q2 , ... , qN 〉 . 每个 会话 作为 向量 空间 的 一个点 , p 和 q 之间 的 相似性 可用 欧几里得 距离 ( Euclidian   distance ) d 来 度量 , 
 
 ( 5 ) 
 判断 会话 p 是否 属于 聚集 c , 需要 计算 p 与 c 的 质心 m 的 距离 . 在 不 引起 混淆 的 前提 下 , 可用 d ( p , c ) 代表 d ( p , m ) . 若 c = { v1 , v2 , ... , vk } , 则 m 的 属性 mi 为 
 
 ( 6 ) 
 　 　 聚集 分为 层次 方法 和 非 层次 方法 , 我们 选用 Leader 层次 算法 ［ 4 ］ . 
 　 　 算法 1 .   会话 聚集 的 Leader 算法 . 
 　 　 输入 :   一组 向量 V 
 　 　 输出 :   一组 聚集 C = { C1 , C2 , ... } , CiV . 
 　 　 过程 : 
 　 　 　 　 ( 0 )   C 初值 为空 . 
 　 　 　 　 ( 1 )   对 V 中 每个 向量 v : 
 　 　 　 　 　 　 寻找 聚集 c 使 v 和 c 的 质心 距离 最短 , 记为 dmin ; 
 　 　 　 　 　 　 如果 dmin 小于 距离 阈值 DistanceThresh , 
 　 　 　 　 　 　 则 将 v 加入 c , 
 　 　 　 　 　 　 否则 , 将 { v } 加入 C . 
 3.2   基于 各个 文档 属性 的 聚集 
 　 　 向量 v 的 属性 项为 服务器 上 的 文档 , 属性 值为 客户 对 该 文档 感兴趣 的 程度 val . 如果 会话 v1 和 v2 访问 的 文档 很少 有 不 相同 的 , 对 相同 文档 的 兴趣 差异 也 小 , 并且 访问 顺序 相一致 , 则 v1 和 v2 就 应 纳入 同一 聚集 . 
 3.2 . 1   访问 兴趣 
 　 　 . 文献 ［ 5 ］ 将 文档 的 访问 次数 作 属性 值 val , 但是 , 即使 客户 在 一次 会话 中 对 同一 文档 兴趣 非常 浓厚 , 多次 阅读 , 在 服务器 记录 中 也 无法 反映 这 一点 . 这是 由于 : 在 一次 会话 中 , 客户 一般 不会 从 服务器 多次 下载 同一 文档 ; 浏览器 的 cache 验证 选项 , 多数 情况 下 不是 设置 为 每次 访问 都 验证 ; 即使 每次 验证 , 如果 cache 使用 过期 验证 模型 ( expiration   model ) ［ 2 ］ , 也 不 与 源 服务器 通信 . 
 　 　 但是 , 可以 由 服务器 统计 出 文档 doc 所 引出 的 对 其他 文档 的 访问 总 次数 Rnum . 由 超文本 结构 看 , 如果 对 doc 的 直接 链接 的 下 一层 ( physically   linked ) 文档 访问 的 次数 多 , 表明 客户 对 doc 所含 内容 兴趣浓厚 . 
 　 　 . 文档 的 大小 不 适于 作 val 值 , 由于 同一 文档 在 不同 会话 中 大小 不变 . 但是 , 如果 不 考虑 客户 阅读 速度 的 差异 , 文档 的 阅读 时间 可以 度量 客户 的 兴趣 程度 . 同一 文档 的 阅读 时间 Tread 变化很大 , 文献 ［ 1 ］ 中 不同 客户 在 对 某个 4KB 文档 阅读 时 , 以 10s 为 最小 区分 单位 , Tread 就 有 6s ～ 1297s 之间 43 种 可能 , 可用 来 划分 客户 兴趣 群 . 请求 间隔 和 文档 传输 时间 分别 记为 Tinter - request 和 Ton , 有 Tread = Tinter - request - Ton . 由于 客户 在 阅读 时 , 可能 被 其他 事情 中断 , 所以 设 Tread 最大 为 1   800s , 若 计算 出 的 Tread > 1   800s , 就 记为 1   800s . 文献 ［ 1 ］ 中 平均 Tinter - request = 44.59 s , 平均 Ton = 1.37 s , 平均 Tread = 43.22 s . 
 　 　 根据上述 分析 , 客户 对 文档 感兴趣 的 程度 val = f ( Rnum , Tread ) . 为了 权衡 表征 兴趣 的 两个 参数 , 令 f ( Rnum , T  read ) = 例如 , 文档 doc1 的 Rnum1 = 3 , Tread1 = 160s , 则 val1 = 7 ; 文档 doc2 的 Rnum2 = 6 , Tread2   = 10s , 则 val2 = 7 . 这种 定义 符合 客户 的 主观 判断 . 
 3.2 . 2   访问 顺序 
 　 　 以式 ( 5 ) 计算 向量 距离 , 忽略 了 访问 顺序 . 例如 , 客户 A 的 访问 序列 为 ( 8 , 19 , 4 , ... ) , 客户 B 的 访问 序列 为 ( 4 , 8 , 19 , ... ) . 在 进行 预送 时 , 对于 A , 访问 文档 8 时 可 预送 19 与 4 ; 而 对于 B , 8 的 后继 就 不 包括 4 . 以式 ( 5 ) 计算 会话 相似性 , 这种 差异 无法 表达 , 而 预送 必须 反映 访问 的 时序 关系 . 
 　 　 统计 文献 ［ 1 ］ 的 服务器 访问 记录 , 客户 访问 过 的 不同 文档 共有 5   104 个 , 平均 每个 会话 对 13 个 文档 访问 , 最 多 访问 85 个 文档 , 所以 属性 向量 可 采用 紧致 形式 表示 为序 偶 〈 pos , val 〉 的 序列 , 其中 pos 为 文档 编号 , val 就是 上文 所述 的 属性 值 . 会话 v1 和 v2 对应 的 属性 向量 都 采用 链表 表示 , 链表 元素 为 〈 pos , val 〉 . 计算 向量 距离 用 以下 方法 . 
 　 　 算法 2 .   反映 访问 顺序 的 向量 距离 计算 : distance ( v1 , v2 ) . 
 　 　 输入 :   pair * v1 , * v2 
 　 　 输出 :   sqrt ( sum ) 
 　 　 过程 : 
 　 　 　 　 ( 0 )   sum = 0 . 
 　 　 　 　 ( 1 )   循环 1 :   起始 : p = v1 , q = v2 ; 终止 : p 或 q 为空 
 　 　 　 　 　 　 若 p → pos ＜ q → pos , 则 sum + = ( p → val ) 2 , p ++ ; 
 　 　 　 　 　 　 若 p → pos ＞ q → pos , 则 sum + = ( q → val ) 2 , q ++ ; 
 　 　 　 　 　 　 否则 , sum + = ( p → val - q → val ) 2 ; p ++ ; q ++. 
 　 　 　 　 ( 2 )   循环 2 :   对 v1 的 其他 元素 , sum + = ( p → val ) 2 . 
 　 　 　 　 ( 3 )   循环 3 :   对 v2 的 其他 元素 , sum + = ( q → val ) 2 . 
 　 　 例如 , v1 = ( 〈 8 , 1 〉 〈 19 , 1 〉 〈 4 , 2 〉 ) , v2 = ( 〈 4 , 2 〉 〈 8 , 1 〉 〈 19 , 1 〉 ) , 那么 , v3 = ( 〈 4 , 2 〉 〈 8 , 1 〉 ) 和 v1 的 距离 d31 = 3 和 v2 的 距离 d32 = 1 , 很 好 地 反映 了 访问 的 时序 特征 . 
 3.3   匹配 与 预测 
 　 　 设 服务器 从 收到 客户 A 发出 的 L1 个 访问 请求 时 开始 对 后继 请求 预测 , 这 L1 个 请求 构成 会话 s 的 一部分 , 记为 v1 . 服务器 聚集 算法 对 已有 会话 分类 , C = { C1 , C2 , ... } , Ci = { vi1 , vi2 , ... , vik } . 
 　 　 设 第 i 个 聚集 的 判断 函数 为 fi , 可以 采用 指标 极小 化 判断 标准 . 如果 i ≠ k , 
 fk ( v1 ) ＜ fi ( v1 ) 
 ( 7 ) 
 则 v1 ∈ Ck . 这里 , fi ( v1 ) = d ( v1 , Ci ) . 只 预送 Ck 中 兴趣 值 超过 l 且 不 在 v1 中 的 内容 , 具体方法 如下 . 设 Ck 的 质心 为 mk , 首先 滤去 mk 中 兴趣 值 小于 l 的 文档 , 得到 v ′ 2 , v ′ 2 = hl ( mk ) . 其中 hl ( p ) = q : 若 p 的 第 i 个 属性 值 pi ≥ l , 则 q 相应 的 属性 值 qi = pi ; 否则 qi = 0 . 然后 排除 已 在 v1 中 的 文档 , 那么 , 预送 文档 集合 P ( v1 ) = sub ( v ′ 2 ) - sub ( v1 ) , 其中 sub ( p ) = { n ｜ pn ＞ 0 } . 
 　 　 在 实际 会话 中 , 客户 A 又 在 浏览器 上 发出 L2 个 访问 请求 , 会话 s 的 向量 表示 v = v1 + v2 , 则 会 话 命中率 hs ( s ) = # ［ sub ( P ( v1 ) ) ∩ sub ( v2 ) ］ / # ［ sub ( v ) ］ , 会话 预送 效率 us ( s ) = # ［ sub ( P ( v1 ) ) ∩ sub ( v2 ) ］ / # ［ sub ( P ( v1 ) ］ , 预送 代价 qs ( s ) = Sp ( v1 ) . 
 3.4   预送 实验 
 　 　 与 基于 马尔可夫 链 的 实验 相似 , 使用 文献 ［ 1 ］ 中 1   000 个会 话 的 记录 用于 会话 聚集 , 余下 1   286 个会话 记录 用于 验证 . 实验 分 以下 步骤 进行 : ( 1 )   预处理 : 访问 属性 计算 , 会话 向量 表示 ; ( 2 )   聚集 ; ( 3 )   匹配 ; ( 4 )   预送 . 
 　 　 滤掉 少于 4 个 访问 请求 的 会 话 , 共有 760 个会话 参与 聚集 , 生成 68 个 子集 , 去掉 只含 1 个会 话 的 子集 , 余下 37 个 子集 用于 预测 . 令 L1 = 3 , 客户 发出 3 个 请求 之后 进行 匹配 , 匹配 成功 后 , 令 预送 兴趣 阈值 为 1 , 结果 是 每个 会话 平均 预送 文档 14 个 , 平均 会话 命中率 hs = 37.6% , 平均 预送 效率 us = 40.3% , 平均 预送 代价 qs = 130.2 KB . 
 　 　 与 基于 马尔可夫 链 的 方法 相比 , 在 hs 相差 不大 的 情况 下 ( 为 0.88 倍 ) , us 却 高出 很多 ( 为 3.05 倍 ) , qs 低 很多 ( 为 0.32 倍 ) . 可见 , 基于 会话 的 方法 以较 小 的 预送 代价 换取 了 相当程度 的 会 话 命中率 . 
 4   相关 工作 
 　 　 预取 是 并行 和 分布式文件系统 提高 存取 效率 的 通用 方法 , 在 以 文件 为 单位 的 预取 中 , 多数 通过 应用 提示 进行 预取 . 文献 ［ 6 ］ 中 的 预测 方法 是 其中 较 有 智能 的 一种 , 使用 多阶 上下文 模型 对 文件系统 的 事件 进行 跟踪 , 匹配 的 前件 是 事件 序列 , 不如 本文 提出 的 基于 马尔可夫 链 的 方法 简单 . 
 　 　 WWW 是 分布式系统 的 特殊 应用领域 , 简洁 的 HTTP 协议 使 客户 的 访问 行为 得到 准确 的 记录 , 并 易于 分析 . 文献 ［ 7 , 8 ］ 对 Web 预取 有 简单 的 介绍 , 但是 没有 涉及 预送 代价 等 性能 度量 , 没有 考虑 基于 会话 语义 的 途径 . 文献 ［ 5 ］ 对 客户 访问 模式 分类 , 用于 动态 链 的 构造 , 但是 未 把握 访问 的 时序 特征 , 客户 对 文档 兴趣 的 度量 采用 访问 计数 是 不 恰当 的 . 文献 ［ 9 ］ 通过 统计 文档 翻页 和 窗口 放大 次数 , 获取 客户 对 在线 报纸 某一 主题 的 喜好 程度 , 实现 起来 较为 繁琐 , 并且 不是 基于 服务器 访问 记录 . 
 　 　 数据挖掘 可以 从 大规模 数据库 中 发现 潜在 的 模式 或 规则 ［ 10 ］ , 本文 对 WWW 访问 记录 的 分析 运用 了 数据挖掘 的 基本原理 , 借鉴 了 基本 方法 . 现有 的 服务器 记录 分析 工具 , 如 WWWStat , Wusage 和 WebLog ［ 11 ］ 等 , 不 支持 文档 相关性 和 会 话 特征分析 , 无法 用于 预送 和 实质 的 客户 行为 预测 . 
 5   结   语 
 　 　 主动 预送 只 要求 cache 有效期 为 相继 请求 之间 的 间隔 或 一次 会话 持续时间 , 对 客户 尚未 请求 的 内容 可以 缓冲 并 快速 响应 , 同时 减少 浏览器 的 缓冲 空间 需求 . 基于 URL 的 马尔可夫 链 模式 简单 、 直接 . 基于 会话 聚集 的 途径 , 以较 小 的 预送 代价 换取 了 相当程度 的 会 话 命中率 , 表达 更为 丰富 且 易于 理解 的 语义 特征 . 作为 一种 无需 客户 干预 的 主动 服务 , 文档 预送 对于 改善 响应 性能 和 浏览 质量 、 增强 ISP 竞争力 具有 重要 的 意义 . 
 基金项目 ： 本文 研究 得到 国家 863 高科技 项目 基金 资助 . 
 作者简介 ： 朱培栋 , 1971 年生 , 博士 , 主要 研究 领域 为 高性能 协议 . 
 　 　 　 　 　 卢锡城 , 1946 年生 , 教授 ， 博士生 导师 , 主要 研究 领域 为 高性能 计算机 , 先进 网络 , 并行 与 分布 处理 技术 . 
 　 　 　 　 　 周兴铭 , 1938 年生 , 教授 , 博士生 导师 , 中国科学院 院士 , 主要 研究 领域 为 高性能 计算机 , 光 互连 技术 , 数据库 . 
 作者 单位 ： 国防科学技术大学 计算机 学院   长沙   410073 
 　 　 　 　 　 E - mail :   pdzhu @ nudt . edu . cn 
 本文 通讯联系 人 : 朱培栋 ， 长沙   410073 , 国防科学技术大学 计算机 学院 
 参考文献 
 　 1   ftp :   / / ita . ee . lbl . gov / traces / epa - http . txt . Z .   Downloaded   at   April ,   1998 
 　 2   Feilding   R   et   al .   Hypertext   transfer   protocol — — HTTP / 1.1 .   IETF   RFC   2068 ,   Jan .   1997 
 　 3   Ackerman   M   et   al .   Learning   probabilistic   user   profiles .   AI   Magazine ,   1997 , 18 ( 2 ) : 48 ～ 56 
 　 4   Hartigan   J .   Clustering   Algorithms .   New   York :   John   Wiley   Press ,   1975 
 　 5   Yan   T   W   et   al .   From   user   access   pattern   to   dynamic   hypertext   linking .   Computer   Networks   and   ISDN   Systems ,   1996 , 28 ( 1 ) : 1007 ～ 1014 
 　 6   Kroeger   T   M ,   Long   D   D .   Predicting   file   system   actions   from   prior   events .   In :   Gray   R   ed .   Proceedings   of   the   1996   USENIX   Annual   Technical   Conference .   Monterey ,   CA :   Usenix   Association ,   1996 .   319 ～ 328 
 　 7   Mroz   M .   A   client   based   prefetching   implementation   for   the   world - wide - web .   Technical   Report ,   Computer   Science   Department ,   Boston   University ,   Jan .   1996 
 　 8   Padmanabhan   V   P ,   Mogul   J .   Using   predictive   prefetching   to   improve   world - wide - web   latency .   ACM   Computer   Communication   Review ,   1996 , 26 ( 3 ) : 22 ～ 26 
 　 9   Sakagami   H ,   Kamba   T .   Learning   personal   preference   on   online   newspaper   articles   from   user   behaviors .   Computer   Networks   and   ISDN   Systems ,   1997 , 29 ( 1 ) : 1447 ～ 1455 
 10   Fayyad   U   et   al .   From   data   mining   to   knowledge   discovery   in   databases .   AI   Magazine ,   1996 , 17 ( 3 ) : 37 ～ 54 
 11   http :   / / awsd . com / scripts / weblog / .   July   1998 
 本文 1998 - 07 - 14 收到 原稿 , 1998 - 12 - 07 收到 修改稿 
