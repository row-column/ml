计算机 应用 
 COMPUTER   APPLICATIONS 
 1999 年   第 19 卷   第 10 期   Vol.19   No.10   1999 
 
 
 
 基于 工作 流 管理 的 动态 联盟 企业 信息系统 模型 
 王凯 　 白庆华 
 　 　 摘 　 要 　 本文 采用 面向对象 工作 流 管理 技术 ， 从 对象 定义 、 流程 实现 等 方面 阐述 了 本 系统 模型 动态 协作 的 设计 思想 ， 并 从 系统实施 角度 分析 了 CORBA 对本 系统 模型 分布 性 的 支持 ， 最后 给出 了 包括 过程 定义 、 过程 执行 、 管理 监控 三 部分 的 系统 模型 构架 。 
 　 　 关键词 　 动态 联盟 ， 面向对象 ， 信息系统 ， 工作 流 管理 ， CORBA 
 MODEL   FOR   INFORMATION   SYSTEM   OF   VIRTUAL   AGILE   ENTERPRISE   BASED   ON   WORKFLOW   MANAGEMENT 
 Wang   kai 　 Bai   qinghua 
 College   of   Economics   &   Management ， Tongji   University ，   Shanghai   200092 
 　 　 Abstract 　 This   paper   puts   forward   ideas   of   designing   the   Information   System   which   support   dynamic   and   cooperation   by   discussing   the   object ′ s   classification   and   the   workflow ′ s   execution   in   object - oriented   Workflow   Management   System   and   analyses   the   support   of   CORBA   to   the   system ′ s   distribution   in   implementation   of   system .   At   last   the   paper   gives   a   system   model   ,   which   is   composed   by   process   definition   ,   process   execute   and   management   monitor . 
 　 　 Keywords 　 Virtual   agile   enterprise ,   Object - oriented ,   Information   system ,   Workflow   management   ,   CORBA 
 1 　 动态 联盟 企业 及其 特点 
 　 　 随着 世界 统一 市场 的 形成 ， 市场竞争 日益 激烈 。 如何 快速 响应 市场 ， 抓住 经营 机遇 ， 在 竞争 中 谋求 发展 ， 已 成为 企业 共同 追求 的 目标 。 制造业 将 从 单凭 自身 的 资源 设备 为主 的 竞争 发展 到 多 企业 合作 的 内外部 优势 资源 集成 的 生产 体系 间 的 竞争 。 动态 联盟 企业 （ Agile   Virtual   Enterprise ,   AVE ） 即 是 这样 一个 围绕 新 产品 、 新 经营 机遇 为 进行 产品 的 经营 、 开发 、 生产 在 全球 范围 内 动态 建立 的 虚拟 组织 机构 ， 它 将 成为 制造业 未来 企业 模式 之一 。 动态 联盟 企业 除 具有 一般 企业 的 基本特征 ， 还有 一些 专门 的 特点 ： 动态 联盟 企业 通常 由 盟主 企业 发动 组建 ， 根据 机遇 产品 的 资源 需求 设定 企业 模型 、 选择 联盟 伙伴 、 确定 协作关系 ， 并 在 企业 运作 过程 中 根据 需要 对 协作关系 作出 调整 ， 其 组织 过程 需要 灵活 可变 的 动态性 ； 动态 联盟 企业 是 以 生产 经营 过程 为主 线 的 企业 组织 ， 各 成员 在 这 一 主线 的 贯穿 下 ， 按照 一定 的 协作 规则 完成 各自 环节 上 的 任务 ， 其 运作 过程 强调 明确 可控 的 协作性 ； 动态 联盟 企业 的 各 成员 在组织上 相对 独立 ， 地理 上 较为 分散 ， 但 他们 之间 的 协作 需要 快速 畅通 的 信息 传递 ， 其 信息系统 要 满足 及时 有效 的 分布 性 。 
 　 　 动态 联盟 企业 的 实现 离不开 现代化 信息技术 的 支持 ， 我们 无法 想象 一个 仅靠 人工 方式 协调 的 动态 联盟 企业 如何 有效 运作 ， 然而 动态 联盟 企业 所 需 的 动态性 、 协作性 、 分布 性 确实 给 信息系统 的 构造 提出 了 挑战 。 本 模型 针对 这些 特点 ， 采用 面向对象 工作 流 管理 技术 来 构造 这种 新型 企业 的 信息 支撑 环境 。 
 2 　 工作 流 管理 
 　 　 根据 工作 流 管理 联盟 （ WFMC ） 的 定义 ： 工作 流所要 解决 的 主要 问题 是 使 在 多个 参与者 之间 按照 某种 预定 义 的 规则 传递 文档 、 信息 或 任务 的 过程 自动 进行 ， 从而 实现 某个 预期 的 业务 目标 ， 或者 是 促使 此 目标 的 实现 。 而 工作 流 管理系统 的 作用 就是 将 现实 世界 中 的 业务 过程 转化成 某种 计算机化 的 形式 表示 ， 并 在 此 形式 表示 的 驱动 下 完成 工作 流 的 执行 和 管理 。 
 　 　 动态 联盟 企业 成员 之间 的 协作 （ 如 生产 计划 、 产品设计 、 文件 传阅 等 ） 即 是 典型 的 工作 流 。 对 动态 联盟 企业 来说 ， 运作 中 的 不 确定 因素 要求 信息系统 能 随时 修改 工作 流程 并 及时 反映 到 正在 执行 的 过程 中 ， 而 传统 的 信息系统 即便 能 随 功能 需求 变化 生成 新 的 工作 流程 ， 也 很 难 做到 在 流程 执行 中 动态 调整 。 本 系统 通过 从 工作 流 要素 中 合理 提取 对象 并 设计 一套 对象 间 的 动态 联系 机制 解决 这一 问题 ， 使得 预先 定义 的 过程 的 每 一 步骤 能够 在 执行 时 按 协作 规则 动态 生成 ， 从而 使 对 过程 定义 的 修改 ， 能 及时 反映 到 正在 执行 的 工作 流程 中 。 
 2.1 　 工作 流 管理 中 的 对象 提取 与 定义 
 　 　 如果 我们 将 工作 流中 的 参与者 定义 为 成员 ， 那么 工作 流中 的 协作 活动 就 可 划分 为 成员 的 任务 和 成员 间 的 联系 。 其中 ， 成员 的 任务 是 指 工作 流中 各 成员 对 被 传递信息 的 处理 （ 或 在 规定 时间 内 对 预定 事务 的 执行 ） ， 成员 间 的 联系 是 指 信息 （ 或 指令 ） 从 发出 成员 到 接收 成员 的 传递 ， 当 信息 在 多个 成员 间 传递 时 就 构成 了 一组 联系 ， 这时 工作 流 就 可以 表示 为 各 成员 按 一定 协作 规则 对 信息 的 处理 和 传递 。 由此 在 构造 信息系统 时 我们 主要 提取 两大类 对象 ： 成员 类 和 联系 类 。 成员 类 对象 用来 完成 各 工作 环节 的 具体任务 ， 联系 类 对象 用来 推动 各 工作 环节 的 顺序 执行 。 
 　 　 成员 类 所 封装 的 数据 和 方法 除了 联盟 成员 的 基本 信息 和 基本 职能 执行 过程 ， 还 包括 接受 联系 类 对象 调用 的 通用 接口函数 及 它们 的 参数 说明 ， 这些 接口函数 根据 参数 不同 决定 调用 哪些 任务 处理 方法 。 成员 类 对象 在 工作 流 定义 时 生成 ， 其 具体 的 任务 处理 方法 集成 在 可 修改 方法 库中 。 
 　 　 联系 类中 封装 了 一些 工作 流 控制参数 ， 如 ： 工作 流 代号 ， 发出 成员 名 ， 接收 成员 名 ， 处理 什么 信息 ， 用 什么 方法 处理 ， 完成 标准 是 什么 ， 最后 期限 等 。 联系 类中 的 主控 方法 是 工作 流 执行 的 “ 全权代表 ” ， 其 过程 包括 调用 发出 成员 的 信息 发送 方法 、 调用 接收 成员 的 信息处理 方法 以及 创建 下 一个 联系 对象 等 。 由于 不同 的 工作 流 可能 需要 不同 类型 或 个数 的 控制参数 来 表示 ， 因此 允许 定义 不同 的 联系 类 ， 但 所有 联系 类 都 应 是 基本 联系 类 的 子类 ， 以 保证 联系 类 对象 基本功能 的 实现 。 联系 类 对象 在 工作 流 执行 时 生成 ， 其 具体 工作 流控制 信息 存放 在 可 修改 的 联系 对象 参数表 中 。 
 2.2 　 工作 流 管理 的 辅助 构件 定义 
 　 　 要 实现 工作 流 的 描述 和 执行 除了 上述 两类 对象 外 还 需要 一些 辅助 构件 ， 这些 构件 中 包含 了 工作 流 的 具体 信息 和 执行 方法 。 如果说 对象 是 人 ， 那么 这些 构件 就是 他们 的 任务书 、 计划表 、 工具箱 等 。 现 就 几个 基本 流程 的 主要 辅助 构件 作以 说明 。 
 　 　 工作 流 列表 由 工作 流 代号 、 联系 对象 参数表 名 、 联系 类名 组成 ， 是 工作 流 启动 的 入口 。 在 用户 定义 一个 工作 流 时 ， 系统 先为 其 生成 一个 工作 流 代号 作为 唯一 标志 ， 然后 由 用户 根据 工作 流所 需 控制参数 选择 或 定义 联系 类 ， 并 由 系统 按 联系 类 所用 参数 为 这个 工作 流 创建 一个 联系 对象 参数表 。 
 　 　 联系 对象 参数表 （ 简称 参数表 ） 是 工作 流 的 活动 中枢 ， 对 其中 任何 参数 的 改动 都 将 改变 该 工作 流 的 执行 情况 。 它 的 表 结构 由该 工作 流 的 联系 类 参数 决定 ， 表中 的 参数 由 系统 根据 用户 在 过程 定义 工具 的 引导 下 输入 的 数据 决定 。 对 每 一 特定 工作 流有 一 联系 对象 参数表 与 之 对应 ， 该 工作 流所 涉及 的 联系 对象 按 参数表 提供 的 顺序 自动 创建 和 终止 ， 并 在 对象 实例 生存期 内 将 所 对应 的 控制参数 传给 相关 对象 。 
 　 　 任务 处理 方法 库 （ 简称 方法 库 ） 是 成员 对象 根据 联系 对象 的 “ 指示 ” 调用 的 不同 方法 集成 在 一起 形成 的 ， 这些 方法 按 对 信息 的 处理 方式 及 传递 的 参数 不同 分成 多种 任务 类型 。 每个 任务 处理 方法 都 有 唯一 的 任务 代号 ， 这个 任务 代号 和 其 对应 的 工作 流 代号 、 执行 成员 名 、 任务 类型 存在 任务 列表 中 。 
 　 　 工作 流 引擎 可以 是 系统 根据 触发 条件 自动 运行 的 程序 ， 也 可以 是 人工 调用 的 独立程序 。 当 需要 启动 一个 工作 流 实例 时 ， 以 工作 流 代号 作为 参数 调用 工作 流 引擎 使 其 完成 如下 操作 ： 在 工作 流 列表 中 找到 给出 的 工作 流 代号 所在 的 记录 ； 取其 联系 类名 及 联系 对象 参数表 名 ； 在 该 联系 对象 参数表 中 查找 起始 成员 的 记录 ； 将 该 记录 的 参数传递 给 该 联系 类 初始化 函数 ， 创建 第一个 联系 对象 ， 启动 该 工作 流 。 
 2.3 　 工作 流 动态 协作 机制 的 实现 
 　 　 下面 我们 以 一个 工作 流为 例来 说明 动态 协作 机制 的 实现 （ 见图 1 ） 。 工作 流 代号 为 1001 的 工作 流由 A 、 B 、 C 三个 成员 协作 完成 ， 它们 由 联系 类 名为 RelationObject 的 类 对象 协调控制 ， 这个 类 所 需 的 参数 存放 在 联系 对象 参数表 Table1001 中 ， 其 控制参数 除了 发出 成员 、 接收 成员 外 还 可 根据 需要 设置 任务 开始 时间 、 最后 期限 、 任务 完成 指标 、 所 要 调用 的 任务 处理 方法 名 等 （ 这里 用 参数 1 、 2 代表 ） ， 协作 顺序 为 A — B — D 。 当 情况 变化 需要 调整 流程 时 可 通过 修改 参数表 、 任务 列表 、 方法 库 等 来 完成 。 如 ： 新增 成员 C 代替 成员 D 来 完成 最后 一道 工序 ， 则 修改 参数 2 中 的 接收 成员 ； 需要 D 成员 提前完成 生产 任务 ， 则 修改 D 的 任务 开始 时间 、 最后 期限 等 ； 要求 成员 D 改变 生产工艺 ， 则 修改 D 的 任务 处理 方法 。 只要 这些 修改 在 （ B ， D ） 联系 对象 生成 前 进行 ， 都 可以 实现 动态 调整 。 
 
 图 1 　 动态 协作 机制 的 实现 
 2.4 　 工作 流 复杂 流程 的 实现 
 　 　 为 联系 类 增加 一些 控制参数 就 可以 实现 复杂 的 工作 流程 。 要 实现 同步 协作 （ 如 ： A 、 B 均 向 C 传递信息 后 ， C 才 向 D 传递 ） 增设 表示 某 联系 对象 （ C ， D ） 发出 成员 的 前序 联系 对象 数目 参数 ， 当 所有 这些 前序 联系 对象 （ A ， C ） （ B ， C ） 都 结束 活动 时 ， 才 允许 创建 该 联系 对象 ； 要 实现 循环 流程 的 描述 和 任务 的 转换 （ 如 ： A 将 报表 交给 B ， B 将 其 传给 C 审阅 ， 之后 传回 给 B 交由 D 保存 ） ， 就 为 各 成员 对象 增加 一个 表示 第几次 被 访问 到 的 参数 ， 将 循环 访问 展开 成为 线性 访问 （ A — B1 — C — B2 — D ） ， 并 为 每次 访问 指定 不同 的 任务 处理 方法 ； 要 启动 不同 的 子 工作 流 （ 如 ： A 将 信息 传给 B ， B 根据 不同 条件 决定 将 其 传给 E 还是 F 进行 处理 ， 最终 结果 返回 给 B ， 由 其 继续 传给 D ） ， 则 将 成员 对象 （ B ） 的 任务 处理 方法 作为 工作 流 引擎 启动子 工作 流 ， 而且 根据 不同 情况 传给 任务 处理 方法 不同 参数 （ B ， E ） 或 （ B ， F ） 。 
 
 3 　 系统 分布 性 的 技术支持 
 　 　 动态 联盟 企业 的 各 成员 企业 地理位置 上 较为 分散 ， 各自 又 有 独立 的 信息系统 和 不同 的 硬件平台 ， 因此 随 动态 联盟 的 组建 而 构造 的 信息系统 既 要 满足 这种 分布 性 又 要 提供 与 外部 系统 的 通用 接口 。 Internet 的 发展 为 企业 提供 了 一个 理想 的 远程 协同工作 环境 ， 使 联盟 成员 的 选择 不 受 地域 约束 ， 更 无需 在 远程 网络 构建 上 追加 投资 。 面向对象 程序设计 语言 JAVA 通过 解释 字节 码 运行 程序 具有 跨平台 特性 ， 在 Web 浏览器 中 内嵌 一个 JAVA 虚拟机 就 可以 解释 执行 从 Internet 上 远程 下载 的 JAVA 字节 码 ， 因此 用 JAVA 编写 本 系统 能够 很 好 的 支持 动态 联盟 企业 的 信息 传递 和 远程 控制 。 公共对象 请求 代理 体系 （ CORBA ） 是 对象 管理 组织 （ OMG ） 制定 的 分布式 对象 计算 的 一套 规范 。 CORBA   的 实现 提供 了 分布 异构 的 互操作 计算环境 ， 也 提供 了 开发 可 重用 软件 的 基础 。 由于 JAVA 虚拟机 并 不 支持 下载 的 Applet 和 其它 分布式 对象 间 的 通讯 ，   JAVA   和 CORBA   的 结合 是 解决 这一 问题 的 理想 方案 ， 它 能 支持 Web 浏览器 中 运行 的 Java   Applet 与 其它 CORBA   对象 的 通讯 ， 而 这些 对象 可以 用 其它 语言 编写 ， 此 通讯 访问 通过 CORBA 的 中间件 Oblet   （ 用 JAVA 语言 编写 ） 来 提供 。 利用 这些 技术 ， 动态 联盟 企业 信息系统 通过 Internet 既 可 实现 整个 系统 在 各 分布 结点 上 的 互操作 ， 又 可 实现 各 分布 结点 上 的 从属 系统 （ 内部 系统 ） 与 联盟 成员 原有 系统 （ 外部 系统 ） 间 的 互操作 。 
 4 　 动态 联盟 企业 信息系统 模型 构架 
 　 　 动态 联盟 企业 是 由 盟主 企业 发动 组建 的 ， 它 根据 机遇 产品 的 资源 需求 负责 设定 企业 模型 、 选择 联盟 成员 、 确定 协作关系 、 动态 调整 流程 等 工作 ， 而 一般 的 联盟 成员 之间 没有 控制关系 ， 都 是 以 盟主 为 协调 中心 接收 任务 形成 协作 的 ， 因此 本 系统 模型 分 为主 系统 和 从属 系统 两 部分 ， 分别 由 盟主 和 一般 联盟 成员 使用 。 主 系统 由 整个 系统 的 控制中心 和 盟主 成员 相关 部分 组成 ， 从属 系统 则 由 各 联盟 成员 相关 部分 和 与 外部 系统 的 接口 组成 。 盟主 成员 利用 主 系统 将 生产 计划 、 订单 跟踪 、 文件 传阅 等 定义 成 各种 工作 流程 ， 这些 工作 流 启动 后主 系统 将 自动控制 协调 各 从属 系统 的 运作 ， 同时 盟主 成员 可 随时 对 各 流程 进行 管理 监控 修改 。 主 系统 对应 实际 流程 中 的 这 三个 阶段 相应 分为 过程 定义 、 过程 执行 、 管理 监控 三个 组成部分 。 一般 的 联盟 成员 则 负责 将 生产 信息 输入 约定 格式 的 数据库 中 ， 由主 系统 通过 Internet 调用 本 从属 系统 中 成员 对象 的 方法 实现 信息 传递 、 生产 调度 、 紧急通知 等 任务 。 动态 联盟 企业 信息系统 模型 构架 ( 见图 2 ) 及 说明 如下 ： 
 
 图 2 
 4.1 　 过程 定义 说明 
 　 　 成员 对象 描述 就是 选择 适当 的 成员 类 生成 成员 对象 ， 将 真实 联盟 成员 的 具体 信息 保存 在 其中 ； 成员 选择 则 是 根据 伙伴 选择 策略 平衡 动态 联盟 的 各项 核心 资源 ， 决定 联盟 成员 最优 组合 并 存入 联盟 成员 表 （ 包含 成员 间 相互 联系 的 基本 信息 ， 如 各 从属 系统 所在 主机 IP地址 等 ） ； 联系 设置 包括 由 用户 为 一 特定 工作 流程 设置 一组 联系 ， 将 联盟 成员 用 有 向 线段 连接起来 ， 选择 联系 类型 ， 设置 各 联系 参数 ， 并 由 系统生成 该 工作 流 的 联系 对象 参数表 ； 主从 系统 分离 指 的 是 将 各 成员 对象 和 与 之 相关 的 方法 库 和 任务 列表 从 全局 方法 库 和 全局 任务 列表 中 复制 出来 集成 在 一起 ， 配以 用户 接口 、 外部 接口 以及 联盟 成员 表等 分别 构成 若干 从属 系统 交由 各 联盟 成员 在 本地 使用 ， 盟主 成员 对象 和 系统 主控 部分 集成 为主 系统 。 
 4.2 　 过程 执行 说明 
 　 　 工作 流 引擎 用来 依据 预定 条件 自动 判断 或 人工 启动 某一 工作 流 ， 创建 该 工作 流 实例 ； 工作 流 日志 记录 负责 记录 每个 工作 流 的 执行 过程 及 返回 的 状态参数 ， 存入 工作 流 日志 ； 自动 例外 处理 则 提供 一些 标准 程序 对 工作 流程 中 的 例外 自动 进行 处理 。 
 4.3 　 管理 监控 说明 
 　 　 工作 流 监测 是 指 允许 有 权限 的 用户 查看 相关 工作 流 运行 情况 并 提供 一些 辅助 分析 工具 进行 工作 流 执行 情况 的 分析 ； 工作 流 修改 包括 用户 对 联盟 成员 的 调整 （ 由 系统 修改 联盟 成员 表 、 成员 对象 、 成员 权限 表 ） ， 工作 流 过程 和 控制 的 调整 （ 由 系统 修改 联系 对象 参数表 ） ， 工作 流 任务 项 调整 （ 由 系统 查询 任务 列表 ， 修改 全局 任务 处理 方法 库 ） ； 由于 修改 工作 流 的 任何 环节 或 系统 运行 后 在 过程 定义 工具 中 定义新 的 工作 流 ， 其 改变 都 只 体现 在 主 系统 中 ， 这时 由 从属 系统 版本控制 通知 与 变更 工作 流 有关 的 从属 系统 下载 复制 新 版本 系统 。 
 
 5 　 结论 
 　 　 动态 联盟 企业 作为 21 世纪 最有 竞争力 的 企业 运行 模式 ， 既 是 具有 先进 生产 管理 技术 的 企业 提高 竞争力 的 法宝 ， 也 是 一些 技术 层面 单一 、 生产能力 有限 的 企业 参与 现代化 市场竞争 的 机遇 ， 它 帮助 企业 充分利用 内外 优势 资源 生产 高新技术 产品 并 达到 一定 的 规模 效应 ， 从而 在 全球化 市场竞争 中 取得 一席之地 。 动态 联盟 企业 信息系统 为 这样 一种 新型 企业 构造 了 信息 支撑 环境 ， 实现 了 复杂 工作 流程 的 动态 重构 与 重用 。 随着 对 仿真 优化 、 决策 支持 以及 智能化 的 工作 流 管理系统 的 深入研究 ， 本 系统 的 功能 将会 得到 进一步 加强 。 
 作者简介 ： 王凯 　 硕士 研究生 。 主要 研究 方向 ： 经济 信息管理 。 
 白庆华 　 教授 ， 博士生 导师 。 主要 研究 方向 ： 管理 工程 、 经济 信息管理 。 
 作者 单位 ： 同济大学 经济 与 管理 学院 　 上海 （ 200092 ） 
 参考文献 
 ［ 1 ］ 　 徐晓飞 ， 等 .   动态 联盟 企业 组织 方法 体系 .   计算机 集成 制造 系统 ， 1999 ， 2 
 ［ 2 ］ 　 石 　 伟 ， 等 .   分布 对象 环境 下 工作 流 执行 系统 设计 .   计算机 集成 制造 系统 , 1998 ， 12 
 ［ 3 ］ 　 史 美林 ， 等 .   wfms ： 工作 流 管理系统 .   计算机 学报 ， 1999 ， 3 
 ［ 4 ］ 　 叶 　 丹 ， 等 .   动态 联盟 企业 的 模型 化 及其 工具 系统 .   计算机 集成 制造 系统 ， 1999 ， 2 
 ［ 5 ］ 　 WfMC . The   workflow   reference   model , 1994 
 ［ 6 ］ 　 吴 　 刚 ， 等 .   ActiveX 与 CORBA / IIOP 的 比较 .   计算机 工程 与 应用 ， 1999 ； 35 ( 11 ) 
 收稿 日期 : 1999 - 06 - 06 ( 修改稿 ) 
