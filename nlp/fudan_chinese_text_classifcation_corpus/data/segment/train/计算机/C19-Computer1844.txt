微型机 与 应用 
 MICROCOMPUTER   &   ITS   APPLICATIONS 
 2000   Vol.19   No.2   P.50 - 52 
 
 
 
 
 索引 软件 与 语料库 语言学 
 陈明瑶 
 摘   要 ：   索引 软件 的 工作 原理 、 主要 功能 以及 索引 软件 在 计算机 语料库 中 的 应用 ， 包括 在 语言学 、 英语教学 研究 中 的 应用 。 
 关键词 ：   索引 软件   语料库   词形 检索 
 　 　 索引 软件 是 用于 开发 与 分析 计算机 语料库 的 计算机程序 。 语料库 是 指 存放 原始 语言 材料 的 数据仓库 。 语料库 语言学 就是 利用计算机 语料库 的 原始 素材 对 语言 的 某个 方面 进行 研究 ， 或 对 现有 的 语言学 理论 进行批评 、 修正 。 现代 语料库 语言学 得以 迅速 发展 ， 索引 软件 的 作用 功不可没 。 1959 年 ， R ．   Quirk 着手 建立 的 “ 英语 用法 ” 语料库 及 1961 年 N ．   Francis 和 H ．   Kucera 为首 的 一批 语言学家 和 计算机 专家 共建 的 布朗 语库 即 是 现代 语料库 索引 软件 的 发祥地 。 
 1   索引 软件 的 原理 与 功能 
 1 ． 1   索引 、 索引 大全 、 索引 软件 
 　 　 索引 （ index ） 一般 是 全书 的 一小部分 ， 附在 书后 ， 将 著作 中 主要 词语 按 字母 顺序排列 ， 并 注明 在 书 中 出现 的 页码 。 索引 大全 （ concordance ） 与 索引 的 不同之处 在于 索引 大全 同时 提供 中心词 所在 的 上下文 的 一部分 。 如果 要 查找 具体 的 引证 ， 则 索引 大全 要 有用 得 多 ， 但 同时 也 需要 更 多 的 篇幅 ， 因此 索引 大全 通常 是 独立 的 著作 。 索引 软件 可 将 语料库 中 各 词形 出现 的 全部 场合 在 屏幕 上 显现出来 或 打印 出来 。 索引 软件 与 索引 大全 有 几个 显著 的 不同 ： 
 　 　 （ 1 ） 索引 软件 所 检索 到 的 信息 是 动态 的 ， 内容 是 可以 扩展 的 。 它 不但 能 检索 出 输入 到 计算机 中 的 文本 所含 的 全部 词形 ， 而且 其 出现 频率 以及 在 原文中 的 地址 也 一目了然 。 确定 查找 某一 词形 的 上下文 时 ， 该 词形 所在 的 行 就 在 屏幕 上 同时 显示 。 要 更 深入 地 观察 某 一同 现行 的 上下文 时 ， 该 词形 所在 的 原文 又 可 扩展 到 原句 、 原段 并 显现出来 。 
 　 　 （ 2 ） 查到 所 需要 的 内容 后 ， 处理 方便 。 既 可 在 屏幕 上 观察 ， 又 可 打印 出来 进一步 研究 。 还 可以 存盘 再 处理 ， 或 写 到 其它 的 文件 中 去 ， 节省 了 许多 抄写 、 再生 的 环节 。 
 　 　 （ 3 ） 计算机所 能 处理 和 储存 的 信息量 很大 。 对 输入 的 语料 不 需要 删略 语法 功能 词 或 高频词 。 不但 可以 查词 和 词语 ， 还 能查 语法结构 、 语法 类型 ， 扩大 了 研究 的 范围 。 
 1 ． 2   工作 原理 
 　 　 建立 计算机 语料库 ， 输入 的 文本 一般 为 很 简单 的 形式 ： 一串 字母 、 空格 或 标点 ， 这些 统称 为 字符 ， 保留 大小写 的 区别 。 页 号 与 行号 也 保留 ， 作为 参考 。 排版 格式 、 字体 号 等 内容 则 删掉 。 
 　 　 索引 软件 对 1 个 词 的 定义 ， 在 英文 里 以 符号串 之间 的 空格 作 标志 。 每 2 个 空格 之间 的 字符串 称为 1 个 标形 （ token ） 。 相同 的 标形 被 视为 同一 类型 （ type ） ， 即 词形 （ form ） 。 词尾 的 变化 一般 不 归入 某一词 的 原形 之下 。 例如 come 一词 ， 它 的 几种 形式 （ come    comes    came    coming ） 被 作为 4 个 词形 对待 。 对 同形异义 词 ， 在 没加 词类 标记 或 语法 标记 的 语料库 中 ， 被 作为 同一 词形 对待 。 用 分割 号 隔开 的 一些 省略 用法 ， 如 you ＇ d    we ＇ ll    can ＇ t 等 ， 均 被 作为 单一 的 词形 对待 。 这 在 实际 分析 语料 时 很 有用 。 
 　 　 输入 到 语料库 中 的 文本 通常 以 ASCII 码 形式 储存 。 
 　 　 文本 被 数字化 以后 ， 程序 可以 自动 给 文本 的 每 一个 标形 建立 1 个 索引 数据 ， 并 把 每 一个 标形 与 它 所在 的 上下文 中 的 地址 （ address ） 联系 起来 ， 把 与 每个 标形 共同 出现 的 索引 行 确定 或 产生 出来 待查 。 索引 程序 将 建立 的 索引 数据 的 文本 按 一定 顺序 重新 分类 排序 ， 以便 查找 。 
 　 　 发出 检索 某一 词形 的 指令 后 ， 由 索引 软件 辨认出 构成 该 词形 的 所有 标形 及 地址 ， 把 与 这些 标 形同 现 的 索引 行 并 写 在 一个 外部 文件 上 。 并 将 索引 出来 的 行 分类 该 文件 每行 长度 最多 可达 130 个字符 。 根据 需要 可 集中 显示 或 打印 出来 。 
 　 　 要 完成 上述 检索 ， 借助 数据库 的 SQL 指令 即 可以 得到 解决 。 SQL 中 最 重要 的 指令 之一 是 SELECT ， 其 基本 格式 为 ： 
 　 　 SELECT 〈 选择 项目 〉 
 　 　 FROM 〈 数据库 ｛ ， 数据库 ｝ 〉 
 　 　 [ WHERE 〈 选择 的 条件 〉 ］ 
 　 ［ ORDER   BY 〈 递升 排列 ｜ 递降 排列 〉 ］ 
 　 ［ GROUP   BY   〈 域名 〉 ］ 
 　 　 HAVING 〈 入选 组 的 条件 〉  
 　 　 虽然 DBMS 技术 本身 已经 很 成熟 ， 但 在 语料库 处理 中 运用 时 ， 还 应 按 语言学 的 实际 需要 加以 选择 ， 并 进行 必要 的 修改 ， 才能 收到 令人满意 的 效果 。 例如 ， 面向 语料库 数据检索 的 SELECT 指令 可定义 为 ： 
 　 　 CSELECT 〈 选择 项目 〉 
 　 　 FROM 〈 语料库 ｛ ， 语料库 ｝ 〉 
 　 　 WHERE 〈 语言 现象 条件 〉  
 　 　 ［ ORDER   BY   〈 排序 要求 〉 ］ 
 　 　 ［ GROUP   BY   〈 归组 要求 〉 ］ 
 　 　 ［ HAVING 〈 入选 组 的 条件 〉 ］ 
 　 　 该 语料库 信息检索 语句 叫做 CSELECT （ CSELECT 是 CORPUS   SELECT 的 简称 ） 。 下面 逐条 加以 解释 。 
 　 　 “ WHERE 〈 语言 现象 检索 条件 〉 ” 子句 由 关键词 “ WHERE ” 和 表示 目标语言 现象 的 条件 的 参数 组成 。 这种 条件 可以 是 （ 出现 ） 某个 单词 、 短语 或 句型 等 ， 也 可以 是 这些 简单 条件 （ 或 它们 的 数学 函数 ） 的 逻辑 表达式 。 
 　 　 为了 提高 语言 现象 的 表达能力 和 实际 应用 上 的 方便性 ， 可 直接 采用 UNIX ， Windows 和 DOS 等 广泛 使用 的 大家 所 熟悉 的 字符 统配 符 “ ？ ” 和 “ * ” 。   
 　 　 在 分词 连写 的 语料库 中 ， 单独 1 个 “ * ” 会 匹配 1 个 词 ， 而 “ a * ” 或 “ 大 * ” 将 匹配 以 英文字母 “ a ” 或 汉字 “ 大 ” 开头 的 词 。 为了 进一步 满足 语言学 研究 的 需要 ， 可以 增加 1 个 表示 单词 串 和 短语 的 统配 符 “ ＃ ” ， 用来 匹配 以 分词 符号 （ 常为 空格 ） 分开 的 单词 串 （ 不 含 标点符号 ） 。 
 　 　 统配 符加 自然数 （ 1 、 2 、 3 、 … ） 则 表示 统配 符 变量 。 如 “ ＃ 1 ” 和 “ ＃ 2 ” 是 2 个 单词 串 变量 ， “ * 1 ” 和 “ * 2 ” 表示 2 个 单词 变量 ， 而 “ ？ 1 ” 和 “ ？ 2 ” 则 表示 2 个单 字符 变量 。 因此 ， 下面 的 中文 和 英文 短语 类型 ： 从 … 经 … 到 … ， from … via … to …   可 方便 地 表示 为 ： 
 　 　 从 1 经 ＃ 2 到 ＃ 3 ， from ＃ 1via ＃ 2to   ＃ 3 。 还 可以 像 DBMS 一样 ， 通过 数学 函数 和 逻辑运算 将 这些 表示 词 、 短语 或 句型 的 简单 条件 结合 成为 表达力 更强 的 语言 现象 表达式 ， 例如 ： 
 　 “ （ * 1er ） AND   （ LENGTH （ * 1 ） Q4 ） ” 表示 以 英语 er 结尾 ， 长度 等于 或 小于 4 个 字母 的 词 。 可 供 语料库 处理 直接 使用 的 数据库 函数 有 ： COUNT （ 表示 某 语言 现象 的 实例 的 个数 ）   LENGTH   （ 词 或 词串 的 长度 ） AVERAGE （ 平均值 ） 等 ， 常用 的 逻辑运算 有 ： AND （ 与 ）   OR （ 或 ）   NOT （ 非 ） 等等 。 
 　 　 “ CSELECT 〈 选择 项目 〉 ” 子句 用来 表示 对于 目标语言 现象 在 语料库 中 的 每次 出现 ， 应 抽取 多大 范围 的 上下文 来 组织 索引 表 。 常用 的 〈 选择 项目 〉 有 ： 
 　 　 ± N ： 满足条件 的 语言 现象 及其 左右 各 N 个字符 
 　 　 line ： 语言 现象 所在 的 文字 行 
 　 　 sentence ： 语言 现象 所在 的 整个 句子 
 　 　 根据 语料 的 结构 〈 选择 项目 〉 也 可用 某些 模式 （ pattern ） 来 表示 ， 如 
 　 　 ［ … ］ ： 包括 目标语言 现象 的 最小 方括号 及其 内容 
 　 　 ［ NP … ］ ： 包括 目标语言 现象 的 最小 名词 短语 及其 内容 
 　 　 这 对于 做 了 语法 标注 的 语料库 检索 来说 是 很 有用 的 。 〈 选择 项目 〉 中 也 可 采用 数学 函数 ， 对 查出 的 语言 现象 作 统计 处理 。 如 
 　 　 SELECT   COUNT （ 大 * ） 
 　 　 表示 输出 目标 词形 “ 大 * ” 的 出现 次数 。 
 　 　 “ FROM ” 子句 用语 指定 语料库 查寻 范围 。 这 可能 包括 语料库 中 的 特定 部分 ， 也 可能 包括 整个 语料库 或 一组 语料库 。 
 　 　 “ ORDER   BY ” 子句 规定 如何 将 检索 出来 的 索引 项目 加以 排列 。 一般 是 按 某种 语言 特征 作正序 或 倒叙 排列 。 
 　 　 “ GROUP   BY ” 子句 规定 如何 将 检索 出来 的 索引 项目 分组 ， 如 按 某个 词 的 词形 进行 分组 。 
 　 　 最后 1 个子 句 ， 即 “ HAVING ” 子句 ， 给出 合格 组 别的 选择 条件 是 对 “ GROUP   BY ” 子句 的 处理结果 的 进一步 筛选 。 
 　 　 我们 还 可以 像 传统 的 数据库 那样 ， 通过 建立 检索 索引 （ indexes ） ， 进一步提高 语料库 系统 的 效率 。 这样 ， 语料 信息检索 就 可以 分 2 步来 做 ： 
 　 　 （ 1 ） 通过 索引 表 （ 可 由 计算机 自动 产生 ） ， 找到 含有 目标语言 现象 的 文本文件 ； 
 　 　 （ 2 ） 遍历 这些 文件 找出 所要 的 语言 信息 。 
 1 ． 3   主要 功能 
 　 　 利用 索引 软件 所 进行 的 最 简单 形式 的 索引 是 位置 索引 。 它 指明 构成 某个 词形 的 各个 标形 在 文本 中 的 出现 位置 。 同时 也 能 提供 该 词形 的 出现 频率 。 第二种 是 以行 的 形式 索引 。 它 适合 诗歌 、 诗 歌剧 的 文本 。 其 各行 长度 相仿 ， 一行 足以 表明 某词 的 作用 。 
 　 　 最 有用 也 是 最 常用 的 索引 形式 ， 是 关键词 带 上下文 的 定位 行 索引 （ Key   Word   in   Context    简称 KWIC ） 。 要 考察 的 关键词 形 与其 上下文 同时 出现 。 上下文 的 长度 可以 根据 需要 调整 设定 。 如 ＋ 6 表示 左右 各有 6 个 词 。 最 有用 的 是 在 关键词 的 右边 ， 按 字母 顺序排列 各同 现行 的 下文 。 这种 排法 突出 了 中心词 引起 的 词组 。 另 一种 排序 法 ， 是 将 关键词 左边 的 上文 按 最末 一个 字母 的 顺序排列 。 当 中心词 是 动词 时 ， 这种 排序 法常能 迅速 地 找出 动词 的 主语 ， 从而 为 了解 主谓 搭配 和 篇章 的 主题 提供 有用 的 线索 。 上下文 也 可以 按照 出现 的 频率 从 高到 低 排列 ， 把 与 关键词 最 常 出现 的 词形 首先 集中 同现 。 这 对 研究 英语 词语 的 搭配 极其 有用 。 
 　 　 对 语料库 中 的 高频词 ， 可以 用 取样 索引 的 方法 ， 缩小 样本 。 例如 索引 某词 时 将 参数 定为 每 10 行 索引 一处 ， 就 将 该词 的 索引 样本 缩小 到 原来 的 1 ／ 10 。 
 　 　 利用 通配符 （ * ） 可 查找 与 某 一词 的 原形 有关 的 其它 词形 。 
 　 　 利用 组合 逻辑 （ Combination   Logic ） 和 “ with ／ n ” 操作符 ， 还 能 检索 出 与 词组 ， 短语 ， 词 的 搭配 以及 关键词 有关 但 被 其它 词 隔开 的 上下文 。 有些 索引 软件 ， 还 可以 进行 布尔 组合式 检索 （ Boolean   Combination ） ， 即 逻辑性 检索 。 例如 ， 将 2 个 反义词 （ hot ／ cold    fire ／ water 等 ） 各自 所在 的 全部 句子 同时 检索 出来 加以 对比 ， 或 将 具有 逻辑关系 的 词 （ 如 and ／ or ） 连同 上下文 同时 检索 出来 加以分析 。 还有 的 索引 软件 可以 检索 各类 词缀 。 
 　 　 对加 了 词类 标记 或 语法 标记 的 语料库 ， 索引 软件 可以 查找 在 未 分析 过 的 语料库 中 无法 查找 到 的 一些 语法 现象 。 如不带 to 的 不定式 结构 ， 各种 从句 ， 同位语 结构 等 ， 为 研究 语法 提供 了 方便 。 
 2   索引 软件 的 应用 
 　 　 借助于 计算机 的 强大 计算 与 信息处理 能力 ， 索引 软件 可以 快速 地 从 计算机 语料库 中 检索 到 所 需要 的 内容 ， 并 可 将 它 与 所在 的 语言 环境 一起 观察 ， 或 与 相关 的 语言 现象 对比 研究 ， 有 巨大 的 使用 价值 ， 在 文学 、 语言学 和 英语教学 等 方面 得到 了 越来越 广泛 的 应用 ， 产生 了 丰富 的 成果 。 
 2 ． 1   在 语言学 研究 方面 的 应用 
 　 　 Leech ［ 3 ］ 指出 ， 以 计算机 为 基础 进行 研究 的 最 简单 、 用得 最广 的 工具 ， 就是 索引 程序 。 典型 的 范例 是 ： 
 　 　 （ 1 ） 词汇学 研究 。 辨明 某 词汇 项 在 上下文 中 的 含义 和 与 该词 用法 有关 的 其它 特征 ， 如 句法 、 文体 、 语用 特征 。   
 　 　 （ 2 ） 归纳 型 语法 研究 。 辨认 并 归纳 出某 语法 项 或 结构 在 句法 、 语义 、 语用 、 语体 方面 的 典型 例子 。 标有 词类 和 句法 的 语料库 更 适合 这一 目的 。 
 　 　 词汇学 方面 ， Fillmore  2  研究 了 risk 一词 的 用法 。 方法 是 ： （ 1 ） 比较 10 本 英语词典 的 解释 ， 归纳 出 risk 的 3 种 得到 解释 的 用法 。 （ 2 ） 从 1 个 含 2500 万词 的 英语 语料库 中 ， 检索 出 含有 risk 一词 的 全部 例句 （ 1743 句 ） 并 分析 研究 ， 发现 了 词典 中 没有 解释 到 的 risk 与 in    on    to 连用 的 例子 。 
 　 　 辞典 学 方面 ， Atkins 和 Levin ［ 1 ］ 比较 了 牛津 英语 语料库 1 个 5000 万词 分 库里 1 组与 shake 有关 的 同义词 （ shake    quake    shiver    shudder    tremble    vibrate ） 的 用法 ， 然后 将 归纳 出来 的 结果 ， 与 3 本 重要 的 英语 辞典 （ OALD    LDOCE    Cobuild ） 的 解释 作 了 比较 。 发现 ： （ 1 ） 被 认为 无例外 地作 不 及物动词 用 的 5 个 词 （ quanke    quiver    shiver    shudder    tremble ） 都 至少 在 语料库 中 用作 及物动词 一次 以上 。 （ 2 ） 这 3 种 词典 对 这 7 个 同义词 的 解释 缺少 系统性 。 
 　 　 词语 搭配 方面 ， Cobuild 搭配 词典 的 出版 ， 是 利用 索引 软件 和 统计 软件 研究 语料库 中 词语 的 搭配 的 突出 范例 。 另外 ， Sinclair  4  在 对 of 一词 搭配 的 研究 的 基础 上 ， 对 它 的 词类 归属 提出 了 质疑 ， 认为 不 应该 将 它 归 为 介词 。 因为 其它 的 介词 一般 位于 名词 前 ， 构成 起 从句 修饰 作用 的 介词 短语 。 而 of 则 对于 它 前面 的 名词 更 敏感 。 
 　 　 句法 方面 ， 用 索引 出来 的 上下文 ， 归纳 关键词 所在 句子 的 句法结构 相当 便利 。 
 2 ． 2   在 英语教学 方面 的 应用 
 　 　 在 英语教材 编写 方面 ， Biber 等 人 曾 对 “ 名词 ＋ 后置 修饰语 ” 的 结构 进行 了 研究 。 他们 先 统计 了 80 年代 的 4 本 英语语法 书中 对 这 一 结构 的 处理 篇幅 ， 发现 各书 重点 相同 ， 均 把 关系 从句 作为 中心 ， 讨论 的 篇幅 合计 60 页 。 “ 名词 ＋ 介词 短语 作 修饰语 ” 的 结构 最不受 这些 书 的 重视 ， 篇幅 合计 不足 5 页 。 
 　 　 用 索引 软件 对 LOB 英语 库 和 1 个 含有 11 ． 5 万词 的 私人 信函 库 的 检索 却 表明 ， “ 名词 ＋ 介词 短语 作 修饰语 ” 的 结构 ， 比 “ 名词 ＋ 从句 ” 的 结构 的 使用 频率 高得 多 ： 每千词 中 二者 的 比例 是 23 ． 4 ： 5 ． 5 ， 而且 已有 研究 表明 ， “ 名词 ＋ 介词 短语 ” 的 结构 对 英语 学生 是 一种 困难 结构 。 
 　 　 这 说明 教学 性 的 语法 书 对 语言 现象 轻重缓急 的 处理 ， 常常 不 符合实际 使用 情况 。 在 编写 这 类 教材 时 ， 不但 应该 考虑 语言 现象 的 难易 程度 和 可教性 ， 而且 应该 把 它 在 实际 使用 中 的 情形 考虑 进去 。 
 3   结   论 
 　 　 索引 软件 毕竟 只是 一种 工具 ， 计算机化 的 语料库 才 是 基础 。 语料库 的 大小 与 取样 的 代表性 ， 直接 影响 并 决定 索引 结果 。 Fillmore 在 研究 risk 一词 的 用法 时 ， 尽管 从 含 2500 万词 的 1 个 语料库 中 得到 了 全部 例句 ， 却没能 说明 run   the   risk 与 take   the   risk 的 区别 的 例句 。 他 用 想象 的 例句 才 说明 了 二者 的 区别 。 因此 语料库 只能 提供 材料 ， 索引 软件 极大 地 便利 提取 材料 的 过程 ， 当然 决不能 代替 语言学家 自身 的 思考 与 分析 。 
 陈明瑶 （ 宁波大学 外语学院  315211 ） 
 参考文献 
 1 ， Atkins   B   T   S ， Beth   L ． Building   on   a   Corpus ：   A   Linguisitic   and   Lexicographical   Look   at   Some   Near   Synonyms ． In －   ternational   Journal   of   Lexicography ，   1995 ； 8 （ 2 ） ： 85 
 2 ， Fillmore    Charles   J ．   Corpus   Linguistics   or   Computer －   aided   Armchair   Linguistics ． in   Jan   Svaetvik   （ ed ）   Directions   in   Corpus   Linguistics  Mouton   De   Gruyter ， 1992 ： 35 
 3 ， Leech   G ．   Corpura   and   Theories   of   Linguistic   Perfor －   mance ，   in   Jan   Svartvik   （ ed ）   Directions   in   Corpus   Linguistics ，   Mouton   De   Gruyter ， 1992 ： 105 
 4 ， Sinclair   J ， 1991 ． Corpus ， Concordance ， Collocation ．   Oxford ， 1991 
 收稿 日期 ： 1999 － 10 － 12 
