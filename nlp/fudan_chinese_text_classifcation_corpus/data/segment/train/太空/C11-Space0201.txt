宇航学 报 
 JOURNAL   OF   ASTRONAUTICS 
 1999 年 　 第 1 期 　 No.1 　 1999 
 
 
 
 　 一种 新 的 硬 / 软件系统 可靠性 分析方法 *  
 饶 　 岚 　 王占林 　 李沛琼 　 姚一平 
 　 　 摘 　 要 　 在 一种 新 的 软件可靠性 分析方法 基础 上 , 参考 硬件 系统 阶段性 任务 可靠性 的 建模 方法 , 为 在 对于 不可 修 的 计算机系统 进行 可靠性 分析 时 考虑 硬 、 软件 之间 复杂 的 相关 作用 提出 了 一套 比较 全面 的 解决办法 。 从而 为 更 准确 地 评估 计算机系统 可靠性 提供 了 可能 。 文中 分析 了 一个 飞行 控制系统 实例 。 
 　 　 主题词 　 硬 / 软件系统 可靠性 　 硬 、 软件 相关性 　 阶段 任务 性 　 建模 
 A   NEW   ANALYSIS   METHODOLOGY   
 OF   HARDWARE / SOFTWARE   SYSTEMS 
 Rao   Lan 
 ( Tsinghua   University ． Beijing ． 100084 ) 
 Wang   Zhanlin   Li   Peiqiong   Yao   Yiping 
 ( Beijing   Univ . of   Aeronautics   &   Astronautics ． Beijing ． 100083 ) 
 　 　 Abstract 　 A   new   analysis   methodology   of   Hardware / Software   reliability   is   presented   in   this   paper , based   on   a   new   analysis   method   of   software   systems '   reliability   and   hardware   phased - mission   reliability   analysis   method . It   enables   consideration   of   complex   interplay   between   hardware   and   software , and   then   more   accurate   assessment   of   computer   systems . A   real   Flying - By - Wire   system   is   analyzed   here . 
 　 　 Key   words 　 Hardware / Software   system   reliability   Interplay   of   hardware   and   software   Phasedmission   Modeling 
 1 　 简介 
 　 　 本文 基于 ［ 1 ］ 的 工作 , 参考 硬件 系统 阶段性 任务 可靠性 的 建模 方法 , 为 在 对于 不可 修 的 计算机系统 进行 可靠性 分析 时 考虑 硬 、 软件 之间 的 复杂 的 相关 作用 提出 了 一套 比较 全面 的 解决办法 。 从而 为 更 准确 地 评估 计算机系统 可靠性 提供 了 可能 。 
 　 　 文章 第二 部分 研究 对于 不可 修 的 硬 / 软件系统 进行 考虑 硬 / 软件 之间 的 相关性 的 可靠性 分析 的 方法 。 第三 部分 通过 对 一个 FBW ( 电传 飞行 操纵 ) 系统 实例 的 分析 , 显示 了 该 方法 的 实施 过程 以及 新 建模 方法 相对 于 以往 方法 的 合理性 。 文章 最后 对本 方法 进行 了 讨论 。 
 2 　 考虑 相关性 的 硬 / 软件系统 可靠性 建模 分析方法 
 2.1 　 硬 / 软件 相关性 描述 
 2.1 . 1 　 功能 相关性 的 描述 — — 接口 故障 的 引入 
 　 　 由于 硬 、 软件 之间 存在 功能 相关性 , 致使 接口 故障 不可避免 地 产生 。 而 它 既 不 属于 硬件 故障 , 也 不 属于 软件 故障 。 为了 完整 地 描述 系统 的 故障 行为 , 必须 引入 接口 故障 。 
 2.1 . 2 　 运行 相关性 的 描述 
 　 　 如果 根据 硬 、 软件 的 运行 功能 图能 划分 出 足够 的 中间 任务 阶段 状态 , 来 区分 系统 的 不同 运行 情况 , 自然 地 , 运行 相关性 就 得到 了 描述 。 
 2.1 . 3 　 故障 相关性 的 描述 
 　 　 同样 , 故障 的 发生 也 会 使 系统 前后 的 工作 状态 发生变化 , 从而 引起 相应 的 参数 发生变化 。 同样 可以 设立 足够 的 中间 阶段 状态 进行 描述 。 共因 故障 是 一类 较 复杂 的 故障 , 我们 将 其 作为 一类 系统 级 的 故障 因素 单独 提出 来 进行 描述 。 
 2.2 　 硬 / 软件系统 的 阶段性 
 2.2 . 1 　 阶段 分解 
 　 　 ［ 2 ］ 上 指出 , 虽然 计算机 发展 迅速 , 但 Von   Newmann 型 体系结构 的 二个 最 主要 的 特性 并 没有 被 突破 , 即 计算机 内部 信息 流动 是 由 指令 驱动 的 , 指令 执行 顺序 是 由 程序流程 和 指令 计算器 决定 的 , 而 条件 执行 语句 的 是否 执行 , 则 是 由 执行 条件 , 外部环境 、 系统 状态 , 以及 输入 数据 的 变化 等 因素 决定 。 一旦 这些 状态 发生变化 , 下 一步 执行 的 软件 部分 也 将 发生变化 , 即 不同 时间段 投入 运行 的 硬 / 软件 组成 部件 并 不 完全相同 , 而 这 是 由 软件系统 层次化 控制 流程 , 外部环境 、 系统 状态 , 以及 输入 数据 的 变化 等 因素 所 决定 。 因此 我们 可以 依据 软件 的 控制 流程图 来 划分 软件 运行 子系统 , 进而 决定 相应 的 支持 硬件 及其 逻辑关系 , 从而 形成 一个 阶段性 的 硬 / 软件 子系统 , 依据 系统 工作 状态 和 环境 负载 变化 决定 子系统 是否 执行 以及 执行 频率 , 这样 , 硬 / 软件系统 就 被 统一 地 分离 和 描述 了 。 
 2.2 . 2 　 阶段 内 的 状态 关系 
 　 　 考虑 到 软件 子系统 与 硬件 子系统 具有 同一时间 起点 , 即 在 同一 任务 阶段 内 , 它们 之间 是 串联 的 关系 。 如果 需要 , 接口 因素 、 软件系统 级 故障 、 共因 故障 等等 都 可以 分阶段 描述 。 对于 任何 阶段 , 这些 因素 发生 都 会 导致 这个 阶段 的 崩溃 , 因而 这些 因素 与 该 层次 的 其它 因素 之间 的 可靠性 关系 也 是 串联 的 关系 。 
 2.3 　 硬 / 软件系统 可靠性 建模 分析 
 2.3 . 1 　 建模 思想 
 　 　 根据 以上 的 分析 , 总结 硬 / 软件系统 可靠性 建模 分析 过程 如下 : 
 　 　 1 ) 首先 将 系统 的 任务 阶段性 明确 划分 出来 , 划分 的 标准 即 看 系统 的 每个 功能 
 　 　 a . 是否是 依 小于 1 的 概率 投入 运行 ; 和 
 　 　 b . 硬件 运行 构成 是否 在 运行 过程 中有 变化 。 
 　 　 c . 投入 运行 的 软件 部分 是否 在 运行 过程 中有 变化 。 
 　 　 2 ) 根据 软件 的 功能 , 依据 上述 划分 进行 功能 分解 , 设立 不同 的 系统 的 中间状态 ; 
 　 　 3 ) 将 支持 每个 任务 阶段 以及 本 阶段 任务 影响 到 软件 单元 和 硬件 部件 完整 地 准确 地 找 出来 , 弄清 它们 在 实现 可靠性 中 的 关系 , 形成 硬件 阶段 子系统 和 软件 阶段 子系统 ; 
 　 　 4 ) 系统 各个 任务 阶段 内 的 故障 事件 可以 分成 由 以下 几个 事件 组成 : 硬件 故障 事件 , 软件 故障 事件 , 接口 故障 事件 , 和 共 因 故障 事件 。 这些 故障 事件 即 可以 立即 导致系统 失效 也 可以 不 立即 导致系统 失效 。 但 系统 失效 状态 是 吸收 状态 。 
 　 　 5 ) 将 软件 子系统 和 相应 的 接口 特性 , 以及 共因 因素 作为 与 硬件 阶段 子系统 串联 的 虚拟 的 “ 硬件 部件 ” 与 硬件 阶段 子系统 一起 构成 一个 完整 的 阶段 子系统 ; 
 　 　 6 ) 将 一个个 阶段 子系统 依据 软件 控制流 图 构成 系统可靠性 框图 或 系统 状态 转移 图 ; 
 　 　 7 ) 将 软件系统 级 失效 原因 与 高层次 的 接口 因素 与 共 因 因素 同 上述 结果 串联 处理 ; 
 　 　 8 ) 获取 相应 的 参数 ; 
 　 　 9 ) 求解 系统 状态 转移 方程 , 求得 系统可靠性 指标 参数 。 
 2.3 . 2 　 基本 马氏 过程 模型 形式 
 　 　 下面 我们 推导 基于 马氏 过程 假设 的 系统可靠性 模型 。 
 2.3 . 2.1 　 假设 
 　 　 1 ) 系统 不可 修 ; 
 　 　 2 ) 系统 的 故障 状态 不 一定 是 吸收 状态 , 但 系统 的 失效 状态 是 吸收 状态 ; 
 　 　 3 ) 系统 各个 任务 阶段 的 故障 事件 由 以下 几个 事件 组成 : 硬件 故障 事件 , 软件 故障 事件 , 接口 故障 事件 和 共 因 故障 事件 。 每种 故障 即可 立即 导致系统 失效 , 也 可不 立即 导致系统 失效 。 
 　 　 4 ) 系统 任务 阶段 内 的 状态 转移 与 任务 阶段 之间 的 任务 转移 均 为 马氏 过程 ; 
 2.3 . 2.2 　 数学 标志 定义 及 模型 推导 
 　 　 我们 提出 下列 的 数学 标志 : 
 　 　 hjli : 第 j 个 硬件 元 部件 在 第 1 条 成功 链中 的 第 i 个 任务 阶段 的 状态 , hjli = 0 , 失效 , hjli = 1 , 正常 ; 因为 系统 不可 修 , 所以 当 k ＞ j 时 hkli ≤ hjli ; 
 　 　 suli : 第 1 条 成功 链中 第 i 阶段 软件 功能 单元 状态 , suli = 0 , 失效 , suli = 1 , 正常 ; 
 　 　 sfli : 第 1 条 成功 链中 第 i 阶段 软件系统 级 失效 因子 状态 , sfli = 0 , 失效 , sfli = 1 , 正常 ; 
 　 　 juli : 第 1 条 成功 链中 第 i 阶段 接口 单元 状态 , juli = 0 , 失效 , juli = 1 , 正常 ; 
 　 　 culi : 第 1 条 成功 链中 第 i 阶段 接口 单元 状态 , culi = 0 , 失效 , juli = 1 , 正常 ; 
 　 　 Sli : 在 第 1 条 成功 链中 第 i 阶段 的 系统 状态 集合 , Sli = { h1li , h2li , … , hmli , suli , juli , culi ) = { Skli } , li = 1 , 2 , … ; Skli 是 Sli 的 一个 具体 实现 , S = { Sli } , ; 
 　 　 Pkli ( t ) : 系统 在 时刻 t 时 处于 第 1 条 成功 链中 第 i 个 阶段 第 k 个 状态 的 概率 ; 
 　 　 Pli ( t ) = ［ P1li ( t ) , … , Pjli ( t ) , … ］ 
 　 　 P ( 0 ) : 系统 初始 阶段 的 状态 概率 向量 ; 
 　 　 R ( t ) : 系统 在 时刻 t 的 任务 可靠性 ; 
 　 　 C : 系统 成功 完成 任务 的 阶段 , C 可以 是 一个 向量 : C = ( C1 , … , Cj ) ; 
 　 　 Φ kli : 系统 在 第 1 条 成功 链中 第 i 个 阶段 的 第 k 个 状态 Skli 的 结构函数 , Φ kli = 1 , 代表 Skli 正常 , Φ kli = 0 , 代表 Skli 失效 , 是 吸收 状态 ; 
 　 　 A : 系统 的 转移率 矩阵 。 
 　 　 对于 X ( t ) , t ≥ 0 , X ( t ) ∈ S 这样 一个 马氏 过程 系统 , 求解 下列 微分方程 
 
 ( 1 ) 
 　 　 可以 得到 系统 可靠 度 R ( t ) 为 : 
 
 ( 2 ) 
 3 　 例子 分析 
 　 　 同样 让 我们 示意性 地 分析 ［ 1 ］ 中 的 FBW 系统 。 首先 划分 该 系统 的 中间状态 : 此例 的 中间状态 是 由于 系统 硬件 降阶 造成 的 。 令 系统 单 故障 工作 , 则 系统 可以 分解成 两个 阶段性 工作 状态 : A4 状态 : 四余度 电传 操纵 系统 工作 状态 和 A3 : 三余度 系统 工作 状态 。 其中 A4 状态 阶段 子系统 的 构成 是 : 四余度 管理 及 飞行 控制软件 子系统 ; 四余度 硬件 系统 ; 四余度 接口 因子 ; 共因 故障 因子 。 A3 状态 阶段 子系统 的 构成 是 : 三余度 管理 及 飞行 控制软件 子系统 ; 三余度 硬件 系统 ; 三余度 接口 因子 ; 共因 故障 因子 。 在 不同 中间状态 之间 的 状态 转移 概率 就是 单通道 硬件 系统 的 失效 概率 。 
 　 　 在 这个 系统 的 失效 历史 中 , 那些 软件 需求 错误 , 硬件 需求 错误 导致 的 失效 ( 无 记录 ) , 以及 因为 接口 不 明确 导致 的 失效 , 按照 本文 的 定义 都 应 算作 接口 失效 , 本例 中 , 表 4 的 失效 数据 即 接口 失效 数据 ; 而 系统 的 共 因 失效 只有 一个 例子 。 
 　 　 考虑 接口 及 各种 系统 级 故障 因素 , 则 ［ 1 ］ 中图 3 的 系统 状态 转移 图 就 变为 如图 1 所示 。 
 
 
 　 　 图 1 　 FBW 系统 状态 转移 图 
 则 系统 在 第 i 个 工作 阶段 的 状态 集 以及 相应 的 结构函数 值 可 列出 如下 表 所示 : 
 表 1 　 系统 工作 状态 与 结构函数 阵列 
 状态 h1h2h3h4su1ju1cu1su2ju2cu2 Φ 
 S11111111 　 　 　 1 
 S2XXXX 　 　 　 1111 
 　 　 其中 , X = 0 或 1 , 但 h1 + h2 + h3 + h4 = 3 。 即 这个 系统 有 二条 维持 系统 正常 工作 的 状态 转移 链 S1 , S1 → S2 。 
 　 　 延用 ［ 1 ］ 中 的 作法 , 可以 得出 到 系统 试验 1747 小时 时 系统 各 阶段 子系统 的 失效率 为 
 全 系统 故障率 λ = 0.00462 
 硬件 四余度 管理 及 飞行 控制软件 子系统 故障率 λ s4 = 0.00302 
 硬件 三余度 管理 及 飞行 控制软件 子系统 故障率 λ s3 = 0.00418 
 硬件 四余度 系统 故障率 λ h4 = 0.004 
 硬件 三余度 系统 故障率 λ h3 = 0.003 
 接口 故障率 λ i = 0.00104 
 共因 故障率 λ c = 1 / 1747 = 0.00057 
 　 　 令 系统 开始 工作 时 是 完好 状态 , 则 解 下列 方程 就 可以 得到 系统 状态 停留 概率分布 向量 P ( t ) = ［ P1 ( t ) P2 ( t ) P3 ( t ) ］ , 其中 , 
 
 进而 可以 求得 当 系统 运行 时间 为 1 小时 时 , 系统 可靠 度为 
 R ( 1 ) = P1 ( 1 ) + P2 ( 2 ) = 0.9954 
 　 　 其它 建模 方法 的 结果 
 　 　 用 一般 黑箱 方法 求得 四余度 FBW 系统 单 故障 工作 的 任务 可靠性 的 结果 为 
 
 　 　 图 2 为用 两个 方法 分别 计算 的 系统 任务 可靠性 曲线 , 实线 为 本文 方法 的 结果 , 虚线 为 黑箱 方法 的 结果 , 按照 本文 方法 求得 的 结果 虽然 已经 相当 保守 , 但 由于 它 考虑 到 了 软 、 硬件 的 相关 作用 , 还是 比 黑箱 方法 的 结果 好 。 
 
 图 2 　 用 两个 方法 分别 计算 的 系统 任务 可靠性 曲线 
 4 　 结论 
 　 　 本文 论述 的 方法 , 为 对 不可 修 计算机系统 进行 可靠性 分析 时 考虑 硬 、 软件 之间 的 相关 作用 提出 了 一套 比较 全面 的 解决办法 。 
 4.1 　 系统故障 类型 划分 的 覆盖性 
 　 　 本文 的 故障 类型 划分 是从 故障 产生 的 根源 进行 划分 的 , 并且 考虑 了 在 运行 环境 中 的 不可 预见 因素 ( 如共因 因素 ) , 因此 可以 说 它 覆盖 了 所有 的 故障 类型 。 
 4.2 　 对于 硬 、 件 件 相关 作用 的 描述 能力 
 　 　 由于 对 软件 可以 灵活 分解 , 为 设立 系统 中间状态 提供 了 可能 。 如果 我们 建立 了 足够 的 系统 状态 , 利用 马氏 过程 理论 就 可以 实现 对 硬 、 软件 相互作用 的 描述 。 
 4.3 　 本 方法 的 计算结果 与 对系统 的 认识 程度 有关 
 　 　 本 方法 的 分析 结果 与 对系统 的 认识 程度 有关 , 与 环境 也 是 密切相关 的 。 
 　 　 由于 各种 条件 的 限制 , 本文 将 硬 、 软件 之间 的 维修 相关性 与 其它 相关性 分开 讨论 , 其 目的 是 在 现有 条件 下 , 为 进行 硬 / 软件 综合 系统 的 可靠性 分析 做 一些 基础性 的 工作 。 在 对 实际 系统 建模 分析 时 , 应 根据 不同 的 情况 灵活处理 。 
 * 本 课题 得到 中国 博士后 科研 基金 的 资助 
 作者 单位 ： 饶岚 　 ( 清华大学 计算机系 设计 自动化 教研组 ． 北京 ． 100084 )   王占林 　 李沛琼 　 姚一平 ( 北京航空航天大学 ． 北京 ． 100083 ) 　 
 参考文献 
 　 [ 1 ] 饶岚 , 王占林 , 李沛琼 , 姚一平 . 从 硬 / 软件系统 角度 分析 软件可靠性 . 宇航学 报 
 　 [ 2 ] 孙强 南 , 孙昱东 编著 . 计算机系统 结构 . 科学出版社 , 1992 , 10 
  收稿 日期 : 1996 年 11 月 14 日 , 修回 日期 : 1998 年 4 月 20 日 
