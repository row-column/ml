航空 计测 技术 
 AVIATION   METROLOGY   &   MEASUREMENT   TECHNOLOGY 
 1999 年 　 第 19 卷 　 第 6 期 　 Vol.19 　 No.6 　 1999 
 
 
 
 航空 计量 信息管理系统 
 ORACLE6 应用软件 的 升级 
 王新 　 李涛 
 　 　 摘要 　 简要 叙述 了 航空 计量 信息管理系统 ORACLE6 应用软件 向 ORACLE7 升级 的 过程 中 遇到 的 一些 问题 和 解决办法 ， 以及 升级 后 的 效果 。 
 　 　 关键词 　 计量 　 信息管理 　 应用软件 　 升级 
 Upgrade   of   Applicable   Software   of   Aviation   Metrology 
 Information   Managing   System 
 Wang   Xin , Li   Tao 
 　 　 Abstract 　 This   paper   describes   some   problems   met   during   the   upgrade   of   applicable   software   of   information   managing   system   of   aviation   metrology , their   solving   methods   and   the   effect   after   upgrade . 
 　 　 Key   words 　 Metrology , Information   management , Applicable   software , Upgrade 
 　 　 ORACLE 数据库 以 其 移植性 好 ， 数据处理 功能强大 ， 用户界面 友好 等 一些 特点 而 赢得 了 众多 企业 的 青睐 。 在 航空 计量 信息管理系统 中 我们 也 选择 了 ORACLE 数据库 。 由于 前期 开发 的 应用软件 是 以 MS - DOS 操作系统 为 平台 ， 以 ORACLE6 关系数据库 为 核心 的 ， 为了 适应 现代 技术 的 发展 需要 ， 应 将 其 升级 到 以 WINDOWS 为 平台 ， 以 ORACLE7 关系数据库 为 核心 的 软件 。 现 介绍 航空 计量 信息管理系统 移植 过程 中 所 使用 的 一些 方法 ， 与 广大 同行 探讨 。 
 1 　 系统 的 运行 环境 
 　 　 技术 实施 方法 有赖于 系统 的 运行 环境 ， ORACLE7 关系数据库 是 采用 Client ／ Server ( 客户 ／ 服务器 ) 体系结构 。 所谓 客户 ／ 服务器 就是 分布式 处理 的 实现 。 在 客户 ／ 服务器 配置 下 ， 处理 被 分配 在 通过 网络连接 的 客户机 和 服务器 上 。 一个 简单 的 客户 ／ 服务器 配置 有 一台 机器 作为 服务器 而 其它 机器 作为 客户 ， 每台 机器 完成 不同 的 功能 。 现将 系统 运行 软件 环境 略述 如下 ： 
 　 　 操作系统 ： NOVELL   NETWARE 网络操作系统 以及 WINDOWS 环境 。 
 　 　 应用软件 ： ORACLE   DEVELOPER ／ 2000 应用软件 。 
 　 　 数据库 管理系统 ： ORACLE7   SERVER   FOR   NETWARE   V7.0 关系数据库 。 
 2 　 系统 移植 中 出现 的 问题 与 措施 
 2.1 　 网络 工作站 与 服务器 的 联接 
 　 　 ORACLE   V6.0 A 关系 型 数据库 的 应用软件 可 在 NOVELL   NETWARE 的 工作站 生成 软件 ( WSGEN ) 生成 的 网络 工作站 上 使用 ， 而 ORACLE   7   SERVER   FOR   NETWARE   V7.0 关系 型 数据库 的 应用软件 ( ORACLE   DEVELOPER ／ 2000 ) 不能 在 此 站点 上 使用 ， 因此 要用 NETWARE   3.12   CLIENT   FOR   DOS ／ WINDOWS 软件 生成 网络 工作站 ， 此 网络 工作站 采用 ODI ( 开放 数据 接口 ) 方式 上网 ， 在 这种 情况 下 ORACLE   V6.0 A 的 应用软件 仍然 能 用 。 
 2.2 　 ORACLE   V6.0 A 与 ORACLE   DEVELOPER ／ 2000 应用程序 的 区别 
 　 　 由于 原 系统 是 以 MS - DOS 为 平台 的 ORACLE   V6.0 A 关系 型 数据库 软件开发 的 ， 要 升级 为 以 WINDOWS 为 平台 的 软件 ， 做 了 以下 几 方面 的 工作 。 
 　 　 1 ) 触发器 
 　 　 在 ORACLE   SQL * FORMS   3.0 的 一个 FORM 中有 如下 的 OBJECTS ： FORM ， BLOCK ， FIELD ， TRIGGER ， FORM - LEVEL ， PROCEDURE ， 因此 ， 在 定义 查询 模块 时 ， 首先 定义 一个 控制 块 ， 其上 有 若干个 可 输入 查询 条件 的 字 段 ， 然后 再 定义 键 触发器 KEY - EXEQRY 和 PER - QUERY 执行 查询 条件 。 
 　 　 定义 KEY - EXEQRY 和 PER - QUERY 两个 键 触发 子 ， 其 PL ／ SQL 语句 分别 为 ： 
 Trigger   text : go - block ( ‘ 块 名 ’ ) ； 
 execute - query ； 
 　 　 Trigger   text : copy ( name - in ( ‘ 字段名 1 ’ ) ， ’ 字段名 2 ’ ) ； 
 而 在 ORACLE   FORMS   4.5 中 可 利用 BUTTON 对象 将 ORACLE   SOL * FORMS   3.0 中 定义 的 KEY 触发 定义 为 BUTTON 触发 ， PL ／ SQL 语句 不变 ， 使 其 操作 方便 灵活 ， 界面 更加 直观 。 
 　 　 2 ) LOV ( 值表 ) 的 定义 
 　 　 在 ORACLE   V6.0 A 的 SQL * FORMS   3.0 中 定义 的 LOV 是 采用 调用 基表 的 方式 实现 的 ， 例如 ： 在 定义 地区 值表时 ， 采用 调用 基表 的 方式 ， LIST   OF   VALUES   SQL   TEXT 语句 如下 ： 
 select   地区 名   into   变量   ( FIELDS )   from   基表 
 　 　 而 在 ORACLE   DEVELOPER ／ 2000 中 可 根据 不同 要求 定义 。 例如 ： 若值 表中 有 若干个 固定值 ， 则 可以 通过 定义 列表 字 段 ( LIST   ITEM ) 来 实现 ， 此 属于 静态 方式 。 值表要 随基表中 数据源 改变 而 改变 ， 则 可定义 LOV ， 此 属于 动态 方式 。 而且 同一个 LOV 可 支持 多 文本 项 或 其它 项 ， 还 可 利用 LOV 进行 合法 检查 。 
 　 　 3 ) 菜单 对象 的 调用 
 　 　 在 ORACLE   V6.0 A 的 SQL * MENU 中 设计 的 菜单 可 独立 运行 ， 而 在 ORACLE   DEVELOPER ／ 2000 中则 要 通过 FORM 对象 MENU   MODULE 属性 来 调用 。 
 　 　 4 ) 字段 的 唯一性 
 　 　 在 ORACLE   V6.0 A 中 定义 基表时 ， 是 通过 索引 来 控制 字段 的 唯一性 。 
 例如 ： SQL 〉 CREATE   UNIQUE   INDEX   索引 名   ON   基表 ( 唯一 字 段 ) ； 
 而 在 ORACLE   DEVELOPER ／ 2000 中 可 直接 定义 字段 的 唯一性 。 
 　 　 5 ) ORACLE   DEVELOPER ／ 2000 中 日期 的 解决办法 
 　 　 由于 全世界 的 计算机 都 存在 着 2000 年 日期 的 转换 问题 ， 因此 本 系统 中 的 日期 也 存在 这个 问题 。 ORACLE 关系 型 数据库 定义 的 缺省 日期 格式 为 DD - MON - YY ， 年份 只 占 两位 ， 因此 在 本 系统 中 日期 格式 均 定义 为 DD - MON - YYYY 格式 。 
 　 　 6 ) 表格 文件 的 升级 
 　 　 ORACLE   6.0 A   SQL * FORM3.0 中 设计 的 表格 文件 ( . INP ) 可 通过 F45RUN [ MODULE - NAME ] [ 用户名 ／ 口令 ] UPGRADE = YES ， WIDEN - FIELDS = YES 命令 ， 升级 为 DEVELOPER ／ 2000 中 的 表格 文件 ( . FMB ) . 虽然 升级 后 的 表格 可以 运行 ， 而且 定义 的 功能 与 原来 一样 ， 但是 整个 布局 差异 很大 ， 需要 修改 ， 因此 不宜 采取 此种 方式 ， 最好 重新 自行设计 。 
 　 　 7 ) 应用 报表 程序 的 升级 
 　 　 ORACLE   V6.0 A   SQL * REPORTWRITER   1.1 编制 的 报表 文件 ( . REX ) 可 通过 命令 R25MREP . EXE 升级 为 ORACLE   DEVELOPER ／ 2000 中 的 报表 文件 ， ( . RDF ) . 升级 后 ， SCREEN 显示 和 原来 一样 ， 但 以 PREVIEWER ( 模拟 显示 ) 和 PRINTER 方式 显示 和 打印 时 与 原 设计 不同 ， 因此 ， 应 重新 自行设计 。 
 　 　 8 ) 数据 的 完整性 的 实现 
 　 　 在 本 系统 中 ， 利用 ORACLE   V6.0 A 实现 基表 之间 的 关联 是 通过 触发 子来 实现 的 ， 而 在 ORACLE   7   SERVER   FOR   NETWARE   V7.0 中 可以 通过 定义 字段 的 主键 和 外部 键来 实现 。 
 3 　 应用软件 在 网络 上 的 运行 分析 
 　 　 ORACLE   V6.0 A   UTILITY 应用软件 中有 IMP ( 载入 ) 、 EXP ( 卸出 ) 命令 ， 而 ORACLE   DEVELOPER ／ 2000 应用软件 中无此 命令 ， 只能 在 ORACLE   7   SERVER   FOR   NETWARE   V7.0 . 核心 软件 中 使用 ， 由于 ORACLE   7 核心 软件 是 装 在 服务器 上 的 ， 因此 对于 网络 数据库 提供 了 良好 的 安全措施 。 
 　 　 ORACLE   V6.0 A   SQL * FORMS   3.0 调用 SQL  REPORT 文件 是 通过 调用 宿主 命令 HOST ， 而 HOST 命令行 在 DOS 平台 上 的 最大 长度 为 127 个 字节 ， 限制 了 参数 的 传递 ， 例如 ： 
 HOST ( ‘ RUNREP 路径名 \ 用户名 ／ 口令 
 DESTYPE = FILE ’ ｜ ｜ ’ 
 参数 名 = ‘ ｜ ｜ 变量 ｜ ｜ ’ ， NO - SCREEN ) ； 
 在 ORACLE   DEVELOPER ／ 2000 中 可以 通过 参数表 在 被 集成 模块 之间 传递数据 和 参数 ， 参数表 是 一个 PL ／ SQL 对象 ， 在 运行 期间 生成 。 其中 存放 的 是 要 传递 的 参数 的 名称 和 值 。 
 　 　 ORACLE   REPORTS   2.5 可以 使用 PL ／ SQL 语句 定义 触发 子 ， 而 SQL * REPORTWRITER1.1 中 没有 。 这样 ， 可以 使 报表 灵活 多变 ， 以 满足 不同 用户 的 需求 。 
 　 　 在 ORACLE   V6.0 A 数据库 向 ORACLE   V7.0 网上 数据库 移植 过程 中 ， 需注意 字符集 的 匹配 问题 ， 即 NATIONAL   LANGUAGE   SUPPORT 要 一致 。 
 作者简介 : 王新 　 31 岁 　 男 　 工程师 
 作者 单位 : 北京 长城 计量 测试 研究所 ， 北京市 1066 信箱 ， 100095 
 参考文献 
 　 　 1 　 ORACLE   DEVELOPER ／ 2000 协同 开发 环境 ( CDE2 ) 
 　 　 2 　 ORACLE   DEVELOPER ／ 2000 使用 技术 与 方法 
 　 　 3 　 ORACLE   V7 技术 手册 
 　 　 4 　 NOVELL   NETWARE   386   V3.11 技术 丛书 
 　 　 5 　 WINDOWS   95 使用 大全 
 1998 - 07 - 03 收稿 
