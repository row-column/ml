计算机 工程 
 Computer   Engineering 
 1999 年 　 第 25 卷 　 第 9 期 　 Vol.25   No.9     1999 
 
 
 
 基于 Agent 的 多域 网络安全 模型 
 张伟奇 　 汪为 农 
 　 　 摘 　 要 ： 根据 当前 网络系统 的 开放性 、 分布 性 等 特点 ， 分析 并 提出 了 一种 基于 Agent 的 多域 网络安全 域 、 自治 安全 域 和 安全 Agent 的 体系结构 进行 了 讨论 ． 
 　 　 关键词 ： 安全 域 ； 代理 ； 远程 方法 调用 
 Multi - domain   Network   Security   Model   Based   on   Agent 
 Zhang   Weiqi   Wang   Weinong 
 ( Department   of   Computer   Science   and   Engineering   of   Shanghai   Jiaotong   Unviersity ,   Shanghai   200030 ) 
 　 　 Abstract 　 According   to   the   open   feature   and   distribution   of   current   networks ,   this   paper   analyzes   a   multi - domain   security   model   based   on   Agent .   Also ,   the   architectures   of   multi - domain   security   model ,   autonomous   security   domain   and   security   Agent   are   discussed . 
 　 　 Key   words 　 Security   domain ;   Agent ;   RMI 
 　 　 对于 一个 巨型 的 异构 网络 ， 如何 进行 有效 的 安全 管理 和 控制 ？ 从 现实 的 信息 基础 结构 的 角度 来看 ， 一个 有效 的 解决 方法 是 将 一个 巨型 网络系统 划分 为 许多 小 的 自治 安全 域 ， 这样 就 可以 将 大型 网络 的 认证 、 授权 、 审计 和 安全控制 等 任务 交给 下面 的 自治 域 代理 （ Agent ） 来 完成 ， 从而 建立 层次 型 的 安全 管理体制 。 
 1 　 基于 Agent 的 多 安全 域 模型 
 　 　 定义   安全 域 是 由 同一个 管理器 管理 的 一组 安全 主体 和 客体 ， 在 安全 域 中 的 所有 对象 的 活动 都 按照 同种 或 相似 的 安全 规则 进行 工作 [ 1 ] 。 一个 安全 域 具有 比较 明确 的 边界 ， 也就是说 ， 安全 域 之间 的 通信 有且 只能 有 一个 " 扼流点 " ， 所有 的 域 间通信 必须 通过 这个 扼流点 的 检查 。 但 由于 各个 安全 域 之间 的 平台 、 协议 、 策略 等 的 差异 ， 域间 进行 互操作 的 难度 相当 大 。 整个 网络系统 的 安全性 最终 必须 通过 自治 域 之间 的 数据 协作 处理 和 信息 共享 互 用来 实现 ， 这 就 有 一个 安全 域 之间 和域 内 对象 之间 安全 通信 的 问题 。 所以 必须 将 Agent 引入 安全 域 ， 通过 定义 Agent 间 的 统一 、 安全 的 通信协议 ， 来 解决 异构 网络 环境 下 的 通信 问题 。 
 　 　 Agent 至今 没有 一个 统一 的 定义 ， 只能 对 它 作 一个 大致 的 描述 。 Agent 是 一个 抽象 的 实体 ， 它 能 作用 于 自身 和 外界 环境 ， 并 能 对 外界 环境 作出反应 [ 2 ] 。 基于 Agent 的 多 安全 域 模型 如图 1 所示 。 
 
 图 1 　 基于 Agent 的 多 安全 域 模型 
 　 　 . 系统 要素 ： MOM （ Monitor   Of   Monitor ） 、 域 安全 管理 Agent 、 客户 Agent ， 实际上 MOM 可以 被 看作 是 一个 超级 Agent 。 
 　 　 . 安全 域 划分 原则 ： 整个 网络系统 按 特定 策略 ( 地理分布 或 组织 ) 被 分成 多个 安全 域 ， 分别 为 D0 ， D1 ， D2 … … 。 D0 仅 包括 MOM 和域 管理 Agent ， 称为 主干 域 。 域 D1 、 D ２ 等 包括 域 管理 Agent 、 客户 Agent 。 主干 域和域 的 体系结构 基本一致 ， 主要 是 作用 对象 和 范围 不同 。 按照 类似 的 方法 ， 可以 在 一个 域 中 划分 出 多个 子域 。 这样 整个 网络 就 形成 一个 树型 的 逻辑 结构 ， 它 符合 了 现实 的 网络体系结构 。 
 　 　 . 管理 原则 ： MOM 面向 主干 域 ， 负责管理 所有 域 管理 Agent ， MOM   作为 所有 域 管理 Agent 共同 信任 的 第三方 ， 一方面 提供 认证 服务 ， 另一方面 接收 各个 域 的 安全事件 报告 ， 并 为 不同 的 安全 域 配置 相应 的 信任 关系 和 安全级别 ， 配置 安全 事务 软件 ， 同时 对域 间 的 安全 通信 作 审计 和 分析 。 域 管理 Agent 面向 管理 域 ， 负责管理 客户 Agent 。 
 　 　 MOM 和 各级 Agent 都 带有 一个 拓扑 信息 表 ， 它 包含 到 上级 Agent 、 同级 Agent 以及 本地 资源 的 可达性 信息 （ 位置 、 安全级别 、 域 信任 关系 以及 客户 访问 权限 等 ） 和 简单 的 路由 信息 ， 其 工作 原理 类似 于 DNS 。 在 MOM 和 子域 管理 Agent 、 域 管理 Agent 和 客户 Agent 之间 进行 通信 时 ， 首先 应 检查 本地 拓扑 信息 表 。 本地 拓扑 表 掌握 着 它 所 管理 的 域 内 资源 的 可达性 信息 和 基本 路由 信息 。 比如 客户 Agent 发出请求 给 子域 管理 Agent 时 ， 子域 管理 Agent 查 自己 的 表 。 如 目标 不 在 同一 子域 ， 则 将 请求 交给 上级 Agent 。 上级 Agent 根据 客户 的 权限 和源 ／ 目标 域 的 信任 关系 、 安全级别 等 进行 认证 ， 判定 是否 进行 应答 ， 如果 允许 则 回答 这个 请求 , 子域 Agent 获得 授权 后 与 目标 域 建立 连接 ， 完成 被 请求 的 任务 。 
 　 　 . 各个 域 的 拓扑 信息 的 算法 基本 类似 ， 下面 以 主干 域 为例 ， 给出 拓扑 算法 ： 
 　 　 . 系统管理员 设定 MOM 和 备份 MOM 、 子域 管理 Agent 和 备份 子域 管理 Agent ； 
 　 　 . 首次 启动 后 或 正常 结束 前 ， 子域 管理 Agent 必须 向 MOM 发送 在线 ／ 离线 事件 ； 
 　 　 . 子域 管理 Agent 发生 故障 时 ， 备份 子域 管理 Agent 接替 工作 ， 并 向 MOM 报告 故障 事件 ； 
 　 　 . MOM 根据 事件 类型 修改 拓扑 信息 表 ， 并 向 所有 在线 子域 管理 Agent 和 备份 MOM 发送 更新 的 拓扑 信息 ； 
 　 　 . 子域 管理 Agent 按照 MOM 发来 的 信息 修改 拓扑 信息 表 ， 并 定时 做 备份 。 
 2 　 安全 域 的 体系结构 
 　 　 基于 Agent 的 多 安全 域 的 解决方案 中 ， 每个 域应 采用 多种 安全 技术 ， 由内而外 、 自下而上 提供 多层 保护 。 其中 每个 自治 域 管理 Agent 至少 应 包括 防火墙 Agent 、 网络安全 管理 Agent 、 域 安全 认证 Agent 和 授权 服务 Agent 等 安全 服务器 ( 如图 2 ) 。 域 内 或 域外 的 用户 对域 内 资源 的 访问 ( 如 FTP   Server ， Email   Server 等 ) ， 最终 是 通过 单个 域 管理 Agent 或 不同 域 管理 Agent 之间 的 协作 来 解决 安全 互通 。 
 
 图 2 　 安全 域 体系结构 
 　 　 每个 域 的 网络安全 管理 Agent ， 根据 系统管理员 的 安全策略 ( 如域 的 安全 规则 集 、 域间 信任 关系 和 各种 管理 对象 ) 来 保证 用户 安全 使用 网络 。 它 的 主要 功能 是 ： 
 　 　 . 完成 域 安全 工作 状态 的 跟踪 ， 及时 收集 网络 上 的 安全事件 ， 进行 适当 的 审计 分析 ， 生成 各种 安全 信息 数据库 ， 使得 系统 可以 及时 地 发现 网络 的 安全 故障 ， 并 及时 地 采用 相应 的 安全措施 ； 
 　 　 . 对本域 内 的 服务器 配置 安全 服务 软件 ， 制定 安全策略 ， 派遣 安全 任务 ， 对域 内 的 管理 对象 的 安全级别 和 安全性 漏洞 进行 分配 、 管理 和 检查 ； 
 　 　 . 对 防火墙 Agent 进行 轮询 收集 安全 管理 信息 ， 将 动态变化 的 安全策略 反映 到 防火墙 Agent 的 安全 控制策略 上 。 
 　 　 . 向 上级 域 安全 管理 Agent 报告 本域 内 重要 的 安全事件 和 涉及 多个 域 的 安全事件 ， 并 接受 上级 Agent 的 配置 ／ 控制 和 有关 软件 、 事务 、 消息 。 
 　 　 由于 安全 域 之间 通过 不可 信任 的 公网 互联 ， 存在 外部 非法 用户 使用 本域 内 网络资源 的 可能 ， 必须 验证 用户 身份 ， 为此 在域 安全 管理 Agent 中 加入 认证 服务 Agent 。 授权 服务 Agent 的 功能 是 对 客户端 访问 进行 授权 工作 。 末端 服务器 将 各个 客户 的 访问 权限 和 安全级别 发给 授权 服务器 ， 由 它 来 负责 分发 授权 票据 给 已经 认证 的 客户 。 如 外部 用户 需 访问 域 内 的 数据库 ， 首先 由 认证 服务 Agent 发 认证 票根 ， 然后 由 授权 服务 Agent 发 授权 票根 ， 协同 防火墙 Agent 一起 对 用户 请求 进行 控制 的 任务 。 授权 服务 Agent 、 认证 服务 Agent 和域 网络安全 管理 Agent 协同 维护 本地 拓扑 信息 表 。 
 3 　 安全 Agent 的 体系结构 
 　 　 域 管理   Agent   中 的 各个 安全 服务器 都 是 以   Agent   的 方式 工作 的 。 这 主要 是 考虑 各类 安全 服务器之间 进行 有效 的 对话 。 Agent   模式 使 各种 服务器 统一 于 一种 平台 、 协议 和 语言 。 Java   虚拟机 
 ( JVM ) 可以 在 各种 计算机 ( 服务器 、 工作站 、 PC 等 ) 上 建立 单一 的 一致性 应用 程序接口 。 Java 中 的 RMI ( 远程 方法 调用 ) 为 基于 Client / Server 机制 的 对象 间 的 通信 提供 了 解决方案 [ 3 ] 。 因此 ， 这里 将 JVM 和 RMI 引入 了 安全 Agent 的 体系结构 中 ， 如图 3 所示 。 从 安全 域 的 应用 出发 ， 将 Agent 分成 3 层 ： 应用层 、 工作 层 和 通信 层 。 
 
 图 3   安全 Agent 的 体系结构 
 3.1   Agent 的 系统 要素 描述 
 　 　 应用层 为 Agent 独自 的 工作 空间 ， Agent 通过 该层 来 完成 分配 给 它 在 其 能力 范围 内 的 安全 服务 工作 。 不同 的 Agent 有 不同 的 能力 和 知识 ， 这样 每个 域 安全 管理 Agent 可以 制定 出 自己 的 安全策略 。 
 　 　 工作 层 提供 与 应用层 的 界面 ， 根据 应用层 传递 的 信息 ， 评估 模块 判断 出 任务 是否 可 由 本地 安全 服务器 Agent 完成 ， 或是 必须 同 其它 安全 域 协同 完成 ， 或是 交付 下 一级 的 安全 服务 Agent 来 完成 。 相应 地 ， 评估 模块 将 任务 交付 下列 模块 分别 处理 ： 本地 模块 、 协作 模块 和 下级 Agent 接口 模块 。 3 个 模块 在 JVM 上 得到 统一 的 工作 平台 ， 通过 RMI 进行 有效 的 对话 ， 从而 协同 完成 安全 服务 。 
 　 　 工作 层 的 结构 比较复杂 ， 对 各个 模块 说明 如下 ： 
 　 　 ( 1 ) 本地 模块 ： 完成 落 在 本域 范围 内 的 任务 。 包括 拓扑 机 、 推理机 、 学习机 和 系统安全 数据仓库 。 
 　 　 . 本地 拓扑 机 ： 为 本域 内 客户 Agent 发出 的 资源 请求 或 目标 资源 落 在 本域 内 的 请求 提供 定位 服务 ； 
 　 　 . 推理机 ： 利用 已有 的 安全 知识 、 规则 等 ， 对 请求 进行 安全检查 ， 作出 判断 ； 
 　 　 . 学习机 ： 把 推理机 得出 的 或 上级 Agent 提供 的 安全 知识 ， 加入 系统安全 知识库 ， 使 系统 具有 一定 的 学习 能力 ， 提高 安全事件 检查 能力 ， 及时发现 网络攻击 事件 ； 
 　 　 . 系统安全 知识 仓库 ： 存放 本 Agent 有关 安全 知识 ， 是 Agent 借以 决策 的 依据 。 
 　 　 ( 2 ) 协作 模块 ： 负责 Agent 之间 的 通信 和 交互 ， 向 上级 Agent 报告 本地 的 安全事件 ， 接受 来自 上级 Agent 的 指令 ， 提交 涉及 其他 域 的 请求 。 这些 功能 通过 消息 驱动 机制 来 实现 ， 主要 包括 以下 几 方面 ： 
 　 　 . 协作 拓扑 机 ： 定位 本域 用户 发出 的 请求 应落 在 本 Agent 以外 的 哪个 Agent 。 这种 拓扑 服务 需要 上级 Agent 的 拓扑 机 的 协作 ， 其 工作 原理 类似 于 DNS 。 
 　 　 . 信任 域 关系 ： 描述 本 Agent 的 安全 能力 和 级别 ， Agent 间 的 信任 关系 。 
 　 　 ( 3 ) 下级 Agent 接口 模块 ： 为域 安全 管理 Agent 和 被 管理 对象 ( 服务器 、 主机 等 ) 之间 的 通信 提供 接口 。 这 模块 包括 ３ 部分 ： 事件 报 、 软件 分发 ／ 任务 派遣 和 JDBC 。 本 接口 通过 JDBC 访问 数据库 ， 数据库 存放 管理 对象 的 有关 安全 信息 。 通过 事件 报 机制 ， Agent 接收 下级 管理 对象 的 安全事件 报告 。 Agent 通过 软件 分发 ／ 任务 派遣 为 管理 对象 配置 安全策略 ， 分发 升级 软件 ， 实现 对 管理 对象 的 远程 控制 。 Agent 和 下级 管理 对象 间 的 通信 通过 RMI 机制 来 实现 。 通信 层 主要 是 由 TCP / IP 协议 栈 组成 的 。 
 3.2   Agent 基本功能 的 实现 
 　 　 ( 1 ) 软件 分发 / 任务 派遣 
 　 　 在 网络安全 系统 中 ， 即使 系统 已经 十分 完善 ， 也 无法 覆盖 所有 的 安全 要求 ； 此外 ， 系统 随着 硬件平台 、 OS 的 升级 也 要 进行 相应 的 软件 升级 。 所以 ， Agent 必需 实现 软件 分发 和 动态 任务 配置 机制 。 通过 独立 于 平台 的 Java 语言 ， 可以 在 异构 网络 环境 下 实现 这个 功能 ： 
 　 　 . MOM 将 用 Java 语言 开发 的 安全 服务 软件 和 用 Java 描述 的 安全策略 形式化 文本 编译 后 ， 通过 软件 分发 / 任务 派遣 接口 以 Java 字节 码 形式 发送给 下级 Agent ; 
 　 　 . 接收者 收到 的 若 为 分发 软件 ， 则 通过 本地 的 软件 服务 对象 来 完成 新 软件 的 安装 配置 ； 
 　 　 . 接收者 收到 的 若 为 动态 任务 ， 则 由 本地 的 软件 服务 对象 解释 执行 它 ， 并 将 执行 的 结果 提交 给 上级 Agent 。 
 　 　 ( 2 ) 多域 通信 
 　 　 RMI 是 Java 中 实现 远程 方法 调用 的 机制 。 RMI 是 基于 TCP 的 ， 所以 比 RPC ( 基于 UDP ) 更 可靠 。 通过 RMI ， Agent 获取 远程 对象 的 指针 、 传送 参数 、 调用 远端 对象 的 服务 方法 。 这样 ， 在 一定 信任 关系 的 控制 下 ， 不同 安全 域 的 管理 Agent 可以 相互 调用 管理 对象 的 方法 ， 如同 调用 本地 方法 一样 ， 从而 实现 多域 通信 。 
 　 　 ( 3 ) 事件报告 
 　 　 Agent 中 的 本地 模块 具备 一定 的 决策 能力 ， 当 它 的 配置 条件 满足 时 ， 可以 认为 发生 了 某种 安全事件 。 这时 本地 模块 触发 事件报告 ， Agent 通过 协作 模块 向 上级 Agent 报告 。 事件报告 机制 相对 于 轮询 而言 ， 可以 减少 网络 的 流量 。 事件报告 的 关键在于 本地 模块 的 系统安全 知识库 的 不断丰富 完善 ， 使 Agent 具备 较 高 的 智能 。 
 4 　 结论 
 　 　 在 开放 的 、 分布式 的 网络 环境 下 ， 网络 安全性 的 问题 日益突出 。 现有 的 网络安全 模型 已 不能 胜任 实际 的 需求 ， 必须 找到 一种 新 的 网络安全 模型 ， 从 理论 上 形式化 地 证明 它 是 安全 的 ， 在 此基础 上 建立 全新 的 网络安全 管理系统 ， 这是 不容置疑 的 趋势 。 Agent 概念 的 引入 ， 使得 本文 构造 的 多域 安全 模型 能 提供 更好 的 自治 性 和 协作性 ， 可以 提供 更 高级 更 有效 的 安全 协作 通信 能力 。 
 作者简介 ： 张伟奇 ( 1974 ～ ) ， 男 ， 研究生 ， 主研 方向 ： 网络安全 
 作者 单位 ： 上海交通大学 计算机科学 及 工程系 ， 上海 　 200030 
 参考文献 
 1   余巍 . 多域 网络安全 体系结构 研究 [ 博士论文 ] . 上海 ： 上海 交通 大通   学 ， 1997 - 10 
 2   McKay   D , Pastor   J , McEntire   R   at   el . An   Architecture   for   Information   Agents . In   Advanced   Planning   Technology ( ed .   Austin   Tate ) , The   AAAI   Press , Menlo   Park , CA . , USA , 1996   
 3   Heller   P , Roberts   S . Java 高级 开发 指南 . 北京 : 电子 工业 出版社 , 1997 
 4   余巍 , 吕葵 , 唐冶文 等 . 分布式 自治 域 的 安全 认证 研究 . 计算机 工程 ,   1998 , 24 ( 6 ) : 38 
 收稿 日期 ： 1998 - 12 - 10 　 修回 日期 ： 1999 - 08 - 13 
